{"/home/travis/build/npmtest/node-npmtest-mongodb-core/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_mongodb_core */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/lib.npmtest_mongodb_core.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/lib.npmtest_mongodb_core.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":57}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":63}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_mongodb_core */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_mongodb_core = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_mongodb_core = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":56}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":70},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-mongodb-core && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_mongodb_core */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_mongodb_core","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_mongodb_core.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_mongodb_core.rollup.js'] =","            local.assetsDict['/assets.npmtest_mongodb_core.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_mongodb_core.__dirname + '/lib.npmtest_mongodb_core.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/index.js","s":{"1":1,"2":1,"3":1,"4":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":27}},"2":{"start":{"line":3,"column":0},"end":{"line":7,"column":15}},"3":{"start":{"line":5,"column":4},"end":{"line":5,"column":40}},"4":{"start":{"line":9,"column":0},"end":{"line":27,"column":1}}},"branchMap":{},"code":["var BSON = require('bson');","","try {","  // try { BSON = require('bson-ext'); } catch(err) {","    BSON = require_optional('bson-ext');","  // }","} catch(err) {}","","module.exports = {","    MongoError: require('./lib/error')","  , Connection: require('./lib/connection/connection')","  , Server: require('./lib/topologies/server')","  , ReplSet: require('./lib/topologies/replset')","  , Mongos: require('./lib/topologies/mongos')","  , Logger: require('./lib/connection/logger')","  , Cursor: require('./lib/cursor')","  , ReadPreference: require('./lib/topologies/read_preference')","  , BSON: BSON","  // Raw operations","  , Query: require('./lib/connection/commands').Query","  // Auth mechanisms","  , MongoCR: require('./lib/auth/mongocr')","  , X509: require('./lib/auth/x509')","  , Plain: require('./lib/auth/plain')","  , GSSAPI: require('./lib/auth/gssapi')","  , ScramSHA1: require('./lib/auth/scram')","}",""],"l":{"1":1,"3":1,"5":1,"9":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/error.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/error.js","s":{"1":1,"2":4,"3":4,"4":4,"5":1,"6":2,"7":2,"8":2,"9":2,"10":0,"11":0,"12":0,"13":0,"14":0,"15":2,"16":1,"17":1},"b":{"1":[2,0],"2":[0,0],"3":[0,0,0,0]},"f":{"1":4,"2":2},"fnMap":{"1":{"name":"MongoError","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":29}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":20},"end":{"line":22,"column":38}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":14,"column":1}},"2":{"start":{"line":11,"column":2},"end":{"line":11,"column":27}},"3":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"4":{"start":{"line":13,"column":2},"end":{"line":13,"column":44}},"5":{"start":{"line":22,"column":0},"end":{"line":39,"column":1}},"6":{"start":{"line":23,"column":2},"end":{"line":23,"column":17}},"7":{"start":{"line":25,"column":2},"end":{"line":36,"column":3}},"8":{"start":{"line":26,"column":4},"end":{"line":26,"column":42}},"9":{"start":{"line":27,"column":4},"end":{"line":27,"column":30}},"10":{"start":{"line":28,"column":9},"end":{"line":36,"column":3}},"11":{"start":{"line":29,"column":4},"end":{"line":29,"column":34}},"12":{"start":{"line":31,"column":4},"end":{"line":31,"column":85}},"13":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"14":{"start":{"line":34,"column":6},"end":{"line":34,"column":32}},"15":{"start":{"line":38,"column":2},"end":{"line":38,"column":13}},"16":{"start":{"line":42,"column":0},"end":{"line":42,"column":33}},"17":{"start":{"line":44,"column":0},"end":{"line":44,"column":28}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":9},"end":{"line":28,"column":9}},{"start":{"line":28,"column":9},"end":{"line":28,"column":9}}]},"3":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":25},"end":{"line":31,"column":40}},{"start":{"line":31,"column":44},"end":{"line":31,"column":58}},{"start":{"line":31,"column":62},"end":{"line":31,"column":74}},{"start":{"line":31,"column":78},"end":{"line":31,"column":83}}]}},"code":["\"use strict\";","","/**"," * Creates a new MongoError"," * @class"," * @augments Error"," * @param {string} message The error message"," * @return {MongoError} A MongoError instance"," */","function MongoError(message) {","  this.name = 'MongoError';","  this.message = message;","  Error.captureStackTrace(this, MongoError);","}","","/**"," * Creates a new MongoError object"," * @method"," * @param {object} options The error options"," * @return {MongoError} A MongoError instance"," */","MongoError.create = function(options) {","  var err = null;","","  if(options instanceof Error) {","    err = new MongoError(options.message);","    err.stack = options.stack;","  } else if(typeof options == 'string') {","    err = new MongoError(options);","  } else {","    err = new MongoError(options.message || options.errmsg || options.$err || \"n/a\");","    // Other options","    for(var name in options) {","      err[name] = options[name];","    }","  }","","  return err;","}","","// Extend JavaScript error","MongoError.prototype = new Error;","","module.exports = MongoError;",""],"l":{"10":1,"11":4,"12":4,"13":4,"22":1,"23":2,"25":2,"26":2,"27":2,"28":0,"29":0,"31":0,"33":0,"34":0,"38":2,"42":1,"44":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/connection/connection.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/connection/connection.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":2,"9":2,"10":2,"11":2,"12":0,"13":2,"14":2,"15":2,"16":2,"17":2,"18":0,"19":2,"20":2,"21":2,"22":2,"23":2,"24":2,"25":2,"26":2,"27":2,"28":2,"29":2,"30":2,"31":2,"32":2,"33":2,"34":2,"35":2,"36":2,"37":2,"38":2,"39":2,"40":2,"41":2,"42":2,"43":2,"44":2,"45":2,"46":2,"47":2,"48":2,"49":1,"50":1,"51":0,"52":0,"53":1,"54":0,"55":0,"56":1,"57":0,"58":0,"59":1,"60":0,"61":1,"62":0,"63":1,"64":0,"65":1,"66":0,"67":1,"68":2,"69":2,"70":0,"71":2,"72":0,"73":2,"74":2,"75":1,"76":2,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":2,"84":2,"85":0,"86":2,"87":0,"88":2,"89":0,"90":1,"91":2,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":1,"166":1,"167":0,"168":0,"169":0,"170":1,"171":2,"172":2,"173":2,"174":0,"175":2,"176":0,"177":0,"178":0,"179":2,"180":2,"181":2,"182":2,"183":2,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":2,"211":0,"212":0,"213":2,"214":2,"215":2,"216":2,"217":1,"218":0,"219":0,"220":0,"221":0,"222":0,"223":1,"224":2,"225":0,"226":2,"227":2,"228":2,"229":2,"230":2,"231":1,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":1,"243":0,"244":1,"245":0,"246":1,"247":0,"248":0,"249":0,"250":1},"b":{"1":[2,0],"2":[0,2],"3":[2,2],"4":[0,2],"5":[2,0],"6":[2,0],"7":[2,0],"8":[2,2],"9":[2,0],"10":[2,0],"11":[2,0],"12":[0,2],"13":[2,0],"14":[2,2],"15":[2,2],"16":[2,2],"17":[2,2],"18":[2,2],"19":[2,0],"20":[2,0],"21":[2,0],"22":[2,0],"23":[2,0],"24":[2,0],"25":[2,0],"26":[2,0],"27":[0,0],"28":[0,0],"29":[0,2],"30":[0,2],"31":[2,0],"32":[0,0],"33":[0,0],"34":[0,2],"35":[0,2],"36":[0,2],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0,0],"48":[0,0],"49":[0,0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[2,2],"55":[0,2],"56":[0,2],"57":[0,2],"58":[0,2],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,2],"71":[2,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":2,"10":2,"11":2,"12":0,"13":2,"14":2,"15":2,"16":0,"17":0,"18":2,"19":0,"20":0,"21":0,"22":0,"23":0,"24":2,"25":0,"26":0,"27":0,"28":0},"fnMap":{"1":{"name":"(anonymous_1)","line":50,"loc":{"start":{"line":50,"column":17},"end":{"line":50,"column":51}}},"2":{"name":"(anonymous_2)","line":134,"loc":{"start":{"line":134,"column":40},"end":{"line":134,"column":56}}},"3":{"name":"(anonymous_3)","line":140,"loc":{"start":{"line":140,"column":42},"end":{"line":140,"column":53}}},"4":{"name":"(anonymous_4)","line":146,"loc":{"start":{"line":146,"column":40},"end":{"line":146,"column":51}}},"5":{"name":"(anonymous_5)","line":151,"loc":{"start":{"line":151,"column":41},"end":{"line":151,"column":52}}},"6":{"name":"(anonymous_6)","line":155,"loc":{"start":{"line":155,"column":25},"end":{"line":155,"column":36}}},"7":{"name":"deleteConnection","line":159,"loc":{"start":{"line":159,"column":0},"end":{"line":159,"column":30}}},"8":{"name":"addConnection","line":164,"loc":{"start":{"line":164,"column":0},"end":{"line":164,"column":39}}},"9":{"name":"(anonymous_9)","line":171,"loc":{"start":{"line":171,"column":19},"end":{"line":171,"column":34}}},"10":{"name":"(anonymous_10)","line":172,"loc":{"start":{"line":172,"column":9},"end":{"line":172,"column":23}}},"11":{"name":"(anonymous_11)","line":181,"loc":{"start":{"line":181,"column":21},"end":{"line":181,"column":36}}},"12":{"name":"(anonymous_12)","line":182,"loc":{"start":{"line":182,"column":9},"end":{"line":182,"column":20}}},"13":{"name":"(anonymous_13)","line":193,"loc":{"start":{"line":193,"column":19},"end":{"line":193,"column":34}}},"14":{"name":"(anonymous_14)","line":194,"loc":{"start":{"line":194,"column":9},"end":{"line":194,"column":28}}},"15":{"name":"(anonymous_15)","line":208,"loc":{"start":{"line":208,"column":18},"end":{"line":208,"column":33}}},"16":{"name":"(anonymous_16)","line":209,"loc":{"start":{"line":209,"column":9},"end":{"line":209,"column":24}}},"17":{"name":"merge","line":373,"loc":{"start":{"line":373,"column":0},"end":{"line":373,"column":35}}},"18":{"name":"(anonymous_18)","line":386,"loc":{"start":{"line":386,"column":31},"end":{"line":386,"column":50}}},"19":{"name":"(anonymous_19)","line":430,"loc":{"start":{"line":430,"column":39},"end":{"line":430,"column":50}}},"20":{"name":"(anonymous_20)","line":443,"loc":{"start":{"line":443,"column":68},"end":{"line":443,"column":79}}},"21":{"name":"(anonymous_21)","line":456,"loc":{"start":{"line":456,"column":34},"end":{"line":456,"column":45}}},"22":{"name":"(anonymous_22)","line":476,"loc":{"start":{"line":476,"column":29},"end":{"line":476,"column":40}}},"23":{"name":"(anonymous_23)","line":480,"loc":{"start":{"line":480,"column":25},"end":{"line":480,"column":36}}},"24":{"name":"(anonymous_24)","line":490,"loc":{"start":{"line":490,"column":31},"end":{"line":490,"column":42}}},"25":{"name":"(anonymous_25)","line":508,"loc":{"start":{"line":508,"column":29},"end":{"line":508,"column":46}}},"26":{"name":"(anonymous_26)","line":531,"loc":{"start":{"line":531,"column":32},"end":{"line":531,"column":43}}},"27":{"name":"(anonymous_27)","line":540,"loc":{"start":{"line":540,"column":30},"end":{"line":540,"column":41}}},"28":{"name":"(anonymous_28)","line":549,"loc":{"start":{"line":549,"column":35},"end":{"line":549,"column":46}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":12,"column":33}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":12}},"3":{"start":{"line":15,"column":0},"end":{"line":17,"column":100}},"4":{"start":{"line":18,"column":0},"end":{"line":18,"column":33}},"5":{"start":{"line":19,"column":0},"end":{"line":19,"column":21}},"6":{"start":{"line":50,"column":0},"end":{"line":130,"column":1}},"7":{"start":{"line":52,"column":2},"end":{"line":52,"column":26}},"8":{"start":{"line":54,"column":2},"end":{"line":54,"column":31}},"9":{"start":{"line":56,"column":2},"end":{"line":56,"column":18}},"10":{"start":{"line":58,"column":2},"end":{"line":58,"column":46}},"11":{"start":{"line":60,"column":2},"end":{"line":60,"column":70}},"12":{"start":{"line":60,"column":20},"end":{"line":60,"column":70}},"13":{"start":{"line":62,"column":2},"end":{"line":62,"column":27}},"14":{"start":{"line":64,"column":2},"end":{"line":64,"column":25}},"15":{"start":{"line":66,"column":2},"end":{"line":66,"column":39}},"16":{"start":{"line":69,"column":2},"end":{"line":69,"column":81}},"17":{"start":{"line":71,"column":2},"end":{"line":71,"column":154}},"18":{"start":{"line":71,"column":28},"end":{"line":71,"column":154}},"19":{"start":{"line":74,"column":2},"end":{"line":74,"column":36}},"20":{"start":{"line":75,"column":2},"end":{"line":75,"column":42}},"21":{"start":{"line":76,"column":2},"end":{"line":76,"column":84}},"22":{"start":{"line":77,"column":2},"end":{"line":77,"column":66}},"23":{"start":{"line":78,"column":2},"end":{"line":78,"column":78}},"24":{"start":{"line":79,"column":2},"end":{"line":79,"column":58}},"25":{"start":{"line":80,"column":2},"end":{"line":80,"column":50}},"26":{"start":{"line":83,"column":2},"end":{"line":83,"column":25}},"27":{"start":{"line":86,"column":2},"end":{"line":86,"column":52}},"28":{"start":{"line":89,"column":2},"end":{"line":89,"column":129}},"29":{"start":{"line":90,"column":2},"end":{"line":90,"column":88}},"30":{"start":{"line":93,"column":2},"end":{"line":93,"column":31}},"31":{"start":{"line":94,"column":2},"end":{"line":94,"column":33}},"32":{"start":{"line":95,"column":2},"end":{"line":95,"column":35}},"33":{"start":{"line":96,"column":2},"end":{"line":96,"column":33}},"34":{"start":{"line":97,"column":2},"end":{"line":97,"column":47}},"35":{"start":{"line":98,"column":2},"end":{"line":98,"column":67}},"36":{"start":{"line":99,"column":2},"end":{"line":99,"column":111}},"37":{"start":{"line":100,"column":2},"end":{"line":101,"column":93}},"38":{"start":{"line":104,"column":2},"end":{"line":104,"column":48}},"39":{"start":{"line":104,"column":16},"end":{"line":104,"column":48}},"40":{"start":{"line":107,"column":2},"end":{"line":111,"column":3}},"41":{"start":{"line":114,"column":2},"end":{"line":114,"column":24}},"42":{"start":{"line":115,"column":2},"end":{"line":115,"column":18}},"43":{"start":{"line":118,"column":2},"end":{"line":118,"column":25}},"44":{"start":{"line":119,"column":2},"end":{"line":119,"column":26}},"45":{"start":{"line":122,"column":2},"end":{"line":122,"column":39}},"46":{"start":{"line":123,"column":2},"end":{"line":123,"column":48}},"47":{"start":{"line":126,"column":2},"end":{"line":126,"column":39}},"48":{"start":{"line":129,"column":2},"end":{"line":129,"column":22}},"49":{"start":{"line":132,"column":0},"end":{"line":132,"column":35}},"50":{"start":{"line":134,"column":0},"end":{"line":138,"column":1}},"51":{"start":{"line":135,"column":2},"end":{"line":137,"column":3}},"52":{"start":{"line":136,"column":4},"end":{"line":136,"column":38}},"53":{"start":{"line":140,"column":0},"end":{"line":144,"column":1}},"54":{"start":{"line":141,"column":2},"end":{"line":143,"column":3}},"55":{"start":{"line":142,"column":4},"end":{"line":142,"column":51}},"56":{"start":{"line":146,"column":0},"end":{"line":149,"column":1}},"57":{"start":{"line":147,"column":2},"end":{"line":147,"column":30}},"58":{"start":{"line":148,"column":2},"end":{"line":148,"column":19}},"59":{"start":{"line":151,"column":0},"end":{"line":153,"column":1}},"60":{"start":{"line":152,"column":2},"end":{"line":152,"column":31}},"61":{"start":{"line":155,"column":0},"end":{"line":157,"column":1}},"62":{"start":{"line":156,"column":2},"end":{"line":156,"column":21}},"63":{"start":{"line":159,"column":0},"end":{"line":162,"column":1}},"64":{"start":{"line":161,"column":2},"end":{"line":161,"column":25}},"65":{"start":{"line":164,"column":0},"end":{"line":167,"column":1}},"66":{"start":{"line":166,"column":2},"end":{"line":166,"column":31}},"67":{"start":{"line":171,"column":0},"end":{"line":179,"column":1}},"68":{"start":{"line":172,"column":2},"end":{"line":178,"column":3}},"69":{"start":{"line":173,"column":4},"end":{"line":173,"column":55}},"70":{"start":{"line":173,"column":29},"end":{"line":173,"column":55}},"71":{"start":{"line":175,"column":4},"end":{"line":175,"column":154}},"72":{"start":{"line":175,"column":30},"end":{"line":175,"column":154}},"73":{"start":{"line":177,"column":4},"end":{"line":177,"column":92}},"74":{"start":{"line":177,"column":43},"end":{"line":177,"column":92}},"75":{"start":{"line":181,"column":0},"end":{"line":191,"column":1}},"76":{"start":{"line":182,"column":2},"end":{"line":190,"column":3}},"77":{"start":{"line":183,"column":4},"end":{"line":183,"column":55}},"78":{"start":{"line":183,"column":29},"end":{"line":183,"column":55}},"79":{"start":{"line":185,"column":4},"end":{"line":185,"column":121}},"80":{"start":{"line":185,"column":30},"end":{"line":185,"column":121}},"81":{"start":{"line":187,"column":4},"end":{"line":189,"column":14}},"82":{"start":{"line":193,"column":0},"end":{"line":206,"column":1}},"83":{"start":{"line":194,"column":2},"end":{"line":205,"column":3}},"84":{"start":{"line":195,"column":4},"end":{"line":195,"column":55}},"85":{"start":{"line":195,"column":29},"end":{"line":195,"column":55}},"86":{"start":{"line":197,"column":4},"end":{"line":197,"column":123}},"87":{"start":{"line":197,"column":30},"end":{"line":197,"column":123}},"88":{"start":{"line":200,"column":4},"end":{"line":204,"column":5}},"89":{"start":{"line":201,"column":6},"end":{"line":203,"column":16}},"90":{"start":{"line":208,"column":0},"end":{"line":365,"column":1}},"91":{"start":{"line":209,"column":2},"end":{"line":364,"column":3}},"92":{"start":{"line":211,"column":4},"end":{"line":363,"column":5}},"93":{"start":{"line":213,"column":6},"end":{"line":362,"column":7}},"94":{"start":{"line":215,"column":8},"end":{"line":215,"column":71}},"95":{"start":{"line":217,"column":8},"end":{"line":249,"column":9}},"96":{"start":{"line":219,"column":10},"end":{"line":219,"column":49}},"97":{"start":{"line":221,"column":10},"end":{"line":221,"column":56}},"98":{"start":{"line":224,"column":10},"end":{"line":224,"column":31}},"99":{"start":{"line":227,"column":10},"end":{"line":227,"column":74}},"100":{"start":{"line":229,"column":10},"end":{"line":229,"column":50}},"101":{"start":{"line":232,"column":10},"end":{"line":248,"column":11}},"102":{"start":{"line":233,"column":12},"end":{"line":233,"column":41}},"103":{"start":{"line":235,"column":12},"end":{"line":235,"column":31}},"104":{"start":{"line":236,"column":12},"end":{"line":236,"column":35}},"105":{"start":{"line":237,"column":12},"end":{"line":237,"column":31}},"106":{"start":{"line":238,"column":12},"end":{"line":238,"column":35}},"107":{"start":{"line":240,"column":12},"end":{"line":240,"column":97}},"108":{"start":{"line":242,"column":12},"end":{"line":245,"column":43}},"109":{"start":{"line":247,"column":12},"end":{"line":247,"column":55}},"110":{"start":{"line":253,"column":8},"end":{"line":361,"column":9}},"111":{"start":{"line":255,"column":10},"end":{"line":279,"column":11}},"112":{"start":{"line":257,"column":12},"end":{"line":257,"column":75}},"113":{"start":{"line":258,"column":12},"end":{"line":258,"column":45}},"114":{"start":{"line":259,"column":12},"end":{"line":259,"column":55}},"115":{"start":{"line":261,"column":12},"end":{"line":261,"column":27}},"116":{"start":{"line":264,"column":12},"end":{"line":264,"column":31}},"117":{"start":{"line":265,"column":12},"end":{"line":265,"column":35}},"118":{"start":{"line":266,"column":12},"end":{"line":266,"column":31}},"119":{"start":{"line":267,"column":12},"end":{"line":267,"column":35}},"120":{"start":{"line":272,"column":12},"end":{"line":272,"column":81}},"121":{"start":{"line":274,"column":12},"end":{"line":274,"column":51}},"122":{"start":{"line":276,"column":12},"end":{"line":276,"column":61}},"123":{"start":{"line":278,"column":12},"end":{"line":278,"column":33}},"124":{"start":{"line":281,"column":10},"end":{"line":360,"column":11}},"125":{"start":{"line":284,"column":12},"end":{"line":284,"column":87}},"126":{"start":{"line":286,"column":12},"end":{"line":294,"column":13}},"127":{"start":{"line":287,"column":14},"end":{"line":290,"column":46}},"128":{"start":{"line":292,"column":14},"end":{"line":292,"column":57}},"129":{"start":{"line":293,"column":14},"end":{"line":293,"column":21}},"130":{"start":{"line":297,"column":12},"end":{"line":352,"column":13}},"131":{"start":{"line":298,"column":14},"end":{"line":298,"column":54}},"132":{"start":{"line":300,"column":14},"end":{"line":300,"column":40}},"133":{"start":{"line":302,"column":14},"end":{"line":302,"column":43}},"134":{"start":{"line":304,"column":14},"end":{"line":304,"column":49}},"135":{"start":{"line":306,"column":14},"end":{"line":306,"column":37}},"136":{"start":{"line":308,"column":14},"end":{"line":308,"column":35}},"137":{"start":{"line":310,"column":19},"end":{"line":352,"column":13}},"138":{"start":{"line":311,"column":14},"end":{"line":324,"column":15}},"139":{"start":{"line":312,"column":16},"end":{"line":312,"column":34}},"140":{"start":{"line":314,"column":16},"end":{"line":314,"column":35}},"141":{"start":{"line":315,"column":16},"end":{"line":315,"column":39}},"142":{"start":{"line":316,"column":16},"end":{"line":316,"column":35}},"143":{"start":{"line":317,"column":16},"end":{"line":317,"column":39}},"144":{"start":{"line":319,"column":16},"end":{"line":319,"column":37}},"145":{"start":{"line":321,"column":16},"end":{"line":321,"column":101}},"146":{"start":{"line":323,"column":16},"end":{"line":323,"column":51}},"147":{"start":{"line":325,"column":19},"end":{"line":352,"column":13}},"148":{"start":{"line":326,"column":14},"end":{"line":330,"column":34}},"149":{"start":{"line":332,"column":14},"end":{"line":332,"column":57}},"150":{"start":{"line":335,"column":14},"end":{"line":335,"column":33}},"151":{"start":{"line":336,"column":14},"end":{"line":336,"column":37}},"152":{"start":{"line":337,"column":14},"end":{"line":337,"column":33}},"153":{"start":{"line":338,"column":14},"end":{"line":338,"column":37}},"154":{"start":{"line":340,"column":14},"end":{"line":340,"column":35}},"155":{"start":{"line":342,"column":14},"end":{"line":342,"column":56}},"156":{"start":{"line":344,"column":14},"end":{"line":344,"column":33}},"157":{"start":{"line":345,"column":14},"end":{"line":345,"column":37}},"158":{"start":{"line":346,"column":14},"end":{"line":346,"column":33}},"159":{"start":{"line":347,"column":14},"end":{"line":347,"column":37}},"160":{"start":{"line":349,"column":14},"end":{"line":349,"column":47}},"161":{"start":{"line":351,"column":14},"end":{"line":351,"column":99}},"162":{"start":{"line":355,"column":12},"end":{"line":355,"column":53}},"163":{"start":{"line":357,"column":12},"end":{"line":357,"column":42}},"164":{"start":{"line":359,"column":12},"end":{"line":359,"column":33}},"165":{"start":{"line":368,"column":0},"end":{"line":371,"column":17}},"166":{"start":{"line":373,"column":0},"end":{"line":380,"column":1}},"167":{"start":{"line":375,"column":2},"end":{"line":379,"column":3}},"168":{"start":{"line":376,"column":4},"end":{"line":378,"column":5}},"169":{"start":{"line":377,"column":6},"end":{"line":377,"column":38}},"170":{"start":{"line":386,"column":0},"end":{"line":469,"column":1}},"171":{"start":{"line":387,"column":2},"end":{"line":387,"column":18}},"172":{"start":{"line":388,"column":2},"end":{"line":388,"column":28}},"173":{"start":{"line":390,"column":2},"end":{"line":390,"column":56}},"174":{"start":{"line":390,"column":27},"end":{"line":390,"column":56}},"175":{"start":{"line":392,"column":2},"end":{"line":396,"column":3}},"176":{"start":{"line":393,"column":4},"end":{"line":393,"column":62}},"177":{"start":{"line":394,"column":4},"end":{"line":394,"column":64}},"178":{"start":{"line":395,"column":4},"end":{"line":395,"column":66}},"179":{"start":{"line":399,"column":2},"end":{"line":401,"column":49}},"180":{"start":{"line":404,"column":2},"end":{"line":404,"column":75}},"181":{"start":{"line":405,"column":2},"end":{"line":405,"column":53}},"182":{"start":{"line":406,"column":2},"end":{"line":406,"column":43}},"183":{"start":{"line":409,"column":2},"end":{"line":462,"column":3}},"184":{"start":{"line":410,"column":4},"end":{"line":413,"column":5}},"185":{"start":{"line":416,"column":4},"end":{"line":416,"column":36}},"186":{"start":{"line":417,"column":4},"end":{"line":417,"column":32}},"187":{"start":{"line":420,"column":4},"end":{"line":420,"column":40}},"188":{"start":{"line":420,"column":16},"end":{"line":420,"column":40}},"189":{"start":{"line":421,"column":4},"end":{"line":421,"column":43}},"190":{"start":{"line":421,"column":17},"end":{"line":421,"column":43}},"191":{"start":{"line":422,"column":4},"end":{"line":422,"column":46}},"192":{"start":{"line":422,"column":18},"end":{"line":422,"column":46}},"193":{"start":{"line":423,"column":4},"end":{"line":423,"column":43}},"194":{"start":{"line":423,"column":17},"end":{"line":423,"column":43}},"195":{"start":{"line":424,"column":4},"end":{"line":424,"column":64}},"196":{"start":{"line":424,"column":24},"end":{"line":424,"column":64}},"197":{"start":{"line":427,"column":4},"end":{"line":435,"column":5}},"198":{"start":{"line":430,"column":6},"end":{"line":432,"column":7}},"199":{"start":{"line":431,"column":8},"end":{"line":431,"column":25}},"200":{"start":{"line":433,"column":11},"end":{"line":435,"column":5}},"201":{"start":{"line":434,"column":6},"end":{"line":434,"column":64}},"202":{"start":{"line":438,"column":4},"end":{"line":440,"column":5}},"203":{"start":{"line":439,"column":6},"end":{"line":439,"column":40}},"204":{"start":{"line":443,"column":4},"end":{"line":453,"column":7}},"205":{"start":{"line":445,"column":6},"end":{"line":447,"column":7}},"206":{"start":{"line":446,"column":8},"end":{"line":446,"column":88}},"207":{"start":{"line":450,"column":6},"end":{"line":450,"column":53}},"208":{"start":{"line":452,"column":6},"end":{"line":452,"column":33}},"209":{"start":{"line":454,"column":4},"end":{"line":454,"column":55}},"210":{"start":{"line":456,"column":4},"end":{"line":461,"column":7}},"211":{"start":{"line":458,"column":6},"end":{"line":458,"column":53}},"212":{"start":{"line":460,"column":6},"end":{"line":460,"column":33}},"213":{"start":{"line":465,"column":2},"end":{"line":465,"column":52}},"214":{"start":{"line":466,"column":2},"end":{"line":466,"column":56}},"215":{"start":{"line":467,"column":2},"end":{"line":467,"column":52}},"216":{"start":{"line":468,"column":2},"end":{"line":468,"column":48}},"217":{"start":{"line":476,"column":0},"end":{"line":484,"column":1}},"218":{"start":{"line":477,"column":2},"end":{"line":483,"column":3}},"219":{"start":{"line":477,"column":23},"end":{"line":477,"column":47}},"220":{"start":{"line":479,"column":4},"end":{"line":479,"column":20}},"221":{"start":{"line":480,"column":4},"end":{"line":482,"column":7}},"222":{"start":{"line":481,"column":6},"end":{"line":481,"column":30}},"223":{"start":{"line":490,"column":0},"end":{"line":501,"column":1}},"224":{"start":{"line":492,"column":2},"end":{"line":492,"column":53}},"225":{"start":{"line":492,"column":27},"end":{"line":492,"column":53}},"226":{"start":{"line":493,"column":2},"end":{"line":498,"column":3}},"227":{"start":{"line":495,"column":4},"end":{"line":495,"column":49}},"228":{"start":{"line":495,"column":10},"end":{"line":495,"column":32}},"229":{"start":{"line":497,"column":4},"end":{"line":497,"column":30}},"230":{"start":{"line":500,"column":2},"end":{"line":500,"column":24}},"231":{"start":{"line":508,"column":0},"end":{"line":524,"column":1}},"232":{"start":{"line":509,"column":2},"end":{"line":509,"column":8}},"233":{"start":{"line":511,"column":2},"end":{"line":518,"column":3}},"234":{"start":{"line":512,"column":4},"end":{"line":517,"column":5}},"235":{"start":{"line":513,"column":6},"end":{"line":513,"column":105}},"236":{"start":{"line":515,"column":6},"end":{"line":516,"column":110}},"237":{"start":{"line":516,"column":8},"end":{"line":516,"column":110}},"238":{"start":{"line":521,"column":2},"end":{"line":521,"column":76}},"239":{"start":{"line":521,"column":29},"end":{"line":521,"column":76}},"240":{"start":{"line":523,"column":2},"end":{"line":523,"column":80}},"241":{"start":{"line":523,"column":37},"end":{"line":523,"column":80}},"242":{"start":{"line":531,"column":0},"end":{"line":533,"column":1}},"243":{"start":{"line":532,"column":2},"end":{"line":532,"column":22}},"244":{"start":{"line":540,"column":0},"end":{"line":542,"column":1}},"245":{"start":{"line":541,"column":2},"end":{"line":541,"column":57}},"246":{"start":{"line":549,"column":0},"end":{"line":552,"column":1}},"247":{"start":{"line":550,"column":2},"end":{"line":550,"column":34}},"248":{"start":{"line":550,"column":21},"end":{"line":550,"column":34}},"249":{"start":{"line":551,"column":2},"end":{"line":551,"column":64}},"250":{"start":{"line":589,"column":0},"end":{"line":589,"column":28}}},"branchMap":{"1":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":17},"end":{"line":54,"column":24}},{"start":{"line":54,"column":28},"end":{"line":54,"column":30}}]},"2":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":2},"end":{"line":60,"column":2}},{"start":{"line":60,"column":2},"end":{"line":60,"column":2}}]},"3":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":28},"end":{"line":69,"column":54}},{"start":{"line":69,"column":59},"end":{"line":69,"column":79}}]},"4":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":71,"column":2}},{"start":{"line":71,"column":2},"end":{"line":71,"column":2}}]},"5":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":14},"end":{"line":74,"column":26}},{"start":{"line":74,"column":30},"end":{"line":74,"column":35}}]},"6":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":14},"end":{"line":75,"column":26}},{"start":{"line":75,"column":30},"end":{"line":75,"column":41}}]},"7":{"line":76,"type":"cond-expr","locations":[{"start":{"line":76,"column":59},"end":{"line":76,"column":76}},{"start":{"line":76,"column":79},"end":{"line":76,"column":83}}]},"8":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":31},"end":{"line":77,"column":60}},{"start":{"line":77,"column":64},"end":{"line":77,"column":65}}]},"9":{"line":78,"type":"cond-expr","locations":[{"start":{"line":78,"column":55},"end":{"line":78,"column":70}},{"start":{"line":78,"column":73},"end":{"line":78,"column":77}}]},"10":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":27},"end":{"line":79,"column":52}},{"start":{"line":79,"column":56},"end":{"line":79,"column":57}}]},"11":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":23},"end":{"line":80,"column":44}},{"start":{"line":80,"column":48},"end":{"line":80,"column":49}}]},"12":{"line":89,"type":"cond-expr","locations":[{"start":{"line":89,"column":89},"end":{"line":89,"column":121}},{"start":{"line":89,"column":124},"end":{"line":89,"column":128}}]},"13":{"line":90,"type":"cond-expr","locations":[{"start":{"line":90,"column":63},"end":{"line":90,"column":77}},{"start":{"line":90,"column":80},"end":{"line":90,"column":87}}]},"14":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":12},"end":{"line":93,"column":22}},{"start":{"line":93,"column":26},"end":{"line":93,"column":30}}]},"15":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":13},"end":{"line":94,"column":24}},{"start":{"line":94,"column":28},"end":{"line":94,"column":32}}]},"16":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":14},"end":{"line":95,"column":26}},{"start":{"line":95,"column":30},"end":{"line":95,"column":34}}]},"17":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":13},"end":{"line":96,"column":24}},{"start":{"line":96,"column":28},"end":{"line":96,"column":32}}]},"18":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":20},"end":{"line":97,"column":38}},{"start":{"line":97,"column":42},"end":{"line":97,"column":46}}]},"19":{"line":98,"type":"cond-expr","locations":[{"start":{"line":98,"column":47},"end":{"line":98,"column":58}},{"start":{"line":98,"column":61},"end":{"line":98,"column":66}}]},"20":{"line":99,"type":"cond-expr","locations":[{"start":{"line":99,"column":77},"end":{"line":99,"column":103}},{"start":{"line":99,"column":106},"end":{"line":99,"column":110}}]},"21":{"line":100,"type":"cond-expr","locations":[{"start":{"line":101,"column":58},"end":{"line":101,"column":85}},{"start":{"line":101,"column":88},"end":{"line":101,"column":92}}]},"22":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":29},"end":{"line":100,"column":76}},{"start":{"line":101,"column":7},"end":{"line":101,"column":55}}]},"23":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":2},"end":{"line":104,"column":2}},{"start":{"line":104,"column":2},"end":{"line":104,"column":2}}]},"24":{"line":108,"type":"cond-expr","locations":[{"start":{"line":108,"column":62},"end":{"line":108,"column":82}},{"start":{"line":108,"column":85},"end":{"line":108,"column":89}}]},"25":{"line":109,"type":"cond-expr","locations":[{"start":{"line":109,"column":63},"end":{"line":109,"column":84}},{"start":{"line":109,"column":87},"end":{"line":109,"column":91}}]},"26":{"line":110,"type":"cond-expr","locations":[{"start":{"line":110,"column":65},"end":{"line":110,"column":87}},{"start":{"line":110,"column":89},"end":{"line":110,"column":94}}]},"27":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":2},"end":{"line":135,"column":2}},{"start":{"line":135,"column":2},"end":{"line":135,"column":2}}]},"28":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":2},"end":{"line":141,"column":2}},{"start":{"line":141,"column":2},"end":{"line":141,"column":2}}]},"29":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":173,"column":4}},{"start":{"line":173,"column":4},"end":{"line":173,"column":4}}]},"30":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":4},"end":{"line":175,"column":4}},{"start":{"line":175,"column":4},"end":{"line":175,"column":4}}]},"31":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":4},"end":{"line":177,"column":4}},{"start":{"line":177,"column":4},"end":{"line":177,"column":4}}]},"32":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":4},"end":{"line":183,"column":4}},{"start":{"line":183,"column":4},"end":{"line":183,"column":4}}]},"33":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":4},"end":{"line":185,"column":4}},{"start":{"line":185,"column":4},"end":{"line":185,"column":4}}]},"34":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":4},"end":{"line":195,"column":4}},{"start":{"line":195,"column":4},"end":{"line":195,"column":4}}]},"35":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":4},"end":{"line":197,"column":4}},{"start":{"line":197,"column":4},"end":{"line":197,"column":4}}]},"36":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":4},"end":{"line":200,"column":4}},{"start":{"line":200,"column":4},"end":{"line":200,"column":4}}]},"37":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":6},"end":{"line":213,"column":6}},{"start":{"line":213,"column":6},"end":{"line":213,"column":6}}]},"38":{"line":213,"type":"binary-expr","locations":[{"start":{"line":213,"column":9},"end":{"line":213,"column":27}},{"start":{"line":213,"column":31},"end":{"line":213,"column":53}}]},"39":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":8},"end":{"line":217,"column":8}},{"start":{"line":217,"column":8},"end":{"line":217,"column":8}}]},"40":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":8},"end":{"line":253,"column":8}},{"start":{"line":253,"column":8},"end":{"line":253,"column":8}}]},"41":{"line":253,"type":"binary-expr","locations":[{"start":{"line":253,"column":11},"end":{"line":253,"column":34}},{"start":{"line":253,"column":38},"end":{"line":253,"column":64}}]},"42":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":10},"end":{"line":255,"column":10}},{"start":{"line":255,"column":10},"end":{"line":255,"column":10}}]},"43":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":10},"end":{"line":281,"column":10}},{"start":{"line":281,"column":10},"end":{"line":281,"column":10}}]},"44":{"line":286,"type":"if","locations":[{"start":{"line":286,"column":12},"end":{"line":286,"column":12}},{"start":{"line":286,"column":12},"end":{"line":286,"column":12}}]},"45":{"line":286,"type":"binary-expr","locations":[{"start":{"line":286,"column":15},"end":{"line":286,"column":32}},{"start":{"line":286,"column":36},"end":{"line":286,"column":75}}]},"46":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":12}},{"start":{"line":297,"column":12},"end":{"line":297,"column":12}}]},"47":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":15},"end":{"line":297,"column":32}},{"start":{"line":297,"column":36},"end":{"line":297,"column":75}},{"start":{"line":297,"column":79},"end":{"line":297,"column":106}}]},"48":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":19},"end":{"line":310,"column":19}},{"start":{"line":310,"column":19},"end":{"line":310,"column":19}}]},"49":{"line":310,"type":"binary-expr","locations":[{"start":{"line":310,"column":22},"end":{"line":310,"column":39}},{"start":{"line":310,"column":43},"end":{"line":310,"column":82}},{"start":{"line":310,"column":86},"end":{"line":310,"column":114}}]},"50":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":19},"end":{"line":325,"column":19}},{"start":{"line":325,"column":19},"end":{"line":325,"column":19}}]},"51":{"line":325,"type":"binary-expr","locations":[{"start":{"line":325,"column":22},"end":{"line":325,"column":40}},{"start":{"line":325,"column":44},"end":{"line":325,"column":83}}]},"52":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":4},"end":{"line":376,"column":4}},{"start":{"line":376,"column":4},"end":{"line":376,"column":4}}]},"53":{"line":376,"type":"binary-expr","locations":[{"start":{"line":376,"column":7},"end":{"line":376,"column":29}},{"start":{"line":376,"column":33},"end":{"line":376,"column":74}}]},"54":{"line":388,"type":"binary-expr","locations":[{"start":{"line":388,"column":13},"end":{"line":388,"column":21}},{"start":{"line":388,"column":25},"end":{"line":388,"column":27}}]},"55":{"line":390,"type":"if","locations":[{"start":{"line":390,"column":2},"end":{"line":390,"column":2}},{"start":{"line":390,"column":2},"end":{"line":390,"column":2}}]},"56":{"line":392,"type":"if","locations":[{"start":{"line":392,"column":2},"end":{"line":392,"column":2}},{"start":{"line":392,"column":2},"end":{"line":392,"column":2}}]},"57":{"line":399,"type":"cond-expr","locations":[{"start":{"line":400,"column":6},"end":{"line":400,"column":37}},{"start":{"line":401,"column":6},"end":{"line":401,"column":48}}]},"58":{"line":409,"type":"if","locations":[{"start":{"line":409,"column":2},"end":{"line":409,"column":2}},{"start":{"line":409,"column":2},"end":{"line":409,"column":2}}]},"59":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":4},"end":{"line":420,"column":4}},{"start":{"line":420,"column":4},"end":{"line":420,"column":4}}]},"60":{"line":421,"type":"if","locations":[{"start":{"line":421,"column":4},"end":{"line":421,"column":4}},{"start":{"line":421,"column":4},"end":{"line":421,"column":4}}]},"61":{"line":422,"type":"if","locations":[{"start":{"line":422,"column":4},"end":{"line":422,"column":4}},{"start":{"line":422,"column":4},"end":{"line":422,"column":4}}]},"62":{"line":423,"type":"if","locations":[{"start":{"line":423,"column":4},"end":{"line":423,"column":4}},{"start":{"line":423,"column":4},"end":{"line":423,"column":4}}]},"63":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":4},"end":{"line":424,"column":4}},{"start":{"line":424,"column":4},"end":{"line":424,"column":4}}]},"64":{"line":427,"type":"if","locations":[{"start":{"line":427,"column":4},"end":{"line":427,"column":4}},{"start":{"line":427,"column":4},"end":{"line":427,"column":4}}]},"65":{"line":433,"type":"if","locations":[{"start":{"line":433,"column":11},"end":{"line":433,"column":11}},{"start":{"line":433,"column":11},"end":{"line":433,"column":11}}]},"66":{"line":438,"type":"if","locations":[{"start":{"line":438,"column":4},"end":{"line":438,"column":4}},{"start":{"line":438,"column":4},"end":{"line":438,"column":4}}]},"67":{"line":445,"type":"if","locations":[{"start":{"line":445,"column":6},"end":{"line":445,"column":6}},{"start":{"line":445,"column":6},"end":{"line":445,"column":6}}]},"68":{"line":445,"type":"binary-expr","locations":[{"start":{"line":445,"column":9},"end":{"line":445,"column":43}},{"start":{"line":445,"column":47},"end":{"line":445,"column":70}}]},"69":{"line":477,"type":"if","locations":[{"start":{"line":477,"column":2},"end":{"line":477,"column":2}},{"start":{"line":477,"column":2},"end":{"line":477,"column":2}}]},"70":{"line":492,"type":"if","locations":[{"start":{"line":492,"column":2},"end":{"line":492,"column":2}},{"start":{"line":492,"column":2},"end":{"line":492,"column":2}}]},"71":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":2},"end":{"line":493,"column":2}},{"start":{"line":493,"column":2},"end":{"line":493,"column":2}}]},"72":{"line":511,"type":"if","locations":[{"start":{"line":511,"column":2},"end":{"line":511,"column":2}},{"start":{"line":511,"column":2},"end":{"line":511,"column":2}}]},"73":{"line":512,"type":"if","locations":[{"start":{"line":512,"column":4},"end":{"line":512,"column":4}},{"start":{"line":512,"column":4},"end":{"line":512,"column":4}}]},"74":{"line":521,"type":"if","locations":[{"start":{"line":521,"column":2},"end":{"line":521,"column":2}},{"start":{"line":521,"column":2},"end":{"line":521,"column":2}}]},"75":{"line":550,"type":"if","locations":[{"start":{"line":550,"column":2},"end":{"line":550,"column":2}},{"start":{"line":550,"column":2},"end":{"line":550,"column":2}}]},"76":{"line":551,"type":"binary-expr","locations":[{"start":{"line":551,"column":9},"end":{"line":551,"column":35}},{"start":{"line":551,"column":39},"end":{"line":551,"column":63}}]}},"code":["\"use strict\";","","var inherits = require('util').inherits","  , EventEmitter = require('events').EventEmitter","  , net = require('net')","  , tls = require('tls')","  , crypto = require('crypto')","  , f = require('util').format","  , debugOptions = require('./utils').debugOptions","  , Response = require('./commands').Response","  , MongoError = require('../error')","  , Logger = require('./logger');","","var _id = 0;","var debugFields = ['host', 'port', 'size', 'keepAlive', 'keepAliveInitialDelay', 'noDelay'","  , 'connectionTimeout', 'socketTimeout', 'singleBufferSerializtion', 'ssl', 'ca', 'crl', 'cert'","  , 'rejectUnauthorized', 'promoteLongs', 'promoteValues', 'promoteBuffers', 'checkServerIdentity'];","var connectionAccounting = false;","var connections = {};","","/**"," * Creates a new Connection instance"," * @class"," * @param {string} options.host The server host"," * @param {number} options.port The server port"," * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled"," * @param {number} [options.keepAliveInitialDelay=0] Initial delay before TCP keep alive enabled"," * @param {boolean} [options.noDelay=true] TCP Connection no delay"," * @param {number} [options.connectionTimeout=0] TCP Connection timeout setting"," * @param {number} [options.socketTimeout=0] TCP Socket timeout setting"," * @param {boolean} [options.singleBufferSerializtion=true] Serialize into single buffer, trade of peak memory for serialization speed"," * @param {boolean} [options.ssl=false] Use SSL for connection"," * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function."," * @param {Buffer} [options.ca] SSL Certificate store binary buffer"," * @param {Buffer} [options.crl] SSL Certificate revocation store binary buffer"," * @param {Buffer} [options.cert] SSL Certificate binary buffer"," * @param {Buffer} [options.key] SSL Key file binary buffer"," * @param {string} [options.passphrase] SSL Certificate pass phrase"," * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates"," * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits"," * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types."," * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers."," * @fires Connection#connect"," * @fires Connection#close"," * @fires Connection#error"," * @fires Connection#timeout"," * @fires Connection#parseError"," * @return {Connection} A cursor instance"," */","var Connection = function(messageHandler, options) {","  // Add event listener","  EventEmitter.call(this);","  // Set empty if no options passed","  this.options = options || {};","  // Identification information","  this.id = _id++;","  // Logger instance","  this.logger = Logger('Connection', options);","  // No bson parser passed in","  if(!options.bson) throw new Error(\"must pass in valid bson parser\");","  // Get bson parser","  this.bson = options.bson;","  // Grouping tag used for debugging purposes","  this.tag = options.tag;","  // Message handler","  this.messageHandler = messageHandler;","","  // Max BSON message size","  this.maxBsonMessageSize = options.maxBsonMessageSize || (1024 * 1024 * 16 * 4);","  // Debug information","  if(this.logger.isDebug()) this.logger.debug(f('creating connection %s with options [%s]', this.id, JSON.stringify(debugOptions(debugFields, options))));","","  // Default options","  this.port = options.port || 27017;","  this.host = options.host || 'localhost';","  this.keepAlive = typeof options.keepAlive == 'boolean' ? options.keepAlive : true;","  this.keepAliveInitialDelay = options.keepAliveInitialDelay || 0;","  this.noDelay = typeof options.noDelay == 'boolean' ? options.noDelay : true;","  this.connectionTimeout = options.connectionTimeout || 0;","  this.socketTimeout = options.socketTimeout || 0;","","  // If connection was destroyed","  this.destroyed = false;","","  // Check if we have a domain socket","  this.domainSocket = this.host.indexOf('\\/') != -1;","","  // Serialize commands using function","  this.singleBufferSerializtion = typeof options.singleBufferSerializtion == 'boolean' ? options.singleBufferSerializtion : true;","  this.serializationFunction = this.singleBufferSerializtion ? 'toBinUnified' : 'toBin';","","  // SSL options","  this.ca = options.ca || null;","  this.crl = options.crl || null;","  this.cert = options.cert || null;","  this.key = options.key || null;","  this.passphrase = options.passphrase || null;","  this.ssl = typeof options.ssl == 'boolean' ? options.ssl : false;","  this.rejectUnauthorized = typeof options.rejectUnauthorized == 'boolean' ? options.rejectUnauthorized : true;","  this.checkServerIdentity = typeof options.checkServerIdentity == 'boolean'","    || typeof options.checkServerIdentity == 'function' ? options.checkServerIdentity : true;","","  // If ssl not enabled","  if(!this.ssl) this.rejectUnauthorized = false;","","  // Response options","  this.responseOptions = {","    promoteLongs: typeof options.promoteLongs == 'boolean' ?  options.promoteLongs : true,","    promoteValues: typeof options.promoteValues == 'boolean' ? options.promoteValues : true,","    promoteBuffers: typeof options.promoteBuffers == 'boolean' ? options.promoteBuffers: false","  }","","  // Flushing","  this.flushing = false;","  this.queue = [];","","  // Internal state","  this.connection = null;","  this.writeStream = null;","","  // Create hash method","  var hash = crypto.createHash('sha1');","  hash.update(f('%s:%s', this.host, this.port));","","  // Create a hash name","  this.hashedName = hash.digest('hex');","","  // All operations in flight on the connection","  this.workItems = [];","}","","inherits(Connection, EventEmitter);","","Connection.prototype.setSocketTimeout = function(value) {","  if(this.connection) {","    this.connection.setTimeout(value);","  }","}","","Connection.prototype.resetSocketTimeout = function() {","  if(this.connection) {","    this.connection.setTimeout(this.socketTimeout);","  }","}","","Connection.enableConnectionAccounting = function() {","  connectionAccounting = true;","  connections = {};","}","","Connection.disableConnectionAccounting = function() {","  connectionAccounting = false;","}","","Connection.connections = function() {","  return connections;","}","","function deleteConnection(id) {","  // console.log(\"=== deleted connection \" + id + \" :: \" + (connections[id] ? connections[id].port : ''))","  delete connections[id];","}","","function addConnection(id, connection) {","  // console.log(\"=== added connection \" + id + \" :: \" + connection.port)","  connections[id] = connection;","}","","//","// Connection handlers","var errorHandler = function(self) {","  return function(err) {","    if(connectionAccounting) deleteConnection(self.id);","    // Debug information","    if(self.logger.isDebug()) self.logger.debug(f('connection %s for [%s:%s] errored out with [%s]', self.id, self.host, self.port, JSON.stringify(err)));","    // Emit the error","    if(self.listeners('error').length > 0) self.emit(\"error\", MongoError.create(err), self);","  }","}","","var timeoutHandler = function(self) {","  return function() {","    if(connectionAccounting) deleteConnection(self.id);","    // Debug information","    if(self.logger.isDebug()) self.logger.debug(f('connection %s for [%s:%s] timed out', self.id, self.host, self.port));","    // Emit timeout error","    self.emit(\"timeout\"","      , MongoError.create(f(\"connection %s to %s:%s timed out\", self.id, self.host, self.port))","      , self);","  }","}","","var closeHandler = function(self) {","  return function(hadError) {","    if(connectionAccounting) deleteConnection(self.id);","    // Debug information","    if(self.logger.isDebug()) self.logger.debug(f('connection %s with for [%s:%s] closed', self.id, self.host, self.port));","","    // Emit close event","    if(!hadError) {","      self.emit(\"close\"","        , MongoError.create(f(\"connection %s to %s:%s closed\", self.id, self.host, self.port))","        , self);","    }","  }","}","","var dataHandler = function(self) {","  return function(data) {","    // Parse until we are done with the data","    while(data.length > 0) {","      // If we still have bytes to read on the current message","      if(self.bytesRead > 0 && self.sizeOfMessage > 0) {","        // Calculate the amount of remaining bytes","        var remainingBytesToRead = self.sizeOfMessage - self.bytesRead;","        // Check if the current chunk contains the rest of the message","        if(remainingBytesToRead > data.length) {","          // Copy the new data into the exiting buffer (should have been allocated when we know the message size)","          data.copy(self.buffer, self.bytesRead);","          // Adjust the number of bytes read so it point to the correct index in the buffer","          self.bytesRead = self.bytesRead + data.length;","","          // Reset state of buffer","          data = new Buffer(0);","        } else {","          // Copy the missing part of the data into our current buffer","          data.copy(self.buffer, self.bytesRead, 0, remainingBytesToRead);","          // Slice the overflow into a new buffer that we will then re-parse","          data = data.slice(remainingBytesToRead);","","          // Emit current complete message","          try {","            var emitBuffer = self.buffer;","            // Reset state of buffer","            self.buffer = null;","            self.sizeOfMessage = 0;","            self.bytesRead = 0;","            self.stubBuffer = null;","            // Emit the buffer","            self.messageHandler(new Response(self.bson, emitBuffer, self.responseOptions), self);","          } catch(err) {","            var errorObject = {err:\"socketHandler\", trace:err, bin:self.buffer, parseState:{","              sizeOfMessage:self.sizeOfMessage,","              bytesRead:self.bytesRead,","              stubBuffer:self.stubBuffer}};","            // We got a parse Error fire it off then keep going","            self.emit(\"parseError\", errorObject, self);","          }","        }","      } else {","        // Stub buffer is kept in case we don't get enough bytes to determine the","        // size of the message (< 4 bytes)","        if(self.stubBuffer != null && self.stubBuffer.length > 0) {","          // If we have enough bytes to determine the message size let's do it","          if(self.stubBuffer.length + data.length > 4) {","            // Prepad the data","            var newData = new Buffer(self.stubBuffer.length + data.length);","            self.stubBuffer.copy(newData, 0);","            data.copy(newData, self.stubBuffer.length);","            // Reassign for parsing","            data = newData;","","            // Reset state of buffer","            self.buffer = null;","            self.sizeOfMessage = 0;","            self.bytesRead = 0;","            self.stubBuffer = null;","","          } else {","","            // Add the the bytes to the stub buffer","            var newStubBuffer = new Buffer(self.stubBuffer.length + data.length);","            // Copy existing stub buffer","            self.stubBuffer.copy(newStubBuffer, 0);","            // Copy missing part of the data","            data.copy(newStubBuffer, self.stubBuffer.length);","            // Exit parsing loop","            data = new Buffer(0);","          }","        } else {","          if(data.length > 4) {","            // Retrieve the message size","            // var sizeOfMessage = data.readUInt32LE(0);","            var sizeOfMessage = data[0] | data[1] << 8 | data[2] << 16 | data[3] << 24;","            // If we have a negative sizeOfMessage emit error and return","            if(sizeOfMessage < 0 || sizeOfMessage > self.maxBsonMessageSize) {","              errorObject = {err:\"socketHandler\", trace:'', bin:self.buffer, parseState:{","                sizeOfMessage: sizeOfMessage,","                bytesRead: self.bytesRead,","                stubBuffer: self.stubBuffer}};","              // We got a parse Error fire it off then keep going","              self.emit(\"parseError\", errorObject, self);","              return;","            }","","            // Ensure that the size of message is larger than 0 and less than the max allowed","            if(sizeOfMessage > 4 && sizeOfMessage < self.maxBsonMessageSize && sizeOfMessage > data.length) {","              self.buffer = new Buffer(sizeOfMessage);","              // Copy all the data into the buffer","              data.copy(self.buffer, 0);","              // Update bytes read","              self.bytesRead = data.length;","              // Update sizeOfMessage","              self.sizeOfMessage = sizeOfMessage;","              // Ensure stub buffer is null","              self.stubBuffer = null;","              // Exit parsing loop","              data = new Buffer(0);","","            } else if(sizeOfMessage > 4 && sizeOfMessage < self.maxBsonMessageSize && sizeOfMessage == data.length) {","              try {","                emitBuffer = data;","                // Reset state of buffer","                self.buffer = null;","                self.sizeOfMessage = 0;","                self.bytesRead = 0;","                self.stubBuffer = null;","                // Exit parsing loop","                data = new Buffer(0);","                // Emit the message","                self.messageHandler(new Response(self.bson, emitBuffer, self.responseOptions), self);","              } catch (err) {","                self.emit(\"parseError\", err, self);","              }","            } else if(sizeOfMessage <= 4 || sizeOfMessage > self.maxBsonMessageSize) {","              errorObject = {err:\"socketHandler\", trace:null, bin:data, parseState:{","                sizeOfMessage:sizeOfMessage,","                bytesRead:0,","                buffer:null,","                stubBuffer:null}};","              // We got a parse Error fire it off then keep going","              self.emit(\"parseError\", errorObject, self);","","              // Clear out the state of the parser","              self.buffer = null;","              self.sizeOfMessage = 0;","              self.bytesRead = 0;","              self.stubBuffer = null;","              // Exit parsing loop","              data = new Buffer(0);","            } else {","              emitBuffer = data.slice(0, sizeOfMessage);","              // Reset state of buffer","              self.buffer = null;","              self.sizeOfMessage = 0;","              self.bytesRead = 0;","              self.stubBuffer = null;","              // Copy rest of message","              data = data.slice(sizeOfMessage);","              // Emit the message","              self.messageHandler(new Response(self.bson, emitBuffer, self.responseOptions), self);","            }","          } else {","            // Create a buffer that contains the space for the non-complete message","            self.stubBuffer = new Buffer(data.length)","            // Copy the data to the stub buffer","            data.copy(self.stubBuffer, 0);","            // Exit parsing loop","            data = new Buffer(0);","          }","        }","      }","    }","  }","}","","// List of socket level valid ssl options","var legalSslSocketOptions = ['pfx', 'key', 'passphrase', 'cert', 'ca', 'ciphers'","  , 'NPNProtocols', 'ALPNProtocols', 'servername'","  , 'secureProtocol', 'secureContext', 'session'","  , 'minDHSize'];","","function merge(options1, options2) {","  // Merge in any allowed ssl options","  for(var name in options2) {","    if(options2[name] != null && legalSslSocketOptions.indexOf(name) != -1) {","      options1[name] = options2[name];","    }","  }","}","","/**"," * Connect"," * @method"," */","Connection.prototype.connect = function(_options) {","  var self = this;","  _options = _options || {};","  // Set the connections","  if(connectionAccounting) addConnection(this.id, this);","  // Check if we are overriding the promoteLongs","  if(typeof _options.promoteLongs == 'boolean') {","    self.responseOptions.promoteLongs = _options.promoteLongs;","    self.responseOptions.promoteValues = _options.promoteValues;","    self.responseOptions.promoteBuffers = _options.promoteBuffers;","  }","","  // Create new connection instance","  self.connection = self.domainSocket","    ? net.createConnection(self.host)","    : net.createConnection(self.port, self.host);","","  // Set the options for the connection","  self.connection.setKeepAlive(self.keepAlive, self.keepAliveInitialDelay);","  self.connection.setTimeout(self.connectionTimeout);","  self.connection.setNoDelay(self.noDelay);","","  // If we have ssl enabled","  if(self.ssl) {","    var sslOptions = {","        socket: self.connection","      , rejectUnauthorized: self.rejectUnauthorized","    }","","    // Merge in options","    merge(sslOptions, this.options);","    merge(sslOptions, _options);","","    // Set options for ssl","    if(self.ca) sslOptions.ca = self.ca;","    if(self.crl) sslOptions.crl = self.crl;","    if(self.cert) sslOptions.cert = self.cert;","    if(self.key) sslOptions.key = self.key;","    if(self.passphrase) sslOptions.passphrase = self.passphrase;","","    // Override checkServerIdentity behavior","    if(self.checkServerIdentity == false) {","      // Skip the identiy check by retuning undefined as per node documents","      // https://nodejs.org/api/tls.html#tls_tls_connect_options_callback","      sslOptions.checkServerIdentity = function() {","        return undefined;","      }","    } else if(typeof self.checkServerIdentity == 'function') {","      sslOptions.checkServerIdentity = self.checkServerIdentity;","    }","","    // Set default sni servername to be the same as host","    if(sslOptions.servername == null) {","      sslOptions.servername = self.host;","    }","","    // Attempt SSL connection","    self.connection = tls.connect(self.port, self.host, sslOptions, function() {","      // Error on auth or skip","      if(self.connection.authorizationError && self.rejectUnauthorized) {","        return self.emit(\"error\", self.connection.authorizationError, self, {ssl:true});","      }","","      // Set socket timeout instead of connection timeout","      self.connection.setTimeout(self.socketTimeout);","      // We are done emit connect","      self.emit('connect', self);","    });","    self.connection.setTimeout(self.connectionTimeout);","  } else {","    self.connection.on('connect', function() {","      // Set socket timeout instead of connection timeout","      self.connection.setTimeout(self.socketTimeout);","      // Emit connect event","      self.emit('connect', self);","    });","  }","","  // Add handlers for events","  self.connection.once('error', errorHandler(self));","  self.connection.once('timeout', timeoutHandler(self));","  self.connection.once('close', closeHandler(self));","  self.connection.on('data', dataHandler(self));","}","","/**"," * Unref this connection"," * @method"," * @return {boolean}"," */","Connection.prototype.unref = function() {","  if (this.connection) this.connection.unref();","  else {","    var self = this;","    this.once('connect', function() {","      self.connection.unref();","    });","  }","}","","/**"," * Destroy connection"," * @method"," */","Connection.prototype.destroy = function() {","  // Set the connections","  if(connectionAccounting) deleteConnection(this.id);","  if(this.connection) {","    // Catch posssible exception thrown by node 0.10.x","    try { this.connection.end(); } catch (err) {}","    // Destroy connection","    this.connection.destroy();","  }","","  this.destroyed = true;","}","","/**"," * Write to connection"," * @method"," * @param {Command} command Command to write out need to implement toBin and toBinUnified"," */","Connection.prototype.write = function(buffer) {","  var i;","  // Debug Log","  if(this.logger.isDebug()) {","    if(!Array.isArray(buffer)) {","      this.logger.debug(f('writing buffer [%s] to %s:%s', buffer.toString('hex'), this.host, this.port));","    } else {","      for(i = 0; i < buffer.length; i++)","        this.logger.debug(f('writing buffer [%s] to %s:%s', buffer[i].toString('hex'), this.host, this.port));","    }","  }","","  // Write out the command","  if(!Array.isArray(buffer)) return this.connection.write(buffer, 'binary');","  // Iterate over all buffers and write them in order to the socket","  for(i = 0; i < buffer.length; i++) this.connection.write(buffer[i], 'binary');","}","","/**"," * Return id of connection as a string"," * @method"," * @return {string}"," */","Connection.prototype.toString = function() {","  return \"\" + this.id;","}","","/**"," * Return json object of connection"," * @method"," * @return {object}"," */","Connection.prototype.toJSON = function() {","  return {id: this.id, host: this.host, port: this.port};","}","","/**"," * Is the connection connected"," * @method"," * @return {boolean}"," */","Connection.prototype.isConnected = function() {","  if(this.destroyed) return false;","  return !this.connection.destroyed && this.connection.writable;","}","","/**"," * A server connect event, used to verify that the connection is up and running"," *"," * @event Connection#connect"," * @type {Connection}"," */","","/**"," * The server connection closed, all pool connections closed"," *"," * @event Connection#close"," * @type {Connection}"," */","","/**"," * The server connection caused an error, all pool connections closed"," *"," * @event Connection#error"," * @type {Connection}"," */","","/**"," * The server connection timed out, all pool connections closed"," *"," * @event Connection#timeout"," * @type {Connection}"," */","","/**"," * The driver experienced an invalid message, all pool connections closed"," *"," * @event Connection#parseError"," * @type {Connection}"," */","","module.exports = Connection;",""],"l":{"3":1,"14":1,"15":1,"18":1,"19":1,"50":1,"52":2,"54":2,"56":2,"58":2,"60":2,"62":2,"64":2,"66":2,"69":2,"71":2,"74":2,"75":2,"76":2,"77":2,"78":2,"79":2,"80":2,"83":2,"86":2,"89":2,"90":2,"93":2,"94":2,"95":2,"96":2,"97":2,"98":2,"99":2,"100":2,"104":2,"107":2,"114":2,"115":2,"118":2,"119":2,"122":2,"123":2,"126":2,"129":2,"132":1,"134":1,"135":0,"136":0,"140":1,"141":0,"142":0,"146":1,"147":0,"148":0,"151":1,"152":0,"155":1,"156":0,"159":1,"161":0,"164":1,"166":0,"171":1,"172":2,"173":2,"175":2,"177":2,"181":1,"182":2,"183":0,"185":0,"187":0,"193":1,"194":2,"195":2,"197":2,"200":2,"201":0,"208":1,"209":2,"211":0,"213":0,"215":0,"217":0,"219":0,"221":0,"224":0,"227":0,"229":0,"232":0,"233":0,"235":0,"236":0,"237":0,"238":0,"240":0,"242":0,"247":0,"253":0,"255":0,"257":0,"258":0,"259":0,"261":0,"264":0,"265":0,"266":0,"267":0,"272":0,"274":0,"276":0,"278":0,"281":0,"284":0,"286":0,"287":0,"292":0,"293":0,"297":0,"298":0,"300":0,"302":0,"304":0,"306":0,"308":0,"310":0,"311":0,"312":0,"314":0,"315":0,"316":0,"317":0,"319":0,"321":0,"323":0,"325":0,"326":0,"332":0,"335":0,"336":0,"337":0,"338":0,"340":0,"342":0,"344":0,"345":0,"346":0,"347":0,"349":0,"351":0,"355":0,"357":0,"359":0,"368":1,"373":1,"375":0,"376":0,"377":0,"386":1,"387":2,"388":2,"390":2,"392":2,"393":0,"394":0,"395":0,"399":2,"404":2,"405":2,"406":2,"409":2,"410":0,"416":0,"417":0,"420":0,"421":0,"422":0,"423":0,"424":0,"427":0,"430":0,"431":0,"433":0,"434":0,"438":0,"439":0,"443":0,"445":0,"446":0,"450":0,"452":0,"454":0,"456":2,"458":0,"460":0,"465":2,"466":2,"467":2,"468":2,"476":1,"477":0,"479":0,"480":0,"481":0,"490":1,"492":2,"493":2,"495":2,"497":2,"500":2,"508":1,"509":0,"511":0,"512":0,"513":0,"515":0,"516":0,"521":0,"523":0,"531":1,"532":0,"540":1,"541":0,"549":1,"550":0,"551":0,"589":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/connection/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/connection/utils.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":1,"33":10,"34":10,"35":10,"36":10,"37":10,"38":0,"39":0,"40":10,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,10]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":10},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":52}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":11},"end":{"line":10,"column":27}}},"3":{"name":"(anonymous_3)","line":18,"loc":{"start":{"line":18,"column":11},"end":{"line":18,"column":22}}},"4":{"name":"(anonymous_4)","line":23,"loc":{"start":{"line":23,"column":18},"end":{"line":23,"column":67}}},"5":{"name":"(anonymous_5)","line":26,"loc":{"start":{"line":26,"column":9},"end":{"line":26,"column":20}}},"6":{"name":"(anonymous_6)","line":41,"loc":{"start":{"line":41,"column":24},"end":{"line":41,"column":51}}},"7":{"name":"(anonymous_7)","line":44,"loc":{"start":{"line":44,"column":9},"end":{"line":44,"column":20}}},"8":{"name":"(anonymous_8)","line":51,"loc":{"start":{"line":51,"column":11},"end":{"line":51,"column":32}}},"9":{"name":"(anonymous_9)","line":57,"loc":{"start":{"line":57,"column":19},"end":{"line":57,"column":50}}},"10":{"name":"(anonymous_10)","line":59,"loc":{"start":{"line":59,"column":22},"end":{"line":59,"column":34}}},"11":{"name":"(anonymous_11)","line":66,"loc":{"start":{"line":66,"column":19},"end":{"line":66,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":49}},"2":{"start":{"line":7,"column":0},"end":{"line":20,"column":1}},"3":{"start":{"line":8,"column":2},"end":{"line":19,"column":5}},"4":{"start":{"line":11,"column":8},"end":{"line":11,"column":93}},"5":{"start":{"line":11,"column":38},"end":{"line":11,"column":93}},"6":{"start":{"line":13,"column":8},"end":{"line":13,"column":47}},"7":{"start":{"line":13,"column":26},"end":{"line":13,"column":47}},"8":{"start":{"line":15,"column":8},"end":{"line":15,"column":81}},"9":{"start":{"line":15,"column":60},"end":{"line":15,"column":81}},"10":{"start":{"line":16,"column":8},"end":{"line":16,"column":27}},"11":{"start":{"line":18,"column":24},"end":{"line":18,"column":42}},"12":{"start":{"line":23,"column":0},"end":{"line":38,"column":1}},"13":{"start":{"line":24,"column":2},"end":{"line":37,"column":5}},"14":{"start":{"line":28,"column":6},"end":{"line":30,"column":7}},"15":{"start":{"line":29,"column":8},"end":{"line":29,"column":20}},"16":{"start":{"line":33,"column":6},"end":{"line":33,"column":67}},"17":{"start":{"line":33,"column":36},"end":{"line":33,"column":67}},"18":{"start":{"line":35,"column":6},"end":{"line":35,"column":31}},"19":{"start":{"line":41,"column":0},"end":{"line":48,"column":1}},"20":{"start":{"line":42,"column":2},"end":{"line":47,"column":5}},"21":{"start":{"line":45,"column":6},"end":{"line":45,"column":18}},"22":{"start":{"line":51,"column":0},"end":{"line":55,"column":1}},"23":{"start":{"line":52,"column":2},"end":{"line":52,"column":20}},"24":{"start":{"line":53,"column":2},"end":{"line":53,"column":48}},"25":{"start":{"line":53,"column":24},"end":{"line":53,"column":48}},"26":{"start":{"line":54,"column":2},"end":{"line":54,"column":14}},"27":{"start":{"line":57,"column":0},"end":{"line":64,"column":1}},"28":{"start":{"line":58,"column":2},"end":{"line":58,"column":24}},"29":{"start":{"line":59,"column":2},"end":{"line":61,"column":5}},"30":{"start":{"line":60,"column":4},"end":{"line":60,"column":33}},"31":{"start":{"line":63,"column":2},"end":{"line":63,"column":22}},"32":{"start":{"line":66,"column":0},"end":{"line":84,"column":1}},"33":{"start":{"line":67,"column":2},"end":{"line":67,"column":29}},"34":{"start":{"line":68,"column":2},"end":{"line":68,"column":22}},"35":{"start":{"line":70,"column":2},"end":{"line":81,"column":17}},"36":{"start":{"line":75,"column":6},"end":{"line":75,"column":54}},"37":{"start":{"line":76,"column":6},"end":{"line":79,"column":7}},"38":{"start":{"line":77,"column":8},"end":{"line":77,"column":35}},"39":{"start":{"line":78,"column":8},"end":{"line":78,"column":28}},"40":{"start":{"line":83,"column":2},"end":{"line":83,"column":14}},"41":{"start":{"line":86,"column":0},"end":{"line":86,"column":34}},"42":{"start":{"line":87,"column":0},"end":{"line":87,"column":34}},"43":{"start":{"line":88,"column":0},"end":{"line":88,"column":46}},"44":{"start":{"line":89,"column":0},"end":{"line":89,"column":20}},"45":{"start":{"line":90,"column":0},"end":{"line":90,"column":36}},"46":{"start":{"line":91,"column":0},"end":{"line":91,"column":36}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":11,"column":8}},{"start":{"line":11,"column":8},"end":{"line":11,"column":8}}]},"2":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":13,"column":8}},{"start":{"line":13,"column":8},"end":{"line":13,"column":8}}]},"3":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":8}},{"start":{"line":15,"column":8},"end":{"line":15,"column":8}}]},"4":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":11},"end":{"line":15,"column":25}},{"start":{"line":15,"column":29},"end":{"line":15,"column":58}}]},"5":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":6},"end":{"line":28,"column":6}},{"start":{"line":28,"column":6},"end":{"line":28,"column":6}}]},"6":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":9},"end":{"line":28,"column":34}},{"start":{"line":28,"column":38},"end":{"line":28,"column":50}},{"start":{"line":28,"column":54},"end":{"line":28,"column":69}}]},"7":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":6},"end":{"line":33,"column":6}},{"start":{"line":33,"column":6},"end":{"line":33,"column":6}}]},"8":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":9},"end":{"line":52,"column":13}},{"start":{"line":52,"column":17},"end":{"line":52,"column":19}}]},"9":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":6},"end":{"line":76,"column":6}},{"start":{"line":76,"column":6},"end":{"line":76,"column":6}}]}},"code":["\"use strict\";","","var f = require('util').format,","  require_optional = require('require_optional');","","// Set property function","var setProperty = function(obj, prop, flag, values) {","  Object.defineProperty(obj, prop.name, {","      enumerable:true,","      set: function(value) {","        if(typeof value != 'boolean') throw new Error(f(\"%s required a boolean\", prop.name));","        // Flip the bit to 1","        if(value == true) values.flags |= flag;","        // Flip the bit to 0 if it's set, otherwise ignore","        if(value == false && (values.flags & flag) == flag) values.flags ^= flag;","        prop.value = value;","      }","    , get: function() { return prop.value; }","  });","}","","// Set property function","var getProperty = function(obj, propName, fieldName, values, func) {","  Object.defineProperty(obj, propName, {","    enumerable:true,","    get: function() {","      // Not parsed yet, parse it","      if(values[fieldName] == null && obj.isParsed && !obj.isParsed()) {","        obj.parse();","      }","","      // Do we have a post processing function","      if(typeof func == 'function') return func(values[fieldName]);","      // Return raw value","      return values[fieldName];","    }","  });","}","","// Set simple property","var getSingleProperty = function(obj, name, value) {","  Object.defineProperty(obj, name, {","    enumerable:true,","    get: function() {","      return value","    }","  });","}","","// Shallow copy","var copy = function(fObj, tObj) {","  tObj = tObj || {};","  for(var name in fObj) tObj[name] = fObj[name];","  return tObj;","}","","var debugOptions = function(debugFields, options) {","  var finaloptions = {};","  debugFields.forEach(function(n) {","    finaloptions[n] = options[n];","  });","","  return finaloptions;","}","","var retrieveBSON = function() {","  var BSON = require('bson');","  BSON.native = false;","","  try {","    // try {","    //   BSON = require('bson-ext');","    //   BSON.native = true;","    // } catch(err) {","      var optionalBSON = require_optional('bson-ext');","      if(optionalBSON) {","        optionalBSON.native = true;","        return optionalBSON;","      }","    // }","  } catch(err) {}","","  return BSON;","}","","exports.setProperty = setProperty;","exports.getProperty = getProperty;","exports.getSingleProperty = getSingleProperty;","exports.copy = copy;","exports.debugOptions = debugOptions;","exports.retrieveBSON = retrieveBSON;",""],"l":{"3":1,"7":1,"8":0,"11":0,"13":0,"15":0,"16":0,"18":0,"23":1,"24":0,"28":0,"29":0,"33":0,"35":0,"41":1,"42":0,"45":0,"51":1,"52":0,"53":0,"54":0,"57":1,"58":0,"59":0,"60":0,"63":0,"66":1,"67":10,"68":10,"70":10,"75":10,"76":10,"77":0,"78":0,"83":10,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/connection/commands.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/connection/commands.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":1,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":1,"119":0,"120":1,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":1,"175":0,"176":0,"177":1,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":1,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":1,"258":0,"259":1,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0,0],"39":[0,0],"40":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":33,"loc":{"start":{"line":33,"column":12},"end":{"line":33,"column":47}}},"2":{"name":"(anonymous_2)","line":77,"loc":{"start":{"line":77,"column":31},"end":{"line":77,"column":42}}},"3":{"name":"(anonymous_3)","line":83,"loc":{"start":{"line":83,"column":22},"end":{"line":83,"column":33}}},"4":{"name":"(anonymous_4)","line":89,"loc":{"start":{"line":89,"column":24},"end":{"line":89,"column":35}}},"5":{"name":"(anonymous_5)","line":222,"loc":{"start":{"line":222,"column":21},"end":{"line":222,"column":32}}},"6":{"name":"(anonymous_6)","line":229,"loc":{"start":{"line":229,"column":14},"end":{"line":229,"column":49}}},"7":{"name":"(anonymous_7)","line":240,"loc":{"start":{"line":240,"column":26},"end":{"line":240,"column":37}}},"8":{"name":"(anonymous_8)","line":317,"loc":{"start":{"line":317,"column":17},"end":{"line":317,"column":43}}},"9":{"name":"(anonymous_9)","line":324,"loc":{"start":{"line":324,"column":29},"end":{"line":324,"column":40}}},"10":{"name":"(anonymous_10)","line":397,"loc":{"start":{"line":397,"column":15},"end":{"line":397,"column":42}}},"11":{"name":"(anonymous_11)","line":458,"loc":{"start":{"line":458,"column":30},"end":{"line":458,"column":41}}},"12":{"name":"(anonymous_12)","line":462,"loc":{"start":{"line":462,"column":27},"end":{"line":462,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":63}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":26}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":21}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":19}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":20}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":22}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":27}},"8":{"start":{"line":16,"column":0},"end":{"line":16,"column":29}},"9":{"start":{"line":17,"column":0},"end":{"line":17,"column":19}},"10":{"start":{"line":18,"column":0},"end":{"line":18,"column":26}},"11":{"start":{"line":19,"column":0},"end":{"line":19,"column":32}},"12":{"start":{"line":20,"column":0},"end":{"line":20,"column":25}},"13":{"start":{"line":21,"column":0},"end":{"line":21,"column":22}},"14":{"start":{"line":22,"column":0},"end":{"line":22,"column":23}},"15":{"start":{"line":25,"column":0},"end":{"line":25,"column":25}},"16":{"start":{"line":26,"column":0},"end":{"line":26,"column":22}},"17":{"start":{"line":27,"column":0},"end":{"line":27,"column":27}},"18":{"start":{"line":28,"column":0},"end":{"line":28,"column":22}},"19":{"start":{"line":33,"column":0},"end":{"line":73,"column":1}},"20":{"start":{"line":34,"column":2},"end":{"line":34,"column":18}},"21":{"start":{"line":36,"column":2},"end":{"line":36,"column":67}},"22":{"start":{"line":36,"column":17},"end":{"line":36,"column":67}},"23":{"start":{"line":37,"column":2},"end":{"line":37,"column":73}},"24":{"start":{"line":37,"column":20},"end":{"line":37,"column":73}},"25":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"26":{"start":{"line":41,"column":4},"end":{"line":41,"column":65}},"27":{"start":{"line":45,"column":2},"end":{"line":45,"column":19}},"28":{"start":{"line":46,"column":2},"end":{"line":46,"column":15}},"29":{"start":{"line":47,"column":2},"end":{"line":47,"column":21}},"30":{"start":{"line":50,"column":2},"end":{"line":50,"column":31}},"31":{"start":{"line":53,"column":2},"end":{"line":53,"column":48}},"32":{"start":{"line":54,"column":2},"end":{"line":54,"column":52}},"33":{"start":{"line":55,"column":2},"end":{"line":55,"column":65}},"34":{"start":{"line":56,"column":2},"end":{"line":56,"column":40}},"35":{"start":{"line":59,"column":2},"end":{"line":59,"column":112}},"36":{"start":{"line":60,"column":2},"end":{"line":60,"column":103}},"37":{"start":{"line":61,"column":2},"end":{"line":61,"column":61}},"38":{"start":{"line":62,"column":2},"end":{"line":62,"column":84}},"39":{"start":{"line":63,"column":2},"end":{"line":63,"column":39}},"40":{"start":{"line":66,"column":2},"end":{"line":66,"column":24}},"41":{"start":{"line":67,"column":2},"end":{"line":67,"column":78}},"42":{"start":{"line":68,"column":2},"end":{"line":68,"column":27}},"43":{"start":{"line":69,"column":2},"end":{"line":69,"column":31}},"44":{"start":{"line":70,"column":2},"end":{"line":70,"column":25}},"45":{"start":{"line":71,"column":2},"end":{"line":71,"column":23}},"46":{"start":{"line":72,"column":2},"end":{"line":72,"column":23}},"47":{"start":{"line":77,"column":0},"end":{"line":79,"column":1}},"48":{"start":{"line":78,"column":2},"end":{"line":78,"column":32}},"49":{"start":{"line":83,"column":0},"end":{"line":85,"column":1}},"50":{"start":{"line":84,"column":2},"end":{"line":84,"column":24}},"51":{"start":{"line":89,"column":0},"end":{"line":220,"column":1}},"52":{"start":{"line":90,"column":2},"end":{"line":90,"column":18}},"53":{"start":{"line":91,"column":2},"end":{"line":91,"column":19}},"54":{"start":{"line":92,"column":2},"end":{"line":92,"column":24}},"55":{"start":{"line":95,"column":2},"end":{"line":95,"column":16}},"56":{"start":{"line":96,"column":2},"end":{"line":98,"column":3}},"57":{"start":{"line":97,"column":4},"end":{"line":97,"column":34}},"58":{"start":{"line":100,"column":2},"end":{"line":102,"column":3}},"59":{"start":{"line":101,"column":4},"end":{"line":101,"column":24}},"60":{"start":{"line":104,"column":2},"end":{"line":106,"column":3}},"61":{"start":{"line":105,"column":4},"end":{"line":105,"column":31}},"62":{"start":{"line":108,"column":2},"end":{"line":110,"column":3}},"63":{"start":{"line":109,"column":4},"end":{"line":109,"column":36}},"64":{"start":{"line":112,"column":2},"end":{"line":114,"column":3}},"65":{"start":{"line":113,"column":4},"end":{"line":113,"column":29}},"66":{"start":{"line":116,"column":2},"end":{"line":118,"column":3}},"67":{"start":{"line":117,"column":4},"end":{"line":117,"column":26}},"68":{"start":{"line":120,"column":2},"end":{"line":122,"column":3}},"69":{"start":{"line":121,"column":4},"end":{"line":121,"column":26}},"70":{"start":{"line":125,"column":2},"end":{"line":125,"column":81}},"71":{"start":{"line":125,"column":44},"end":{"line":125,"column":81}},"72":{"start":{"line":128,"column":2},"end":{"line":134,"column":4}},"73":{"start":{"line":137,"column":2},"end":{"line":137,"column":23}},"74":{"start":{"line":140,"column":2},"end":{"line":144,"column":5}},"75":{"start":{"line":147,"column":2},"end":{"line":147,"column":22}},"76":{"start":{"line":149,"column":2},"end":{"line":158,"column":3}},"77":{"start":{"line":151,"column":4},"end":{"line":155,"column":7}},"78":{"start":{"line":157,"column":4},"end":{"line":157,"column":29}},"79":{"start":{"line":161,"column":2},"end":{"line":161,"column":88}},"80":{"start":{"line":164,"column":2},"end":{"line":164,"column":16}},"81":{"start":{"line":167,"column":2},"end":{"line":167,"column":41}},"82":{"start":{"line":168,"column":2},"end":{"line":168,"column":41}},"83":{"start":{"line":169,"column":2},"end":{"line":169,"column":40}},"84":{"start":{"line":170,"column":2},"end":{"line":170,"column":35}},"85":{"start":{"line":173,"column":2},"end":{"line":173,"column":52}},"86":{"start":{"line":174,"column":2},"end":{"line":174,"column":52}},"87":{"start":{"line":175,"column":2},"end":{"line":175,"column":51}},"88":{"start":{"line":176,"column":2},"end":{"line":176,"column":42}},"89":{"start":{"line":177,"column":2},"end":{"line":177,"column":20}},"90":{"start":{"line":180,"column":2},"end":{"line":180,"column":39}},"91":{"start":{"line":181,"column":2},"end":{"line":181,"column":39}},"92":{"start":{"line":182,"column":2},"end":{"line":182,"column":38}},"93":{"start":{"line":183,"column":2},"end":{"line":183,"column":29}},"94":{"start":{"line":184,"column":2},"end":{"line":184,"column":20}},"95":{"start":{"line":187,"column":2},"end":{"line":187,"column":46}},"96":{"start":{"line":188,"column":2},"end":{"line":188,"column":46}},"97":{"start":{"line":189,"column":2},"end":{"line":189,"column":45}},"98":{"start":{"line":190,"column":2},"end":{"line":190,"column":36}},"99":{"start":{"line":191,"column":2},"end":{"line":191,"column":20}},"100":{"start":{"line":194,"column":2},"end":{"line":194,"column":43}},"101":{"start":{"line":195,"column":2},"end":{"line":195,"column":43}},"102":{"start":{"line":196,"column":2},"end":{"line":196,"column":42}},"103":{"start":{"line":197,"column":2},"end":{"line":197,"column":33}},"104":{"start":{"line":198,"column":2},"end":{"line":198,"column":20}},"105":{"start":{"line":201,"column":2},"end":{"line":201,"column":59}},"106":{"start":{"line":202,"column":2},"end":{"line":202,"column":24}},"107":{"start":{"line":205,"column":2},"end":{"line":205,"column":55}},"108":{"start":{"line":206,"column":2},"end":{"line":206,"column":55}},"109":{"start":{"line":207,"column":2},"end":{"line":207,"column":54}},"110":{"start":{"line":208,"column":2},"end":{"line":208,"column":45}},"111":{"start":{"line":209,"column":2},"end":{"line":209,"column":20}},"112":{"start":{"line":212,"column":2},"end":{"line":212,"column":57}},"113":{"start":{"line":213,"column":2},"end":{"line":213,"column":57}},"114":{"start":{"line":214,"column":2},"end":{"line":214,"column":56}},"115":{"start":{"line":215,"column":2},"end":{"line":215,"column":47}},"116":{"start":{"line":216,"column":2},"end":{"line":216,"column":20}},"117":{"start":{"line":219,"column":2},"end":{"line":219,"column":17}},"118":{"start":{"line":222,"column":0},"end":{"line":224,"column":1}},"119":{"start":{"line":223,"column":2},"end":{"line":223,"column":22}},"120":{"start":{"line":229,"column":0},"end":{"line":236,"column":1}},"121":{"start":{"line":230,"column":2},"end":{"line":230,"column":20}},"122":{"start":{"line":231,"column":2},"end":{"line":231,"column":49}},"123":{"start":{"line":232,"column":2},"end":{"line":232,"column":32}},"124":{"start":{"line":233,"column":2},"end":{"line":233,"column":19}},"125":{"start":{"line":234,"column":2},"end":{"line":234,"column":15}},"126":{"start":{"line":235,"column":2},"end":{"line":235,"column":27}},"127":{"start":{"line":240,"column":0},"end":{"line":312,"column":1}},"128":{"start":{"line":241,"column":2},"end":{"line":241,"column":68}},"129":{"start":{"line":243,"column":2},"end":{"line":243,"column":16}},"130":{"start":{"line":245,"column":2},"end":{"line":245,"column":35}},"131":{"start":{"line":249,"column":2},"end":{"line":249,"column":45}},"132":{"start":{"line":250,"column":2},"end":{"line":250,"column":45}},"133":{"start":{"line":251,"column":2},"end":{"line":251,"column":44}},"134":{"start":{"line":252,"column":2},"end":{"line":252,"column":35}},"135":{"start":{"line":253,"column":2},"end":{"line":253,"column":20}},"136":{"start":{"line":256,"column":2},"end":{"line":256,"column":53}},"137":{"start":{"line":257,"column":2},"end":{"line":257,"column":53}},"138":{"start":{"line":258,"column":2},"end":{"line":258,"column":52}},"139":{"start":{"line":259,"column":2},"end":{"line":259,"column":43}},"140":{"start":{"line":260,"column":2},"end":{"line":260,"column":20}},"141":{"start":{"line":263,"column":2},"end":{"line":263,"column":40}},"142":{"start":{"line":264,"column":2},"end":{"line":264,"column":40}},"143":{"start":{"line":265,"column":2},"end":{"line":265,"column":39}},"144":{"start":{"line":266,"column":2},"end":{"line":266,"column":30}},"145":{"start":{"line":267,"column":2},"end":{"line":267,"column":20}},"146":{"start":{"line":270,"column":2},"end":{"line":270,"column":49}},"147":{"start":{"line":271,"column":2},"end":{"line":271,"column":49}},"148":{"start":{"line":272,"column":2},"end":{"line":272,"column":48}},"149":{"start":{"line":273,"column":2},"end":{"line":273,"column":39}},"150":{"start":{"line":274,"column":2},"end":{"line":274,"column":20}},"151":{"start":{"line":277,"column":2},"end":{"line":277,"column":40}},"152":{"start":{"line":278,"column":2},"end":{"line":278,"column":40}},"153":{"start":{"line":279,"column":2},"end":{"line":279,"column":39}},"154":{"start":{"line":280,"column":2},"end":{"line":280,"column":30}},"155":{"start":{"line":281,"column":2},"end":{"line":281,"column":20}},"156":{"start":{"line":284,"column":2},"end":{"line":284,"column":60}},"157":{"start":{"line":285,"column":2},"end":{"line":285,"column":25}},"158":{"start":{"line":289,"column":2},"end":{"line":289,"column":58}},"159":{"start":{"line":290,"column":2},"end":{"line":290,"column":58}},"160":{"start":{"line":291,"column":2},"end":{"line":291,"column":57}},"161":{"start":{"line":292,"column":2},"end":{"line":292,"column":48}},"162":{"start":{"line":293,"column":2},"end":{"line":293,"column":20}},"163":{"start":{"line":297,"column":2},"end":{"line":297,"column":65}},"164":{"start":{"line":298,"column":2},"end":{"line":298,"column":65}},"165":{"start":{"line":299,"column":2},"end":{"line":299,"column":64}},"166":{"start":{"line":300,"column":2},"end":{"line":300,"column":55}},"167":{"start":{"line":301,"column":2},"end":{"line":301,"column":20}},"168":{"start":{"line":304,"column":2},"end":{"line":304,"column":66}},"169":{"start":{"line":305,"column":2},"end":{"line":305,"column":66}},"170":{"start":{"line":306,"column":2},"end":{"line":306,"column":65}},"171":{"start":{"line":307,"column":2},"end":{"line":307,"column":56}},"172":{"start":{"line":308,"column":2},"end":{"line":308,"column":20}},"173":{"start":{"line":311,"column":2},"end":{"line":311,"column":17}},"174":{"start":{"line":317,"column":0},"end":{"line":320,"column":1}},"175":{"start":{"line":318,"column":2},"end":{"line":318,"column":32}},"176":{"start":{"line":319,"column":2},"end":{"line":319,"column":29}},"177":{"start":{"line":324,"column":0},"end":{"line":395,"column":1}},"178":{"start":{"line":325,"column":2},"end":{"line":325,"column":61}},"179":{"start":{"line":328,"column":2},"end":{"line":328,"column":16}},"180":{"start":{"line":329,"column":2},"end":{"line":329,"column":35}},"181":{"start":{"line":333,"column":2},"end":{"line":333,"column":45}},"182":{"start":{"line":334,"column":2},"end":{"line":334,"column":45}},"183":{"start":{"line":335,"column":2},"end":{"line":335,"column":44}},"184":{"start":{"line":336,"column":2},"end":{"line":336,"column":35}},"185":{"start":{"line":337,"column":2},"end":{"line":337,"column":20}},"186":{"start":{"line":340,"column":2},"end":{"line":340,"column":53}},"187":{"start":{"line":341,"column":2},"end":{"line":341,"column":53}},"188":{"start":{"line":342,"column":2},"end":{"line":342,"column":52}},"189":{"start":{"line":343,"column":2},"end":{"line":343,"column":43}},"190":{"start":{"line":344,"column":2},"end":{"line":344,"column":20}},"191":{"start":{"line":347,"column":2},"end":{"line":347,"column":40}},"192":{"start":{"line":348,"column":2},"end":{"line":348,"column":40}},"193":{"start":{"line":349,"column":2},"end":{"line":349,"column":39}},"194":{"start":{"line":350,"column":2},"end":{"line":350,"column":30}},"195":{"start":{"line":351,"column":2},"end":{"line":351,"column":20}},"196":{"start":{"line":354,"column":2},"end":{"line":354,"column":54}},"197":{"start":{"line":355,"column":2},"end":{"line":355,"column":54}},"198":{"start":{"line":356,"column":2},"end":{"line":356,"column":53}},"199":{"start":{"line":357,"column":2},"end":{"line":357,"column":44}},"200":{"start":{"line":358,"column":2},"end":{"line":358,"column":20}},"201":{"start":{"line":361,"column":2},"end":{"line":361,"column":40}},"202":{"start":{"line":362,"column":2},"end":{"line":362,"column":40}},"203":{"start":{"line":363,"column":2},"end":{"line":363,"column":39}},"204":{"start":{"line":364,"column":2},"end":{"line":364,"column":30}},"205":{"start":{"line":365,"column":2},"end":{"line":365,"column":20}},"206":{"start":{"line":369,"column":2},"end":{"line":369,"column":60}},"207":{"start":{"line":370,"column":2},"end":{"line":370,"column":60}},"208":{"start":{"line":371,"column":2},"end":{"line":371,"column":59}},"209":{"start":{"line":372,"column":2},"end":{"line":372,"column":50}},"210":{"start":{"line":373,"column":2},"end":{"line":373,"column":20}},"211":{"start":{"line":376,"column":2},"end":{"line":391,"column":3}},"212":{"start":{"line":379,"column":4},"end":{"line":379,"column":71}},"213":{"start":{"line":380,"column":4},"end":{"line":380,"column":71}},"214":{"start":{"line":381,"column":4},"end":{"line":381,"column":70}},"215":{"start":{"line":382,"column":4},"end":{"line":382,"column":61}},"216":{"start":{"line":383,"column":4},"end":{"line":383,"column":22}},"217":{"start":{"line":386,"column":4},"end":{"line":386,"column":72}},"218":{"start":{"line":387,"column":4},"end":{"line":387,"column":72}},"219":{"start":{"line":388,"column":4},"end":{"line":388,"column":71}},"220":{"start":{"line":389,"column":4},"end":{"line":389,"column":62}},"221":{"start":{"line":390,"column":4},"end":{"line":390,"column":22}},"222":{"start":{"line":394,"column":2},"end":{"line":394,"column":17}},"223":{"start":{"line":397,"column":0},"end":{"line":456,"column":1}},"224":{"start":{"line":398,"column":2},"end":{"line":398,"column":82}},"225":{"start":{"line":399,"column":2},"end":{"line":399,"column":22}},"226":{"start":{"line":404,"column":2},"end":{"line":404,"column":17}},"227":{"start":{"line":405,"column":2},"end":{"line":405,"column":18}},"228":{"start":{"line":406,"column":2},"end":{"line":406,"column":19}},"229":{"start":{"line":407,"column":2},"end":{"line":407,"column":19}},"230":{"start":{"line":408,"column":2},"end":{"line":408,"column":19}},"231":{"start":{"line":411,"column":2},"end":{"line":411,"column":119}},"232":{"start":{"line":412,"column":2},"end":{"line":412,"column":30}},"233":{"start":{"line":415,"column":2},"end":{"line":415,"column":122}},"234":{"start":{"line":416,"column":2},"end":{"line":416,"column":30}},"235":{"start":{"line":419,"column":2},"end":{"line":419,"column":123}},"236":{"start":{"line":420,"column":2},"end":{"line":420,"column":30}},"237":{"start":{"line":423,"column":2},"end":{"line":423,"column":30}},"238":{"start":{"line":426,"column":2},"end":{"line":426,"column":126}},"239":{"start":{"line":427,"column":2},"end":{"line":427,"column":30}},"240":{"start":{"line":430,"column":2},"end":{"line":430,"column":119}},"241":{"start":{"line":431,"column":2},"end":{"line":431,"column":30}},"242":{"start":{"line":432,"column":2},"end":{"line":432,"column":120}},"243":{"start":{"line":433,"column":2},"end":{"line":433,"column":30}},"244":{"start":{"line":435,"column":2},"end":{"line":435,"column":46}},"245":{"start":{"line":438,"column":2},"end":{"line":438,"column":125}},"246":{"start":{"line":439,"column":2},"end":{"line":439,"column":30}},"247":{"start":{"line":442,"column":2},"end":{"line":442,"column":127}},"248":{"start":{"line":443,"column":2},"end":{"line":443,"column":30}},"249":{"start":{"line":446,"column":2},"end":{"line":446,"column":50}},"250":{"start":{"line":449,"column":2},"end":{"line":449,"column":69}},"251":{"start":{"line":450,"column":2},"end":{"line":450,"column":64}},"252":{"start":{"line":451,"column":2},"end":{"line":451,"column":73}},"253":{"start":{"line":452,"column":2},"end":{"line":452,"column":64}},"254":{"start":{"line":453,"column":2},"end":{"line":453,"column":87}},"255":{"start":{"line":454,"column":2},"end":{"line":454,"column":90}},"256":{"start":{"line":455,"column":2},"end":{"line":455,"column":94}},"257":{"start":{"line":458,"column":0},"end":{"line":460,"column":1}},"258":{"start":{"line":459,"column":2},"end":{"line":459,"column":21}},"259":{"start":{"line":462,"column":0},"end":{"line":539,"column":1}},"260":{"start":{"line":464,"column":2},"end":{"line":464,"column":25}},"261":{"start":{"line":464,"column":18},"end":{"line":464,"column":25}},"262":{"start":{"line":465,"column":2},"end":{"line":465,"column":26}},"263":{"start":{"line":468,"column":2},"end":{"line":468,"column":33}},"264":{"start":{"line":469,"column":2},"end":{"line":469,"column":64}},"265":{"start":{"line":470,"column":2},"end":{"line":472,"column":29}},"266":{"start":{"line":473,"column":2},"end":{"line":475,"column":30}},"267":{"start":{"line":476,"column":2},"end":{"line":478,"column":30}},"268":{"start":{"line":479,"column":2},"end":{"line":479,"column":25}},"269":{"start":{"line":482,"column":2},"end":{"line":486,"column":4}},"270":{"start":{"line":491,"column":2},"end":{"line":518,"column":3}},"271":{"start":{"line":493,"column":4},"end":{"line":493,"column":138}},"272":{"start":{"line":495,"column":4},"end":{"line":495,"column":70}},"273":{"start":{"line":497,"column":4},"end":{"line":497,"column":24}},"274":{"start":{"line":498,"column":4},"end":{"line":498,"column":44}},"275":{"start":{"line":499,"column":4},"end":{"line":499,"column":39}},"276":{"start":{"line":502,"column":4},"end":{"line":502,"column":56}},"277":{"start":{"line":505,"column":4},"end":{"line":505,"column":53}},"278":{"start":{"line":506,"column":4},"end":{"line":506,"column":48}},"279":{"start":{"line":508,"column":4},"end":{"line":510,"column":22}},"280":{"start":{"line":513,"column":4},"end":{"line":513,"column":39}},"281":{"start":{"line":516,"column":4},"end":{"line":516,"column":22}},"282":{"start":{"line":517,"column":4},"end":{"line":517,"column":11}},"283":{"start":{"line":523,"column":2},"end":{"line":535,"column":3}},"284":{"start":{"line":524,"column":4},"end":{"line":524,"column":138}},"285":{"start":{"line":527,"column":4},"end":{"line":531,"column":5}},"286":{"start":{"line":528,"column":6},"end":{"line":528,"column":77}},"287":{"start":{"line":530,"column":6},"end":{"line":530,"column":110}},"288":{"start":{"line":534,"column":4},"end":{"line":534,"column":39}},"289":{"start":{"line":538,"column":2},"end":{"line":538,"column":21}},"290":{"start":{"line":541,"column":0},"end":{"line":546,"column":1}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"2":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"4":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":17},"end":{"line":50,"column":24}},{"start":{"line":50,"column":28},"end":{"line":50,"column":30}}]},"5":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":22},"end":{"line":53,"column":42}},{"start":{"line":53,"column":46},"end":{"line":53,"column":47}}]},"6":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":24},"end":{"line":54,"column":46}},{"start":{"line":54,"column":50},"end":{"line":54,"column":51}}]},"7":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":29},"end":{"line":55,"column":56}},{"start":{"line":55,"column":60},"end":{"line":55,"column":64}}]},"8":{"line":59,"type":"cond-expr","locations":[{"start":{"line":59,"column":77},"end":{"line":59,"column":103}},{"start":{"line":59,"column":106},"end":{"line":59,"column":111}}]},"9":{"line":60,"type":"cond-expr","locations":[{"start":{"line":60,"column":71},"end":{"line":60,"column":94}},{"start":{"line":60,"column":97},"end":{"line":60,"column":102}}]},"10":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":21},"end":{"line":61,"column":40}},{"start":{"line":61,"column":44},"end":{"line":61,"column":60}}]},"11":{"line":62,"type":"cond-expr","locations":[{"start":{"line":62,"column":59},"end":{"line":62,"column":76}},{"start":{"line":62,"column":79},"end":{"line":62,"column":83}}]},"12":{"line":67,"type":"cond-expr","locations":[{"start":{"line":67,"column":54},"end":{"line":67,"column":69}},{"start":{"line":67,"column":72},"end":{"line":67,"column":77}}]},"13":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":2},"end":{"line":96,"column":2}},{"start":{"line":96,"column":2},"end":{"line":96,"column":2}}]},"14":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":2},"end":{"line":100,"column":2}},{"start":{"line":100,"column":2},"end":{"line":100,"column":2}}]},"15":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":2},"end":{"line":104,"column":2}},{"start":{"line":104,"column":2},"end":{"line":104,"column":2}}]},"16":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":2},"end":{"line":108,"column":2}},{"start":{"line":108,"column":2},"end":{"line":108,"column":2}}]},"17":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":2},"end":{"line":112,"column":2}},{"start":{"line":112,"column":2},"end":{"line":112,"column":2}}]},"18":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":2},"end":{"line":116,"column":2}},{"start":{"line":116,"column":2},"end":{"line":116,"column":2}}]},"19":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":2},"end":{"line":120,"column":2}},{"start":{"line":120,"column":2},"end":{"line":120,"column":2}}]},"20":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":2},"end":{"line":125,"column":2}},{"start":{"line":125,"column":2},"end":{"line":125,"column":2}}]},"21":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":2},"end":{"line":149,"column":2}},{"start":{"line":149,"column":2},"end":{"line":149,"column":2}}]},"22":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":5},"end":{"line":149,"column":29}},{"start":{"line":149,"column":33},"end":{"line":149,"column":81}}]},"23":{"line":161,"type":"cond-expr","locations":[{"start":{"line":161,"column":65},"end":{"line":161,"column":82}},{"start":{"line":161,"column":85},"end":{"line":161,"column":86}}]},"24":{"line":230,"type":"binary-expr","locations":[{"start":{"line":230,"column":9},"end":{"line":230,"column":13}},{"start":{"line":230,"column":17},"end":{"line":230,"column":19}}]},"25":{"line":231,"type":"binary-expr","locations":[{"start":{"line":231,"column":24},"end":{"line":231,"column":43}},{"start":{"line":231,"column":47},"end":{"line":231,"column":48}}]},"26":{"line":398,"type":"binary-expr","locations":[{"start":{"line":398,"column":9},"end":{"line":398,"column":13}},{"start":{"line":398,"column":17},"end":{"line":398,"column":81}}]},"27":{"line":453,"type":"cond-expr","locations":[{"start":{"line":453,"column":62},"end":{"line":453,"column":79}},{"start":{"line":453,"column":82},"end":{"line":453,"column":86}}]},"28":{"line":454,"type":"cond-expr","locations":[{"start":{"line":454,"column":64},"end":{"line":454,"column":82}},{"start":{"line":454,"column":85},"end":{"line":454,"column":89}}]},"29":{"line":455,"type":"cond-expr","locations":[{"start":{"line":455,"column":66},"end":{"line":455,"column":85}},{"start":{"line":455,"column":88},"end":{"line":455,"column":93}}]},"30":{"line":464,"type":"if","locations":[{"start":{"line":464,"column":2},"end":{"line":464,"column":2}},{"start":{"line":464,"column":2},"end":{"line":464,"column":2}}]},"31":{"line":465,"type":"binary-expr","locations":[{"start":{"line":465,"column":12},"end":{"line":465,"column":19}},{"start":{"line":465,"column":23},"end":{"line":465,"column":25}}]},"32":{"line":468,"type":"binary-expr","locations":[{"start":{"line":468,"column":12},"end":{"line":468,"column":23}},{"start":{"line":468,"column":27},"end":{"line":468,"column":32}}]},"33":{"line":469,"type":"binary-expr","locations":[{"start":{"line":469,"column":28},"end":{"line":469,"column":55}},{"start":{"line":469,"column":59},"end":{"line":469,"column":63}}]},"34":{"line":470,"type":"cond-expr","locations":[{"start":{"line":471,"column":6},"end":{"line":471,"column":26}},{"start":{"line":472,"column":6},"end":{"line":472,"column":28}}]},"35":{"line":473,"type":"cond-expr","locations":[{"start":{"line":474,"column":6},"end":{"line":474,"column":27}},{"start":{"line":475,"column":6},"end":{"line":475,"column":29}}]},"36":{"line":476,"type":"cond-expr","locations":[{"start":{"line":477,"column":6},"end":{"line":477,"column":28}},{"start":{"line":478,"column":6},"end":{"line":478,"column":30}}]},"37":{"line":491,"type":"if","locations":[{"start":{"line":491,"column":2},"end":{"line":491,"column":2}},{"start":{"line":491,"column":2},"end":{"line":491,"column":2}}]},"38":{"line":491,"type":"binary-expr","locations":[{"start":{"line":491,"column":5},"end":{"line":491,"column":29}},{"start":{"line":491,"column":33},"end":{"line":491,"column":60}},{"start":{"line":491,"column":64},"end":{"line":491,"column":67}}]},"39":{"line":508,"type":"cond-expr","locations":[{"start":{"line":509,"column":8},"end":{"line":509,"column":38}},{"start":{"line":510,"column":8},"end":{"line":510,"column":21}}]},"40":{"line":527,"type":"if","locations":[{"start":{"line":527,"column":4},"end":{"line":527,"column":4}},{"start":{"line":527,"column":4},"end":{"line":527,"column":4}}]}},"code":["\"use strict\";","","var retrieveBSON = require('../connection/utils').retrieveBSON;","var BSON = retrieveBSON();","var Long = BSON.Long;","","// Incrementing request id","var _requestId = 0;","","// Wire command operation ids","var OP_QUERY = 2004;","var OP_GETMORE = 2005;","var OP_KILL_CURSORS = 2007;","","// Query flags","var OPTS_TAILABLE_CURSOR = 2;","var OPTS_SLAVE = 4;","var OPTS_OPLOG_REPLAY = 8;","var OPTS_NO_CURSOR_TIMEOUT = 16;","var OPTS_AWAIT_DATA = 32;","var OPTS_EXHAUST = 64;","var OPTS_PARTIAL = 128;","","// Response flags","var CURSOR_NOT_FOUND = 0;","var QUERY_FAILURE = 2;","var SHARD_CONFIG_STALE = 4;","var AWAIT_CAPABLE = 8;","","/**************************************************************"," * QUERY"," **************************************************************/","var Query = function(bson, ns, query, options) {","  var self = this;","  // Basic options needed to be passed in","  if(ns == null) throw new Error(\"ns must be specified for query\");","  if(query == null) throw new Error(\"query must be specified for query\");","","  // Validate that we are not passing 0x00 in the collection name","  if(!!~ns.indexOf(\"\\x00\")) {","    throw new Error(\"namespace cannot contain a null character\");","  }","","  // Basic options","  this.bson = bson;","  this.ns = ns;","  this.query = query;","","  // Ensure empty options","  this.options = options || {};","","  // Additional options","  this.numberToSkip = options.numberToSkip || 0;","  this.numberToReturn = options.numberToReturn || 0;","  this.returnFieldSelector = options.returnFieldSelector || null;","  this.requestId = Query.getRequestId();","","  // Serialization option","  this.serializeFunctions = typeof options.serializeFunctions == 'boolean' ? options.serializeFunctions : false;","  this.ignoreUndefined = typeof options.ignoreUndefined == 'boolean' ? options.ignoreUndefined : false;","  this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;","  this.checkKeys = typeof options.checkKeys == 'boolean' ? options.checkKeys : true;","  this.batchSize = self.numberToReturn;","","  // Flags","  this.tailable = false;","  this.slaveOk = typeof options.slaveOk == 'boolean'? options.slaveOk : false;","  this.oplogReplay = false;","  this.noCursorTimeout = false;","  this.awaitData = false;","  this.exhaust = false;","  this.partial = false;","}","","//","// Assign a new request Id","Query.prototype.incRequestId = function() {","  this.requestId = _requestId++;","}","","//","// Assign a new request Id","Query.nextRequestId = function() {","  return _requestId + 1;","}","","//","// Uses a single allocated buffer for the process, avoiding multiple memory allocations","Query.prototype.toBin = function() {","  var self = this;","  var buffers = [];","  var projection = null;","","  // Set up the flags","  var flags = 0;","  if(this.tailable) {","    flags |= OPTS_TAILABLE_CURSOR;","  }","","  if(this.slaveOk) {","    flags |= OPTS_SLAVE;","  }","","  if(this.oplogReplay) {","    flags |= OPTS_OPLOG_REPLAY;","  }","","  if(this.noCursorTimeout) {","    flags |= OPTS_NO_CURSOR_TIMEOUT;","  }","","  if(this.awaitData) {","    flags |= OPTS_AWAIT_DATA;","  }","","  if(this.exhaust) {","    flags |= OPTS_EXHAUST;","  }","","  if(this.partial) {","    flags |= OPTS_PARTIAL;","  }","","  // If batchSize is different to self.numberToReturn","  if(self.batchSize != self.numberToReturn) self.numberToReturn = self.batchSize;","","  // Allocate write protocol header buffer","  var header = new Buffer(","    4 * 4 // Header","    + 4   // Flags","    + Buffer.byteLength(self.ns) + 1 // namespace","    + 4 // numberToSkip","    + 4 // numberToReturn","  );","","  // Add header to buffers","  buffers.push(header);","","  // Serialize the query","  var query = self.bson.serialize(this.query, {","    checkKeys: this.checkKeys,","    serializeFunctions: this.serializeFunctions,","    ignoreUndefined: this.ignoreUndefined,","  });","","  // Add query document","  buffers.push(query);","","  if(self.returnFieldSelector && Object.keys(self.returnFieldSelector).length > 0) {","    // Serialize the projection document","    projection = self.bson.serialize(this.returnFieldSelector, {","      checkKeys: this.checkKeys,","      serializeFunctions: this.serializeFunctions,","      ignoreUndefined: this.ignoreUndefined,","    });","    // Add projection document","    buffers.push(projection);","  }","","  // Total message size","  var totalLength = header.length + query.length + (projection ? projection.length : 0);","","  // Set up the index","  var index = 4;","","  // Write total document length","  header[3] = (totalLength >> 24) & 0xff;","  header[2] = (totalLength >> 16) & 0xff;","  header[1] = (totalLength >> 8) & 0xff;","  header[0] = (totalLength) & 0xff;","","  // Write header information requestId","  header[index + 3] = (this.requestId >> 24) & 0xff;","  header[index + 2] = (this.requestId >> 16) & 0xff;","  header[index + 1] = (this.requestId >> 8) & 0xff;","  header[index] = (this.requestId) & 0xff;","  index = index + 4;","","  // Write header information responseTo","  header[index + 3] = (0 >> 24) & 0xff;","  header[index + 2] = (0 >> 16) & 0xff;","  header[index + 1] = (0 >> 8) & 0xff;","  header[index] = (0) & 0xff;","  index = index + 4;","","  // Write header information OP_QUERY","  header[index + 3] = (OP_QUERY >> 24) & 0xff;","  header[index + 2] = (OP_QUERY >> 16) & 0xff;","  header[index + 1] = (OP_QUERY >> 8) & 0xff;","  header[index] = (OP_QUERY) & 0xff;","  index = index + 4;","","  // Write header information flags","  header[index + 3] = (flags >> 24) & 0xff;","  header[index + 2] = (flags >> 16) & 0xff;","  header[index + 1] = (flags >> 8) & 0xff;","  header[index] = (flags) & 0xff;","  index = index + 4;","","  // Write collection name","  index = index + header.write(this.ns, index, 'utf8') + 1;","  header[index - 1] = 0;","","  // Write header information flags numberToSkip","  header[index + 3] = (this.numberToSkip >> 24) & 0xff;","  header[index + 2] = (this.numberToSkip >> 16) & 0xff;","  header[index + 1] = (this.numberToSkip >> 8) & 0xff;","  header[index] = (this.numberToSkip) & 0xff;","  index = index + 4;","","  // Write header information flags numberToReturn","  header[index + 3] = (this.numberToReturn >> 24) & 0xff;","  header[index + 2] = (this.numberToReturn >> 16) & 0xff;","  header[index + 1] = (this.numberToReturn >> 8) & 0xff;","  header[index] = (this.numberToReturn) & 0xff;","  index = index + 4;","","  // Return the buffers","  return buffers;","}","","Query.getRequestId = function() {","  return ++_requestId;","}","","/**************************************************************"," * GETMORE"," **************************************************************/","var GetMore = function(bson, ns, cursorId, opts) {","  opts = opts || {};","  this.numberToReturn = opts.numberToReturn || 0;","  this.requestId = _requestId++;","  this.bson = bson;","  this.ns = ns;","  this.cursorId = cursorId;","}","","//","// Uses a single allocated buffer for the process, avoiding multiple memory allocations","GetMore.prototype.toBin = function() {","  var length = 4 + Buffer.byteLength(this.ns) + 1 + 4 + 8 + (4 * 4);","  // Create command buffer","  var index = 0;","  // Allocate buffer","  var _buffer = new Buffer(length);","","  // Write header information","  // index = write32bit(index, _buffer, length);","  _buffer[index + 3] = (length >> 24) & 0xff;","  _buffer[index + 2] = (length >> 16) & 0xff;","  _buffer[index + 1] = (length >> 8) & 0xff;","  _buffer[index] = (length) & 0xff;","  index = index + 4;","","  // index = write32bit(index, _buffer, requestId);","  _buffer[index + 3] = (this.requestId >> 24) & 0xff;","  _buffer[index + 2] = (this.requestId >> 16) & 0xff;","  _buffer[index + 1] = (this.requestId >> 8) & 0xff;","  _buffer[index] = (this.requestId) & 0xff;","  index = index + 4;","","  // index = write32bit(index, _buffer, 0);","  _buffer[index + 3] = (0 >> 24) & 0xff;","  _buffer[index + 2] = (0 >> 16) & 0xff;","  _buffer[index + 1] = (0 >> 8) & 0xff;","  _buffer[index] = (0) & 0xff;","  index = index + 4;","","  // index = write32bit(index, _buffer, OP_GETMORE);","  _buffer[index + 3] = (OP_GETMORE >> 24) & 0xff;","  _buffer[index + 2] = (OP_GETMORE >> 16) & 0xff;","  _buffer[index + 1] = (OP_GETMORE >> 8) & 0xff;","  _buffer[index] = (OP_GETMORE) & 0xff;","  index = index + 4;","","  // index = write32bit(index, _buffer, 0);","  _buffer[index + 3] = (0 >> 24) & 0xff;","  _buffer[index + 2] = (0 >> 16) & 0xff;","  _buffer[index + 1] = (0 >> 8) & 0xff;","  _buffer[index] = (0) & 0xff;","  index = index + 4;","","  // Write collection name","  index = index + _buffer.write(this.ns, index, 'utf8') + 1;","  _buffer[index - 1] = 0;","","  // Write batch size","  // index = write32bit(index, _buffer, numberToReturn);","  _buffer[index + 3] = (this.numberToReturn >> 24) & 0xff;","  _buffer[index + 2] = (this.numberToReturn >> 16) & 0xff;","  _buffer[index + 1] = (this.numberToReturn >> 8) & 0xff;","  _buffer[index] = (this.numberToReturn) & 0xff;","  index = index + 4;","","  // Write cursor id","  // index = write32bit(index, _buffer, cursorId.getLowBits());","  _buffer[index + 3] = (this.cursorId.getLowBits() >> 24) & 0xff;","  _buffer[index + 2] = (this.cursorId.getLowBits() >> 16) & 0xff;","  _buffer[index + 1] = (this.cursorId.getLowBits() >> 8) & 0xff;","  _buffer[index] = (this.cursorId.getLowBits()) & 0xff;","  index = index + 4;","","  // index = write32bit(index, _buffer, cursorId.getHighBits());","  _buffer[index + 3] = (this.cursorId.getHighBits() >> 24) & 0xff;","  _buffer[index + 2] = (this.cursorId.getHighBits() >> 16) & 0xff;","  _buffer[index + 1] = (this.cursorId.getHighBits() >> 8) & 0xff;","  _buffer[index] = (this.cursorId.getHighBits()) & 0xff;","  index = index + 4;","","  // Return buffer","  return _buffer;","}","","/**************************************************************"," * KILLCURSOR"," **************************************************************/","var KillCursor = function(bson, cursorIds) {","  this.requestId = _requestId++;","  this.cursorIds = cursorIds;","}","","//","// Uses a single allocated buffer for the process, avoiding multiple memory allocations","KillCursor.prototype.toBin = function() {","  var length = 4 + 4 + (4 * 4) + (this.cursorIds.length * 8);","","  // Create command buffer","  var index = 0;","  var _buffer = new Buffer(length);","","  // Write header information","  // index = write32bit(index, _buffer, length);","  _buffer[index + 3] = (length >> 24) & 0xff;","  _buffer[index + 2] = (length >> 16) & 0xff;","  _buffer[index + 1] = (length >> 8) & 0xff;","  _buffer[index] = (length) & 0xff;","  index = index + 4;","","  // index = write32bit(index, _buffer, requestId);","  _buffer[index + 3] = (this.requestId >> 24) & 0xff;","  _buffer[index + 2] = (this.requestId >> 16) & 0xff;","  _buffer[index + 1] = (this.requestId >> 8) & 0xff;","  _buffer[index] = (this.requestId) & 0xff;","  index = index + 4;","","  // index = write32bit(index, _buffer, 0);","  _buffer[index + 3] = (0 >> 24) & 0xff;","  _buffer[index + 2] = (0 >> 16) & 0xff;","  _buffer[index + 1] = (0 >> 8) & 0xff;","  _buffer[index] = (0) & 0xff;","  index = index + 4;","","  // index = write32bit(index, _buffer, OP_KILL_CURSORS);","  _buffer[index + 3] = (OP_KILL_CURSORS >> 24) & 0xff;","  _buffer[index + 2] = (OP_KILL_CURSORS >> 16) & 0xff;","  _buffer[index + 1] = (OP_KILL_CURSORS >> 8) & 0xff;","  _buffer[index] = (OP_KILL_CURSORS) & 0xff;","  index = index + 4;","","  // index = write32bit(index, _buffer, 0);","  _buffer[index + 3] = (0 >> 24) & 0xff;","  _buffer[index + 2] = (0 >> 16) & 0xff;","  _buffer[index + 1] = (0 >> 8) & 0xff;","  _buffer[index] = (0) & 0xff;","  index = index + 4;","","  // Write batch size","  // index = write32bit(index, _buffer, this.cursorIds.length);","  _buffer[index + 3] = (this.cursorIds.length >> 24) & 0xff;","  _buffer[index + 2] = (this.cursorIds.length >> 16) & 0xff;","  _buffer[index + 1] = (this.cursorIds.length >> 8) & 0xff;","  _buffer[index] = (this.cursorIds.length) & 0xff;","  index = index + 4;","","  // Write all the cursor ids into the array","  for(var i = 0; i < this.cursorIds.length; i++) {","    // Write cursor id","    // index = write32bit(index, _buffer, cursorIds[i].getLowBits());","    _buffer[index + 3] = (this.cursorIds[i].getLowBits() >> 24) & 0xff;","    _buffer[index + 2] = (this.cursorIds[i].getLowBits() >> 16) & 0xff;","    _buffer[index + 1] = (this.cursorIds[i].getLowBits() >> 8) & 0xff;","    _buffer[index] = (this.cursorIds[i].getLowBits()) & 0xff;","    index = index + 4;","","    // index = write32bit(index, _buffer, cursorIds[i].getHighBits());","    _buffer[index + 3] = (this.cursorIds[i].getHighBits() >> 24) & 0xff;","    _buffer[index + 2] = (this.cursorIds[i].getHighBits() >> 16) & 0xff;","    _buffer[index + 1] = (this.cursorIds[i].getHighBits() >> 8) & 0xff;","    _buffer[index] = (this.cursorIds[i].getHighBits()) & 0xff;","    index = index + 4;","  }","","  // Return buffer","  return _buffer;","}","","var Response = function(bson, data, opts) {","  opts = opts || {promoteLongs: true, promoteValues: true, promoteBuffers: false};","  this.parsed = false;","","  //","  // Parse Header","  //","  this.index = 0;","  this.raw = data;","  this.data = data;","  this.bson = bson;","  this.opts = opts;","","  // Read the message length","  this.length = data[this.index] | data[this.index + 1] << 8 | data[this.index + 2] << 16 | data[this.index + 3] << 24;","  this.index = this.index + 4;","","  // Fetch the request id for this reply","  this.requestId = data[this.index] | data[this.index + 1] << 8 | data[this.index + 2] << 16 | data[this.index + 3] << 24;","  this.index = this.index + 4;","","  // Fetch the id of the request that triggered the response","  this.responseTo = data[this.index] | data[this.index + 1] << 8 | data[this.index + 2] << 16 | data[this.index + 3] << 24;","  this.index = this.index + 4;","","  // Skip op-code field","  this.index = this.index + 4;","","  // Unpack flags","  this.responseFlags = data[this.index] | data[this.index + 1] << 8 | data[this.index + 2] << 16 | data[this.index + 3] << 24;","  this.index = this.index + 4;","","  // Unpack the cursor","  var lowBits = data[this.index] | data[this.index + 1] << 8 | data[this.index + 2] << 16 | data[this.index + 3] << 24;","  this.index = this.index + 4;","  var highBits = data[this.index] | data[this.index + 1] << 8 | data[this.index + 2] << 16 | data[this.index + 3] << 24;","  this.index = this.index + 4;","  // Create long object","  this.cursorId = new Long(lowBits, highBits);","","  // Unpack the starting from","  this.startingFrom = data[this.index] | data[this.index + 1] << 8 | data[this.index + 2] << 16 | data[this.index + 3] << 24;","  this.index = this.index + 4;","","  // Unpack the number of objects returned","  this.numberReturned = data[this.index] | data[this.index + 1] << 8 | data[this.index + 2] << 16 | data[this.index + 3] << 24;","  this.index = this.index + 4;","","  // Preallocate document array","  this.documents = new Array(this.numberReturned);","","  // Flag values","  this.cursorNotFound = (this.responseFlags & CURSOR_NOT_FOUND) != 0;","  this.queryFailure = (this.responseFlags & QUERY_FAILURE) != 0;","  this.shardConfigStale = (this.responseFlags & SHARD_CONFIG_STALE) != 0;","  this.awaitCapable = (this.responseFlags & AWAIT_CAPABLE) != 0;","  this.promoteLongs = typeof opts.promoteLongs == 'boolean' ? opts.promoteLongs : true;","  this.promoteValues = typeof opts.promoteValues == 'boolean' ? opts.promoteValues : true;","  this.promoteBuffers = typeof opts.promoteBuffers == 'boolean' ? opts.promoteBuffers : false;","}","","Response.prototype.isParsed = function() {","  return this.parsed;","}","","Response.prototype.parse = function(options) {","  // Don't parse again if not needed","  if(this.parsed) return;","  options = options || {};","","  // Allow the return of raw documents instead of parsing","  var raw = options.raw || false;","  var documentsReturnedIn = options.documentsReturnedIn || null;","  var promoteLongs = typeof options.promoteLongs == 'boolean'","    ? options.promoteLongs","    : this.opts.promoteLongs;","  var promoteValues = typeof options.promoteValues == 'boolean'","    ? options.promoteValues","    : this.opts.promoteValues;","  var promoteBuffers = typeof options.promoteBuffers == 'boolean'","    ? options.promoteBuffers","    : this.opts.promoteBuffers","  var bsonSize, _options;","","  // Set up the options","  _options = {","    promoteLongs: promoteLongs,","    promoteValues: promoteValues,","    promoteBuffers: promoteBuffers","  };","","  //","  // Single document and documentsReturnedIn set","  //","  if(this.numberReturned == 1 && documentsReturnedIn != null && raw) {","    // Calculate the bson size","    bsonSize = this.data[this.index] | this.data[this.index + 1] << 8 | this.data[this.index + 2] << 16 | this.data[this.index + 3] << 24;","    // Slice out the buffer containing the command result document","    var document = this.data.slice(this.index, this.index + bsonSize);","    // Set up field we wish to keep as raw","    var fieldsAsRaw = {}","    fieldsAsRaw[documentsReturnedIn] = true;","    _options.fieldsAsRaw = fieldsAsRaw;","","    // Deserialize but keep the array of documents in non-parsed form","    var doc = this.bson.deserialize(document, _options);","","    // Get the documents","    this.documents = doc.cursor[documentsReturnedIn];","    this.numberReturned = this.documents.length;","    // Ensure we have a Long valie cursor id","    this.cursorId = typeof doc.cursor.id == 'number'","      ? Long.fromNumber(doc.cursor.id)","      : doc.cursor.id;","","    // Adjust the index","    this.index = this.index + bsonSize;","","    // Set as parsed","    this.parsed = true","    return;","  }","","  //","  // Parse Body","  //","  for(var i = 0; i < this.numberReturned; i++) {","    bsonSize = this.data[this.index] | this.data[this.index + 1] << 8 | this.data[this.index + 2] << 16 | this.data[this.index + 3] << 24;","","    // If we have raw results specified slice the return document","    if(raw) {","      this.documents[i] = this.data.slice(this.index, this.index + bsonSize);","    } else {","      this.documents[i] = this.bson.deserialize(this.data.slice(this.index, this.index + bsonSize), _options);","    }","","    // Adjust the index","    this.index = this.index + bsonSize;","  }","","  // Set parsed","  this.parsed = true;","}","","module.exports = {","    Query: Query","  , GetMore: GetMore","  , Response: Response","  , KillCursor: KillCursor","}",""],"l":{"3":1,"4":1,"5":1,"8":1,"11":1,"12":1,"13":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"25":1,"26":1,"27":1,"28":1,"33":1,"34":0,"36":0,"37":0,"40":0,"41":0,"45":0,"46":0,"47":0,"50":0,"53":0,"54":0,"55":0,"56":0,"59":0,"60":0,"61":0,"62":0,"63":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"77":1,"78":0,"83":1,"84":0,"89":1,"90":0,"91":0,"92":0,"95":0,"96":0,"97":0,"100":0,"101":0,"104":0,"105":0,"108":0,"109":0,"112":0,"113":0,"116":0,"117":0,"120":0,"121":0,"125":0,"128":0,"137":0,"140":0,"147":0,"149":0,"151":0,"157":0,"161":0,"164":0,"167":0,"168":0,"169":0,"170":0,"173":0,"174":0,"175":0,"176":0,"177":0,"180":0,"181":0,"182":0,"183":0,"184":0,"187":0,"188":0,"189":0,"190":0,"191":0,"194":0,"195":0,"196":0,"197":0,"198":0,"201":0,"202":0,"205":0,"206":0,"207":0,"208":0,"209":0,"212":0,"213":0,"214":0,"215":0,"216":0,"219":0,"222":1,"223":0,"229":1,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"240":1,"241":0,"243":0,"245":0,"249":0,"250":0,"251":0,"252":0,"253":0,"256":0,"257":0,"258":0,"259":0,"260":0,"263":0,"264":0,"265":0,"266":0,"267":0,"270":0,"271":0,"272":0,"273":0,"274":0,"277":0,"278":0,"279":0,"280":0,"281":0,"284":0,"285":0,"289":0,"290":0,"291":0,"292":0,"293":0,"297":0,"298":0,"299":0,"300":0,"301":0,"304":0,"305":0,"306":0,"307":0,"308":0,"311":0,"317":1,"318":0,"319":0,"324":1,"325":0,"328":0,"329":0,"333":0,"334":0,"335":0,"336":0,"337":0,"340":0,"341":0,"342":0,"343":0,"344":0,"347":0,"348":0,"349":0,"350":0,"351":0,"354":0,"355":0,"356":0,"357":0,"358":0,"361":0,"362":0,"363":0,"364":0,"365":0,"369":0,"370":0,"371":0,"372":0,"373":0,"376":0,"379":0,"380":0,"381":0,"382":0,"383":0,"386":0,"387":0,"388":0,"389":0,"390":0,"394":0,"397":1,"398":0,"399":0,"404":0,"405":0,"406":0,"407":0,"408":0,"411":0,"412":0,"415":0,"416":0,"419":0,"420":0,"423":0,"426":0,"427":0,"430":0,"431":0,"432":0,"433":0,"435":0,"438":0,"439":0,"442":0,"443":0,"446":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"458":1,"459":0,"462":1,"464":0,"465":0,"468":0,"469":0,"470":0,"473":0,"476":0,"479":0,"482":0,"491":0,"493":0,"495":0,"497":0,"498":0,"499":0,"502":0,"505":0,"506":0,"508":0,"513":0,"516":0,"517":0,"523":0,"524":0,"527":0,"528":0,"530":0,"534":0,"538":0,"541":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/connection/logger.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/connection/logger.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":12,"9":6,"10":6,"11":6,"12":6,"13":0,"14":6,"15":1,"16":6,"17":0,"18":6,"19":6,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":2,"51":0,"52":0,"53":6,"54":1,"55":0,"56":0,"57":1,"58":0,"59":1,"60":0,"61":0,"62":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":1},"b":{"1":[6,6],"2":[6,0],"3":[0,6],"4":[1,5],"5":[0,6],"6":[0,0],"7":[6,0],"8":[0,0],"9":[0,0,0,0,0],"10":[0,0],"11":[0,0],"12":[0,0,0,0,0],"13":[0,0],"14":[0,0],"15":[0,0,0,0,0],"16":[0,0],"17":[0,0],"18":[0,0,0,0,0],"19":[0,0],"20":[2,2],"21":[0,0,0],"22":[0,0,0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0,0]},"f":{"1":12,"2":0,"3":0,"4":0,"5":0,"6":2,"7":0,"8":0,"9":6,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"(anonymous_1)","line":24,"loc":{"start":{"line":24,"column":13},"end":{"line":24,"column":42}}},"2":{"name":"(anonymous_2)","line":54,"loc":{"start":{"line":54,"column":25},"end":{"line":54,"column":51}}},"3":{"name":"(anonymous_3)","line":75,"loc":{"start":{"line":75,"column":24},"end":{"line":75,"column":50}}},"4":{"name":"(anonymous_4)","line":96,"loc":{"start":{"line":96,"column":24},"end":{"line":96,"column":50}}},"5":{"name":"(anonymous_5)","line":117,"loc":{"start":{"line":117,"column":25},"end":{"line":117,"column":51}}},"6":{"name":"(anonymous_6)","line":136,"loc":{"start":{"line":136,"column":26},"end":{"line":136,"column":37}}},"7":{"name":"(anonymous_7)","line":145,"loc":{"start":{"line":145,"column":27},"end":{"line":145,"column":38}}},"8":{"name":"(anonymous_8)","line":154,"loc":{"start":{"line":154,"column":26},"end":{"line":154,"column":37}}},"9":{"name":"(anonymous_9)","line":163,"loc":{"start":{"line":163,"column":27},"end":{"line":163,"column":38}}},"10":{"name":"(anonymous_10)","line":172,"loc":{"start":{"line":172,"column":15},"end":{"line":172,"column":26}}},"11":{"name":"(anonymous_11)","line":182,"loc":{"start":{"line":182,"column":23},"end":{"line":182,"column":34}}},"12":{"name":"(anonymous_12)","line":192,"loc":{"start":{"line":192,"column":26},"end":{"line":192,"column":43}}},"13":{"name":"(anonymous_13)","line":204,"loc":{"start":{"line":204,"column":16},"end":{"line":204,"column":39}}},"14":{"name":"(anonymous_14)","line":208,"loc":{"start":{"line":208,"column":19},"end":{"line":208,"column":31}}},"15":{"name":"(anonymous_15)","line":220,"loc":{"start":{"line":220,"column":18},"end":{"line":220,"column":35}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":37}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":22}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":25}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":17}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":22}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":25}},"7":{"start":{"line":24,"column":0},"end":{"line":45,"column":1}},"8":{"start":{"line":25,"column":2},"end":{"line":25,"column":70}},"9":{"start":{"line":25,"column":32},"end":{"line":25,"column":70}},"10":{"start":{"line":26,"column":2},"end":{"line":26,"column":26}},"11":{"start":{"line":29,"column":2},"end":{"line":29,"column":29}},"12":{"start":{"line":32,"column":2},"end":{"line":36,"column":3}},"13":{"start":{"line":33,"column":4},"end":{"line":33,"column":35}},"14":{"start":{"line":34,"column":9},"end":{"line":36,"column":3}},"15":{"start":{"line":35,"column":4},"end":{"line":35,"column":32}},"16":{"start":{"line":39,"column":2},"end":{"line":41,"column":3}},"17":{"start":{"line":40,"column":4},"end":{"line":40,"column":43}},"18":{"start":{"line":44,"column":2},"end":{"line":44,"column":83}},"19":{"start":{"line":44,"column":46},"end":{"line":44,"column":83}},"20":{"start":{"line":54,"column":0},"end":{"line":66,"column":1}},"21":{"start":{"line":55,"column":2},"end":{"line":65,"column":3}},"22":{"start":{"line":58,"column":4},"end":{"line":58,"column":40}},"23":{"start":{"line":59,"column":4},"end":{"line":59,"column":85}},"24":{"start":{"line":60,"column":4},"end":{"line":62,"column":6}},"25":{"start":{"line":63,"column":4},"end":{"line":63,"column":35}},"26":{"start":{"line":63,"column":15},"end":{"line":63,"column":35}},"27":{"start":{"line":64,"column":4},"end":{"line":64,"column":30}},"28":{"start":{"line":75,"column":0},"end":{"line":165,"column":1}},"29":{"start":{"line":76,"column":2},"end":{"line":86,"column":3}},"30":{"start":{"line":79,"column":4},"end":{"line":79,"column":40}},"31":{"start":{"line":80,"column":4},"end":{"line":80,"column":84}},"32":{"start":{"line":81,"column":4},"end":{"line":83,"column":6}},"33":{"start":{"line":84,"column":4},"end":{"line":84,"column":35}},"34":{"start":{"line":84,"column":15},"end":{"line":84,"column":35}},"35":{"start":{"line":85,"column":4},"end":{"line":85,"column":30}},"36":{"start":{"line":97,"column":2},"end":{"line":107,"column":3}},"37":{"start":{"line":100,"column":4},"end":{"line":100,"column":40}},"38":{"start":{"line":101,"column":4},"end":{"line":101,"column":84}},"39":{"start":{"line":102,"column":4},"end":{"line":104,"column":6}},"40":{"start":{"line":105,"column":4},"end":{"line":105,"column":35}},"41":{"start":{"line":105,"column":15},"end":{"line":105,"column":35}},"42":{"start":{"line":106,"column":4},"end":{"line":106,"column":30}},"43":{"start":{"line":118,"column":2},"end":{"line":128,"column":3}},"44":{"start":{"line":121,"column":4},"end":{"line":121,"column":40}},"45":{"start":{"line":122,"column":4},"end":{"line":122,"column":85}},"46":{"start":{"line":123,"column":4},"end":{"line":125,"column":6}},"47":{"start":{"line":126,"column":4},"end":{"line":126,"column":35}},"48":{"start":{"line":126,"column":15},"end":{"line":126,"column":35}},"49":{"start":{"line":127,"column":4},"end":{"line":127,"column":30}},"50":{"start":{"line":137,"column":2},"end":{"line":137,"column":45}},"51":{"start":{"line":146,"column":2},"end":{"line":146,"column":65}},"52":{"start":{"line":155,"column":2},"end":{"line":155,"column":84}},"53":{"start":{"line":164,"column":2},"end":{"line":164,"column":26}},"54":{"start":{"line":172,"column":0},"end":{"line":175,"column":1}},"55":{"start":{"line":173,"column":2},"end":{"line":173,"column":18}},"56":{"start":{"line":174,"column":2},"end":{"line":174,"column":23}},"57":{"start":{"line":182,"column":0},"end":{"line":184,"column":1}},"58":{"start":{"line":183,"column":2},"end":{"line":183,"column":23}},"59":{"start":{"line":192,"column":0},"end":{"line":195,"column":1}},"60":{"start":{"line":193,"column":2},"end":{"line":193,"column":92}},"61":{"start":{"line":193,"column":34},"end":{"line":193,"column":92}},"62":{"start":{"line":194,"column":2},"end":{"line":194,"column":25}},"63":{"start":{"line":204,"column":0},"end":{"line":212,"column":1}},"64":{"start":{"line":205,"column":2},"end":{"line":211,"column":3}},"65":{"start":{"line":206,"column":4},"end":{"line":206,"column":25}},"66":{"start":{"line":208,"column":4},"end":{"line":210,"column":7}},"67":{"start":{"line":209,"column":6},"end":{"line":209,"column":32}},"68":{"start":{"line":220,"column":0},"end":{"line":226,"column":1}},"69":{"start":{"line":221,"column":2},"end":{"line":223,"column":3}},"70":{"start":{"line":222,"column":4},"end":{"line":222,"column":65}},"71":{"start":{"line":225,"column":2},"end":{"line":225,"column":17}},"72":{"start":{"line":228,"column":0},"end":{"line":228,"column":24}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":19}},{"start":{"line":26,"column":23},"end":{"line":26,"column":25}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"4":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":9},"end":{"line":34,"column":9}},{"start":{"line":34,"column":9},"end":{"line":34,"column":9}}]},"5":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"6":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":12},"end":{"line":40,"column":31}},{"start":{"line":40,"column":35},"end":{"line":40,"column":42}}]},"7":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"8":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"9":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":5},"end":{"line":55,"column":19}},{"start":{"line":56,"column":9},"end":{"line":56,"column":48}},{"start":{"line":56,"column":52},"end":{"line":56,"column":83}},{"start":{"line":57,"column":10},"end":{"line":57,"column":50}},{"start":{"line":57,"column":54},"end":{"line":57,"column":82}}]},"10":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]},"11":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":76,"column":2}},{"start":{"line":76,"column":2},"end":{"line":76,"column":2}}]},"12":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":5},"end":{"line":76,"column":18}},{"start":{"line":77,"column":9},"end":{"line":77,"column":48}},{"start":{"line":77,"column":52},"end":{"line":77,"column":83}},{"start":{"line":78,"column":10},"end":{"line":78,"column":50}},{"start":{"line":78,"column":54},"end":{"line":78,"column":82}}]},"13":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]},"14":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":2},"end":{"line":97,"column":2}},{"start":{"line":97,"column":2},"end":{"line":97,"column":2}}]},"15":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":5},"end":{"line":97,"column":18}},{"start":{"line":98,"column":9},"end":{"line":98,"column":48}},{"start":{"line":98,"column":52},"end":{"line":98,"column":83}},{"start":{"line":99,"column":10},"end":{"line":99,"column":50}},{"start":{"line":99,"column":54},"end":{"line":99,"column":82}}]},"16":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":105,"column":4}},{"start":{"line":105,"column":4},"end":{"line":105,"column":4}}]},"17":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":2},"end":{"line":118,"column":2}},{"start":{"line":118,"column":2},"end":{"line":118,"column":2}}]},"18":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":5},"end":{"line":118,"column":19}},{"start":{"line":119,"column":9},"end":{"line":119,"column":48}},{"start":{"line":119,"column":52},"end":{"line":119,"column":83}},{"start":{"line":120,"column":10},"end":{"line":120,"column":50}},{"start":{"line":120,"column":54},"end":{"line":120,"column":82}}]},"19":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":4},"end":{"line":126,"column":4}},{"start":{"line":126,"column":4},"end":{"line":126,"column":4}}]},"20":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":9},"end":{"line":137,"column":24}},{"start":{"line":137,"column":28},"end":{"line":137,"column":44}}]},"21":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":9},"end":{"line":146,"column":25}},{"start":{"line":146,"column":29},"end":{"line":146,"column":44}},{"start":{"line":146,"column":48},"end":{"line":146,"column":64}}]},"22":{"line":155,"type":"binary-expr","locations":[{"start":{"line":155,"column":9},"end":{"line":155,"column":25}},{"start":{"line":155,"column":29},"end":{"line":155,"column":44}},{"start":{"line":155,"column":48},"end":{"line":155,"column":63}},{"start":{"line":155,"column":67},"end":{"line":155,"column":83}}]},"23":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":2},"end":{"line":193,"column":2}},{"start":{"line":193,"column":2},"end":{"line":193,"column":2}}]},"24":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":2},"end":{"line":205,"column":2}},{"start":{"line":205,"column":2},"end":{"line":205,"column":2}}]},"25":{"line":205,"type":"binary-expr","locations":[{"start":{"line":205,"column":5},"end":{"line":205,"column":20}},{"start":{"line":205,"column":24},"end":{"line":205,"column":45}}]},"26":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":2},"end":{"line":221,"column":2}},{"start":{"line":221,"column":2},"end":{"line":221,"column":2}}]},"27":{"line":221,"type":"binary-expr","locations":[{"start":{"line":221,"column":5},"end":{"line":221,"column":21}},{"start":{"line":221,"column":25},"end":{"line":221,"column":42}},{"start":{"line":221,"column":46},"end":{"line":221,"column":63}},{"start":{"line":221,"column":67},"end":{"line":221,"column":83}}]}},"code":["\"use strict\";","","var f = require('util').format","  , MongoError = require('../error');","","// Filters for classes","var classFilters = {};","var filteredClasses = {};","var level = null;","// Save the process id","var pid = process.pid;","// current logger","var currentLogger = null;","","/**"," * Creates a new Logger instance"," * @class"," * @param {string} className The Class name associated with the logging instance"," * @param {object} [options=null] Optional settings."," * @param {Function} [options.logger=null] Custom logger function;"," * @param {string} [options.loggerLevel=error] Override default global log level."," * @return {Logger} a Logger instance."," */","var Logger = function(className, options) {","  if(!(this instanceof Logger)) return new Logger(className, options);","  options = options || {};","","  // Current reference","  this.className = className;","","  // Current logger","  if(options.logger) {","    currentLogger = options.logger;","  } else if(currentLogger == null) {","    currentLogger = console.log;","  }","","  // Set level of logging, default is error","  if(options.loggerLevel) {","    level = options.loggerLevel || 'error';","  }","","  // Add all class names","  if(filteredClasses[this.className] == null) classFilters[this.className] =  true;","}","","/**"," * Log a message at the debug level"," * @method"," * @param {string} message The message to log"," * @param {object} object additional meta data to log"," * @return {null}"," */","Logger.prototype.debug = function(message, object) {","  if(this.isDebug()","    && ((Object.keys(filteredClasses).length > 0 && filteredClasses[this.className])","      || (Object.keys(filteredClasses).length == 0 && classFilters[this.className]))) {","    var dateTime = new Date().getTime();","    var msg = f(\"[%s-%s:%s] %s %s\", 'DEBUG', this.className, pid, dateTime, message);","    var state = {","      type: 'debug', message: message, className: this.className, pid: pid, date: dateTime","    };","    if(object) state.meta = object;","    currentLogger(msg, state);","  }","}","","/**"," * Log a message at the warn level"," * @method"," * @param {string} message The message to log"," * @param {object} object additional meta data to log"," * @return {null}"," */","Logger.prototype.warn = function(message, object) {","  if(this.isWarn()","    && ((Object.keys(filteredClasses).length > 0 && filteredClasses[this.className])","      || (Object.keys(filteredClasses).length == 0 && classFilters[this.className]))) {","    var dateTime = new Date().getTime();","    var msg = f(\"[%s-%s:%s] %s %s\", 'WARN', this.className, pid, dateTime, message);","    var state = {","      type: 'warn', message: message, className: this.className, pid: pid, date: dateTime","    };","    if(object) state.meta = object;","    currentLogger(msg, state);","  }","},","","/**"," * Log a message at the info level"," * @method"," * @param {string} message The message to log"," * @param {object} object additional meta data to log"," * @return {null}"," */","Logger.prototype.info = function(message, object) {","  if(this.isInfo()","    && ((Object.keys(filteredClasses).length > 0 && filteredClasses[this.className])","      || (Object.keys(filteredClasses).length == 0 && classFilters[this.className]))) {","    var dateTime = new Date().getTime();","    var msg = f(\"[%s-%s:%s] %s %s\", 'INFO', this.className, pid, dateTime, message);","    var state = {","      type: 'info', message: message, className: this.className, pid: pid, date: dateTime","    };","    if(object) state.meta = object;","    currentLogger(msg, state);","  }","},","","/**"," * Log a message at the error level"," * @method"," * @param {string} message The message to log"," * @param {object} object additional meta data to log"," * @return {null}"," */","Logger.prototype.error = function(message, object) {","  if(this.isError()","    && ((Object.keys(filteredClasses).length > 0 && filteredClasses[this.className])","      || (Object.keys(filteredClasses).length == 0 && classFilters[this.className]))) {","    var dateTime = new Date().getTime();","    var msg = f(\"[%s-%s:%s] %s %s\", 'ERROR', this.className, pid, dateTime, message);","    var state = {","      type: 'error', message: message, className: this.className, pid: pid, date: dateTime","    };","    if(object) state.meta = object;","    currentLogger(msg, state);","  }","},","","/**"," * Is the logger set at info level"," * @method"," * @return {boolean}"," */","Logger.prototype.isInfo = function() {","  return level == 'info' || level == 'debug';","},","","/**"," * Is the logger set at error level"," * @method"," * @return {boolean}"," */","Logger.prototype.isError = function() {","  return level == 'error' || level == 'info' || level == 'debug';","},","","/**"," * Is the logger set at error level"," * @method"," * @return {boolean}"," */","Logger.prototype.isWarn = function() {","  return level == 'error' || level == 'warn' || level == 'info' || level == 'debug';","},","","/**"," * Is the logger set at debug level"," * @method"," * @return {boolean}"," */","Logger.prototype.isDebug = function() {","  return level == 'debug';","}","","/**"," * Resets the logger to default settings, error and no filtered classes"," * @method"," * @return {null}"," */","Logger.reset = function() {","  level = 'error';","  filteredClasses = {};","}","","/**"," * Get the current logger function"," * @method"," * @return {function}"," */","Logger.currentLogger = function() {","  return currentLogger;","}","","/**"," * Set the current logger function"," * @method"," * @param {function} logger Logger function."," * @return {null}"," */","Logger.setCurrentLogger = function(logger) {","  if(typeof logger != 'function') throw new MongoError(\"current logger must be a function\");","  currentLogger = logger;","}","","/**"," * Set what classes to log."," * @method"," * @param {string} type The type of filter (currently only class)"," * @param {string[]} values The filters to apply"," * @return {null}"," */","Logger.filter = function(type, values) {","  if(type == 'class' && Array.isArray(values)) {","    filteredClasses = {};","","    values.forEach(function(x) {","      filteredClasses[x] = true;","    });","  }","}","","/**"," * Set the current log level"," * @method"," * @param {string} level Set current log level (debug, info, error)"," * @return {null}"," */","Logger.setLevel = function(_level) {","  if(_level != 'info' && _level != 'error' && _level != 'debug' && _level != 'warn') {","    throw new Error(f(\"%s is an illegal logging level\", _level));","  }","","  level = _level;","}","","module.exports = Logger;",""],"l":{"3":1,"7":1,"8":1,"9":1,"11":1,"13":1,"24":1,"25":12,"26":6,"29":6,"32":6,"33":0,"34":6,"35":1,"39":6,"40":0,"44":6,"54":1,"55":0,"58":0,"59":0,"60":0,"63":0,"64":0,"75":1,"76":0,"79":0,"80":0,"81":0,"84":0,"85":0,"97":0,"100":0,"101":0,"102":0,"105":0,"106":0,"118":0,"121":0,"122":0,"123":0,"126":0,"127":0,"137":2,"146":0,"155":0,"164":6,"172":1,"173":0,"174":0,"182":1,"183":0,"192":1,"193":0,"194":0,"204":1,"205":0,"206":0,"208":0,"209":0,"220":1,"221":0,"222":0,"225":0,"228":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/topologies/server.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/topologies/server.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":2,"10":2,"11":2,"12":2,"13":2,"14":2,"15":2,"16":2,"17":2,"18":2,"19":2,"20":2,"21":2,"22":1,"23":1,"24":8,"25":1,"26":12,"27":1,"28":0,"29":0,"30":1,"31":0,"32":1,"33":0,"34":1,"35":12,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":14,"66":2,"67":0,"68":0,"69":2,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":2,"93":2,"94":0,"95":0,"96":0,"97":2,"98":0,"99":0,"100":0,"101":0,"102":2,"103":2,"104":2,"105":0,"106":0,"107":0,"108":1,"109":2,"110":2,"111":2,"112":0,"113":2,"114":0,"115":2,"116":2,"117":2,"118":2,"119":2,"120":2,"121":2,"122":2,"123":2,"124":2,"125":2,"126":2,"127":0,"128":2,"129":1,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":1,"142":0,"143":1,"144":0,"145":1,"146":0,"147":0,"148":0,"149":1,"150":0,"151":0,"152":0,"153":1,"154":0,"155":0,"156":0,"157":0,"158":1,"159":0,"160":0,"161":0,"162":1,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":1,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":1,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":1,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":1,"220":0,"221":0,"222":0,"223":0,"224":1,"225":0,"226":1,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":1,"241":0,"242":0,"243":0,"244":0,"245":0,"246":1,"247":0,"248":1,"249":0,"250":1,"251":0,"252":1,"253":1,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":1},"b":{"1":[2,0],"2":[2,2],"3":[2,1],"4":[0,2],"5":[0,2],"6":[0,2],"7":[0,12],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,2],"18":[0,0],"19":[0,2],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[2,0],"28":[2,2,2,0,0,0,0],"29":[0,2],"30":[2,0],"31":[0,0],"32":[0,2],"33":[0,0],"34":[2,0],"35":[2,2,2],"36":[0,0],"37":[2,2],"38":[0,2],"39":[0,2],"40":[2,0,0],"41":[2,0],"42":[0,2],"43":[0,2],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0]},"f":{"1":2,"2":8,"3":12,"4":0,"5":0,"6":0,"7":12,"8":0,"9":0,"10":0,"11":0,"12":0,"13":14,"14":2,"15":0,"16":2,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0},"fnMap":{"1":{"name":"(anonymous_1)","line":82,"loc":{"start":{"line":82,"column":13},"end":{"line":82,"column":31}}},"2":{"name":"(anonymous_2)","line":147,"loc":{"start":{"line":147,"column":24},"end":{"line":147,"column":35}}},"3":{"name":"(anonymous_3)","line":151,"loc":{"start":{"line":151,"column":24},"end":{"line":151,"column":35}}},"4":{"name":"(anonymous_4)","line":156,"loc":{"start":{"line":156,"column":32},"end":{"line":156,"column":43}}},"5":{"name":"(anonymous_5)","line":161,"loc":{"start":{"line":161,"column":33},"end":{"line":161,"column":44}}},"6":{"name":"(anonymous_6)","line":165,"loc":{"start":{"line":165,"column":17},"end":{"line":165,"column":28}}},"7":{"name":"(anonymous_7)","line":171,"loc":{"start":{"line":171,"column":7},"end":{"line":171,"column":18}}},"8":{"name":"configureWireProtocolHandler","line":174,"loc":{"start":{"line":174,"column":0},"end":{"line":174,"column":54}}},"9":{"name":"disconnectHandler","line":189,"loc":{"start":{"line":189,"column":0},"end":{"line":189,"column":67}}},"10":{"name":"monitoringProcess","line":204,"loc":{"start":{"line":204,"column":0},"end":{"line":204,"column":33}}},"11":{"name":"(anonymous_11)","line":205,"loc":{"start":{"line":205,"column":9},"end":{"line":205,"column":20}}},"12":{"name":"(anonymous_12)","line":222,"loc":{"start":{"line":222,"column":7},"end":{"line":222,"column":29}}},"13":{"name":"(anonymous_13)","line":236,"loc":{"start":{"line":236,"column":19},"end":{"line":236,"column":41}}},"14":{"name":"(anonymous_14)","line":237,"loc":{"start":{"line":237,"column":9},"end":{"line":237,"column":23}}},"15":{"name":"(anonymous_15)","line":257,"loc":{"start":{"line":257,"column":9},"end":{"line":257,"column":31}}},"16":{"name":"(anonymous_16)","line":347,"loc":{"start":{"line":347,"column":27},"end":{"line":347,"column":45}}},"17":{"name":"(anonymous_17)","line":395,"loc":{"start":{"line":395,"column":34},"end":{"line":395,"column":45}}},"18":{"name":"(anonymous_18)","line":415,"loc":{"start":{"line":415,"column":32},"end":{"line":415,"column":43}}},"19":{"name":"(anonymous_19)","line":423,"loc":{"start":{"line":423,"column":25},"end":{"line":423,"column":36}}},"20":{"name":"(anonymous_20)","line":432,"loc":{"start":{"line":432,"column":31},"end":{"line":432,"column":42}}},"21":{"name":"(anonymous_21)","line":442,"loc":{"start":{"line":442,"column":31},"end":{"line":442,"column":42}}},"22":{"name":"basicWriteValidations","line":447,"loc":{"start":{"line":447,"column":0},"end":{"line":447,"column":37}}},"23":{"name":"basicReadValidations","line":452,"loc":{"start":{"line":452,"column":0},"end":{"line":452,"column":45}}},"24":{"name":"(anonymous_24)","line":472,"loc":{"start":{"line":472,"column":27},"end":{"line":472,"column":64}}},"25":{"name":"(anonymous_25)","line":538,"loc":{"start":{"line":538,"column":26},"end":{"line":538,"column":63}}},"26":{"name":"(anonymous_26)","line":565,"loc":{"start":{"line":565,"column":26},"end":{"line":565,"column":63}}},"27":{"name":"(anonymous_27)","line":596,"loc":{"start":{"line":596,"column":26},"end":{"line":596,"column":63}}},"28":{"name":"(anonymous_28)","line":628,"loc":{"start":{"line":628,"column":26},"end":{"line":628,"column":59}}},"29":{"name":"(anonymous_29)","line":643,"loc":{"start":{"line":643,"column":26},"end":{"line":643,"column":53}}},"30":{"name":"(anonymous_30)","line":655,"loc":{"start":{"line":655,"column":24},"end":{"line":655,"column":48}}},"31":{"name":"(anonymous_31)","line":693,"loc":{"start":{"line":693,"column":26},"end":{"line":693,"column":43}}},"32":{"name":"(anonymous_32)","line":704,"loc":{"start":{"line":704,"column":31},"end":{"line":704,"column":42}}},"33":{"name":"(anonymous_33)","line":713,"loc":{"start":{"line":713,"column":29},"end":{"line":713,"column":40}}},"34":{"name":"(anonymous_34)","line":722,"loc":{"start":{"line":722,"column":33},"end":{"line":722,"column":44}}},"35":{"name":"(anonymous_35)","line":735,"loc":{"start":{"line":735,"column":27},"end":{"line":735,"column":45}}},"36":{"name":"(anonymous_36)","line":761,"loc":{"start":{"line":761,"column":20},"end":{"line":761,"column":36}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":20,"column":58}},"2":{"start":{"line":23,"column":0},"end":{"line":26,"column":36}},"3":{"start":{"line":29,"column":0},"end":{"line":29,"column":11}},"4":{"start":{"line":30,"column":0},"end":{"line":30,"column":29}},"5":{"start":{"line":31,"column":0},"end":{"line":31,"column":17}},"6":{"start":{"line":32,"column":0},"end":{"line":32,"column":26}},"7":{"start":{"line":82,"column":0},"end":{"line":142,"column":1}},"8":{"start":{"line":83,"column":2},"end":{"line":83,"column":26}},"9":{"start":{"line":86,"column":2},"end":{"line":86,"column":26}},"10":{"start":{"line":89,"column":2},"end":{"line":89,"column":17}},"11":{"start":{"line":92,"column":2},"end":{"line":117,"column":3}},"12":{"start":{"line":120,"column":2},"end":{"line":120,"column":23}},"13":{"start":{"line":122,"column":2},"end":{"line":122,"column":27}},"14":{"start":{"line":124,"column":2},"end":{"line":124,"column":34}},"15":{"start":{"line":126,"column":2},"end":{"line":126,"column":28}},"16":{"start":{"line":129,"column":2},"end":{"line":129,"column":64}},"17":{"start":{"line":131,"column":2},"end":{"line":131,"column":24}},"18":{"start":{"line":133,"column":2},"end":{"line":133,"column":46}},"19":{"start":{"line":137,"column":2},"end":{"line":137,"column":26}},"20":{"start":{"line":139,"column":2},"end":{"line":139,"column":25}},"21":{"start":{"line":141,"column":2},"end":{"line":141,"column":21}},"22":{"start":{"line":144,"column":0},"end":{"line":144,"column":31}},"23":{"start":{"line":146,"column":0},"end":{"line":148,"column":3}},"24":{"start":{"line":147,"column":37},"end":{"line":147,"column":55}},"25":{"start":{"line":150,"column":0},"end":{"line":154,"column":3}},"26":{"start":{"line":152,"column":4},"end":{"line":152,"column":38}},"27":{"start":{"line":156,"column":0},"end":{"line":159,"column":1}},"28":{"start":{"line":157,"column":2},"end":{"line":157,"column":26}},"29":{"start":{"line":158,"column":2},"end":{"line":158,"column":15}},"30":{"start":{"line":161,"column":0},"end":{"line":163,"column":1}},"31":{"start":{"line":162,"column":2},"end":{"line":162,"column":27}},"32":{"start":{"line":165,"column":0},"end":{"line":167,"column":1}},"33":{"start":{"line":166,"column":2},"end":{"line":166,"column":17}},"34":{"start":{"line":169,"column":0},"end":{"line":172,"column":3}},"35":{"start":{"line":171,"column":20},"end":{"line":171,"column":75}},"36":{"start":{"line":174,"column":0},"end":{"line":187,"column":1}},"37":{"start":{"line":176,"column":2},"end":{"line":178,"column":3}},"38":{"start":{"line":177,"column":4},"end":{"line":177,"column":76}},"39":{"start":{"line":181,"column":2},"end":{"line":183,"column":3}},"40":{"start":{"line":182,"column":4},"end":{"line":182,"column":43}},"41":{"start":{"line":186,"column":2},"end":{"line":186,"column":44}},"42":{"start":{"line":189,"column":0},"end":{"line":202,"column":1}},"43":{"start":{"line":192,"column":2},"end":{"line":195,"column":3}},"44":{"start":{"line":193,"column":4},"end":{"line":193,"column":67}},"45":{"start":{"line":194,"column":4},"end":{"line":194,"column":16}},"46":{"start":{"line":198,"column":2},"end":{"line":201,"column":3}},"47":{"start":{"line":199,"column":4},"end":{"line":199,"column":86}},"48":{"start":{"line":200,"column":4},"end":{"line":200,"column":16}},"49":{"start":{"line":204,"column":0},"end":{"line":234,"column":1}},"50":{"start":{"line":205,"column":2},"end":{"line":233,"column":3}},"51":{"start":{"line":207,"column":4},"end":{"line":207,"column":41}},"52":{"start":{"line":207,"column":34},"end":{"line":207,"column":41}},"53":{"start":{"line":209,"column":4},"end":{"line":209,"column":34}},"54":{"start":{"line":212,"column":4},"end":{"line":212,"column":96}},"55":{"start":{"line":214,"column":4},"end":{"line":214,"column":84}},"56":{"start":{"line":216,"column":4},"end":{"line":216,"column":37}},"57":{"start":{"line":219,"column":4},"end":{"line":232,"column":7}},"58":{"start":{"line":224,"column":6},"end":{"line":224,"column":57}},"59":{"start":{"line":225,"column":6},"end":{"line":225,"column":43}},"60":{"start":{"line":225,"column":36},"end":{"line":225,"column":43}},"61":{"start":{"line":227,"column":6},"end":{"line":229,"column":7}},"62":{"start":{"line":228,"column":8},"end":{"line":228,"column":38}},"63":{"start":{"line":231,"column":6},"end":{"line":231,"column":96}},"64":{"start":{"line":236,"column":0},"end":{"line":340,"column":1}},"65":{"start":{"line":237,"column":2},"end":{"line":339,"column":3}},"66":{"start":{"line":239,"column":4},"end":{"line":243,"column":5}},"67":{"start":{"line":240,"column":6},"end":{"line":240,"column":71}},"68":{"start":{"line":241,"column":6},"end":{"line":242,"column":37}},"69":{"start":{"line":246,"column":4},"end":{"line":338,"column":5}},"70":{"start":{"line":249,"column":6},"end":{"line":249,"column":98}},"71":{"start":{"line":251,"column":6},"end":{"line":251,"column":111}},"72":{"start":{"line":253,"column":6},"end":{"line":253,"column":39}},"73":{"start":{"line":255,"column":6},"end":{"line":300,"column":9}},"74":{"start":{"line":259,"column":8},"end":{"line":259,"column":59}},"75":{"start":{"line":260,"column":8},"end":{"line":264,"column":9}},"76":{"start":{"line":261,"column":10},"end":{"line":261,"column":25}},"77":{"start":{"line":262,"column":10},"end":{"line":262,"column":73}},"78":{"start":{"line":262,"column":49},"end":{"line":262,"column":73}},"79":{"start":{"line":263,"column":10},"end":{"line":263,"column":17}},"80":{"start":{"line":267,"column":8},"end":{"line":267,"column":35}},"81":{"start":{"line":269,"column":8},"end":{"line":269,"column":38}},"82":{"start":{"line":273,"column":8},"end":{"line":275,"column":9}},"83":{"start":{"line":274,"column":10},"end":{"line":274,"column":32}},"84":{"start":{"line":277,"column":8},"end":{"line":277,"column":85}},"85":{"start":{"line":279,"column":8},"end":{"line":281,"column":9}},"86":{"start":{"line":280,"column":10},"end":{"line":280,"column":100}},"87":{"start":{"line":284,"column":8},"end":{"line":286,"column":11}},"88":{"start":{"line":289,"column":8},"end":{"line":291,"column":11}},"89":{"start":{"line":294,"column":8},"end":{"line":296,"column":9}},"90":{"start":{"line":295,"column":10},"end":{"line":295,"column":116}},"91":{"start":{"line":299,"column":8},"end":{"line":299,"column":35}},"92":{"start":{"line":301,"column":11},"end":{"line":338,"column":5}},"93":{"start":{"line":305,"column":6},"end":{"line":312,"column":7}},"94":{"start":{"line":307,"column":8},"end":{"line":309,"column":9}},"95":{"start":{"line":308,"column":10},"end":{"line":308,"column":64}},"96":{"start":{"line":311,"column":8},"end":{"line":311,"column":32}},"97":{"start":{"line":315,"column":6},"end":{"line":323,"column":7}},"98":{"start":{"line":316,"column":8},"end":{"line":316,"column":42}},"99":{"start":{"line":318,"column":8},"end":{"line":320,"column":9}},"100":{"start":{"line":319,"column":10},"end":{"line":319,"column":34}},"101":{"start":{"line":322,"column":8},"end":{"line":322,"column":15}},"102":{"start":{"line":326,"column":6},"end":{"line":329,"column":7}},"103":{"start":{"line":327,"column":8},"end":{"line":327,"column":35}},"104":{"start":{"line":328,"column":8},"end":{"line":328,"column":127}},"105":{"start":{"line":332,"column":6},"end":{"line":334,"column":7}},"106":{"start":{"line":333,"column":8},"end":{"line":333,"column":38}},"107":{"start":{"line":337,"column":6},"end":{"line":337,"column":28}},"108":{"start":{"line":347,"column":0},"end":{"line":388,"column":1}},"109":{"start":{"line":348,"column":2},"end":{"line":348,"column":18}},"110":{"start":{"line":349,"column":2},"end":{"line":349,"column":26}},"111":{"start":{"line":352,"column":2},"end":{"line":352,"column":47}},"112":{"start":{"line":352,"column":23},"end":{"line":352,"column":47}},"113":{"start":{"line":355,"column":2},"end":{"line":357,"column":3}},"114":{"start":{"line":356,"column":4},"end":{"line":356,"column":84}},"115":{"start":{"line":360,"column":2},"end":{"line":360,"column":79}},"116":{"start":{"line":363,"column":2},"end":{"line":363,"column":55}},"117":{"start":{"line":364,"column":2},"end":{"line":364,"column":55}},"118":{"start":{"line":365,"column":2},"end":{"line":365,"column":59}},"119":{"start":{"line":366,"column":2},"end":{"line":366,"column":65}},"120":{"start":{"line":367,"column":2},"end":{"line":367,"column":59}},"121":{"start":{"line":368,"column":2},"end":{"line":368,"column":63}},"122":{"start":{"line":369,"column":2},"end":{"line":369,"column":75}},"123":{"start":{"line":372,"column":2},"end":{"line":374,"column":3}},"124":{"start":{"line":373,"column":4},"end":{"line":373,"column":58}},"125":{"start":{"line":377,"column":2},"end":{"line":380,"column":5}},"126":{"start":{"line":383,"column":2},"end":{"line":387,"column":3}},"127":{"start":{"line":384,"column":4},"end":{"line":384,"column":57}},"128":{"start":{"line":386,"column":4},"end":{"line":386,"column":26}},"129":{"start":{"line":395,"column":0},"end":{"line":408,"column":1}},"130":{"start":{"line":396,"column":2},"end":{"line":396,"column":37}},"131":{"start":{"line":397,"column":2},"end":{"line":400,"column":4}},"132":{"start":{"line":403,"column":2},"end":{"line":403,"column":56}},"133":{"start":{"line":403,"column":21},"end":{"line":403,"column":56}},"134":{"start":{"line":404,"column":2},"end":{"line":404,"column":65}},"135":{"start":{"line":404,"column":24},"end":{"line":404,"column":65}},"136":{"start":{"line":405,"column":2},"end":{"line":405,"column":65}},"137":{"start":{"line":405,"column":24},"end":{"line":405,"column":65}},"138":{"start":{"line":406,"column":2},"end":{"line":406,"column":62}},"139":{"start":{"line":406,"column":23},"end":{"line":406,"column":62}},"140":{"start":{"line":407,"column":2},"end":{"line":407,"column":21}},"141":{"start":{"line":415,"column":0},"end":{"line":417,"column":1}},"142":{"start":{"line":416,"column":2},"end":{"line":416,"column":23}},"143":{"start":{"line":423,"column":0},"end":{"line":425,"column":1}},"144":{"start":{"line":424,"column":2},"end":{"line":424,"column":22}},"145":{"start":{"line":432,"column":0},"end":{"line":435,"column":1}},"146":{"start":{"line":433,"column":2},"end":{"line":433,"column":32}},"147":{"start":{"line":433,"column":19},"end":{"line":433,"column":32}},"148":{"start":{"line":434,"column":2},"end":{"line":434,"column":35}},"149":{"start":{"line":442,"column":0},"end":{"line":445,"column":1}},"150":{"start":{"line":443,"column":2},"end":{"line":443,"column":32}},"151":{"start":{"line":443,"column":19},"end":{"line":443,"column":32}},"152":{"start":{"line":444,"column":2},"end":{"line":444,"column":35}},"153":{"start":{"line":447,"column":0},"end":{"line":450,"column":1}},"154":{"start":{"line":448,"column":2},"end":{"line":448,"column":80}},"155":{"start":{"line":448,"column":19},"end":{"line":448,"column":80}},"156":{"start":{"line":449,"column":2},"end":{"line":449,"column":95}},"157":{"start":{"line":449,"column":32},"end":{"line":449,"column":95}},"158":{"start":{"line":452,"column":0},"end":{"line":458,"column":1}},"159":{"start":{"line":453,"column":2},"end":{"line":453,"column":39}},"160":{"start":{"line":455,"column":2},"end":{"line":457,"column":3}},"161":{"start":{"line":456,"column":4},"end":{"line":456,"column":76}},"162":{"start":{"line":472,"column":0},"end":{"line":525,"column":1}},"163":{"start":{"line":473,"column":2},"end":{"line":473,"column":18}},"164":{"start":{"line":474,"column":2},"end":{"line":474,"column":93}},"165":{"start":{"line":474,"column":35},"end":{"line":474,"column":93}},"166":{"start":{"line":475,"column":2},"end":{"line":475,"column":51}},"167":{"start":{"line":476,"column":2},"end":{"line":476,"column":37}},"168":{"start":{"line":476,"column":13},"end":{"line":476,"column":37}},"169":{"start":{"line":479,"column":2},"end":{"line":479,"column":64}},"170":{"start":{"line":482,"column":2},"end":{"line":484,"column":18}},"171":{"start":{"line":482,"column":30},"end":{"line":484,"column":18}},"172":{"start":{"line":487,"column":2},"end":{"line":487,"column":76}},"173":{"start":{"line":487,"column":69},"end":{"line":487,"column":76}},"174":{"start":{"line":490,"column":2},"end":{"line":492,"column":3}},"175":{"start":{"line":491,"column":4},"end":{"line":491,"column":90}},"176":{"start":{"line":495,"column":2},"end":{"line":501,"column":4}},"177":{"start":{"line":504,"column":2},"end":{"line":504,"column":40}},"178":{"start":{"line":506,"column":2},"end":{"line":506,"column":92}},"179":{"start":{"line":508,"column":2},"end":{"line":508,"column":84}},"180":{"start":{"line":511,"column":2},"end":{"line":521,"column":4}},"181":{"start":{"line":524,"column":2},"end":{"line":524,"column":51}},"182":{"start":{"line":538,"column":0},"end":{"line":552,"column":1}},"183":{"start":{"line":539,"column":2},"end":{"line":539,"column":18}},"184":{"start":{"line":540,"column":2},"end":{"line":540,"column":93}},"185":{"start":{"line":540,"column":35},"end":{"line":540,"column":93}},"186":{"start":{"line":541,"column":2},"end":{"line":541,"column":52}},"187":{"start":{"line":542,"column":2},"end":{"line":542,"column":37}},"188":{"start":{"line":542,"column":13},"end":{"line":542,"column":37}},"189":{"start":{"line":545,"column":2},"end":{"line":545,"column":75}},"190":{"start":{"line":545,"column":68},"end":{"line":545,"column":75}},"191":{"start":{"line":548,"column":2},"end":{"line":548,"column":41}},"192":{"start":{"line":551,"column":2},"end":{"line":551,"column":110}},"193":{"start":{"line":565,"column":0},"end":{"line":583,"column":1}},"194":{"start":{"line":566,"column":2},"end":{"line":566,"column":18}},"195":{"start":{"line":567,"column":2},"end":{"line":567,"column":93}},"196":{"start":{"line":567,"column":35},"end":{"line":567,"column":93}},"197":{"start":{"line":568,"column":2},"end":{"line":568,"column":52}},"198":{"start":{"line":569,"column":2},"end":{"line":569,"column":37}},"199":{"start":{"line":569,"column":13},"end":{"line":569,"column":37}},"200":{"start":{"line":572,"column":2},"end":{"line":572,"column":75}},"201":{"start":{"line":572,"column":68},"end":{"line":572,"column":75}},"202":{"start":{"line":575,"column":2},"end":{"line":577,"column":3}},"203":{"start":{"line":576,"column":4},"end":{"line":576,"column":90}},"204":{"start":{"line":580,"column":2},"end":{"line":580,"column":41}},"205":{"start":{"line":582,"column":2},"end":{"line":582,"column":110}},"206":{"start":{"line":596,"column":0},"end":{"line":614,"column":1}},"207":{"start":{"line":597,"column":2},"end":{"line":597,"column":18}},"208":{"start":{"line":598,"column":2},"end":{"line":598,"column":93}},"209":{"start":{"line":598,"column":35},"end":{"line":598,"column":93}},"210":{"start":{"line":599,"column":2},"end":{"line":599,"column":52}},"211":{"start":{"line":600,"column":2},"end":{"line":600,"column":37}},"212":{"start":{"line":600,"column":13},"end":{"line":600,"column":37}},"213":{"start":{"line":603,"column":2},"end":{"line":603,"column":75}},"214":{"start":{"line":603,"column":68},"end":{"line":603,"column":75}},"215":{"start":{"line":606,"column":2},"end":{"line":608,"column":3}},"216":{"start":{"line":607,"column":4},"end":{"line":607,"column":90}},"217":{"start":{"line":611,"column":2},"end":{"line":611,"column":41}},"218":{"start":{"line":613,"column":2},"end":{"line":613,"column":110}},"219":{"start":{"line":628,"column":0},"end":{"line":635,"column":1}},"220":{"start":{"line":629,"column":2},"end":{"line":629,"column":17}},"221":{"start":{"line":630,"column":2},"end":{"line":630,"column":38}},"222":{"start":{"line":632,"column":2},"end":{"line":632,"column":60}},"223":{"start":{"line":634,"column":2},"end":{"line":634,"column":74}},"224":{"start":{"line":643,"column":0},"end":{"line":645,"column":1}},"225":{"start":{"line":644,"column":2},"end":{"line":644,"column":39}},"226":{"start":{"line":655,"column":0},"end":{"line":685,"column":1}},"227":{"start":{"line":656,"column":2},"end":{"line":656,"column":18}},"228":{"start":{"line":660,"column":2},"end":{"line":664,"column":3}},"229":{"start":{"line":661,"column":4},"end":{"line":661,"column":30}},"230":{"start":{"line":662,"column":9},"end":{"line":664,"column":3}},"231":{"start":{"line":663,"column":4},"end":{"line":663,"column":26}},"232":{"start":{"line":667,"column":2},"end":{"line":667,"column":54}},"233":{"start":{"line":669,"column":2},"end":{"line":669,"column":22}},"234":{"start":{"line":671,"column":2},"end":{"line":671,"column":39}},"235":{"start":{"line":674,"column":2},"end":{"line":676,"column":3}},"236":{"start":{"line":675,"column":4},"end":{"line":675,"column":11}},"237":{"start":{"line":679,"column":2},"end":{"line":681,"column":3}},"238":{"start":{"line":680,"column":4},"end":{"line":680,"column":32}},"239":{"start":{"line":684,"column":2},"end":{"line":684,"column":44}},"240":{"start":{"line":693,"column":0},"end":{"line":697,"column":1}},"241":{"start":{"line":694,"column":2},"end":{"line":694,"column":87}},"242":{"start":{"line":694,"column":32},"end":{"line":694,"column":87}},"243":{"start":{"line":695,"column":2},"end":{"line":695,"column":78}},"244":{"start":{"line":695,"column":18},"end":{"line":695,"column":78}},"245":{"start":{"line":696,"column":2},"end":{"line":696,"column":15}},"246":{"start":{"line":704,"column":0},"end":{"line":706,"column":1}},"247":{"start":{"line":705,"column":2},"end":{"line":705,"column":38}},"248":{"start":{"line":713,"column":0},"end":{"line":715,"column":1}},"249":{"start":{"line":714,"column":2},"end":{"line":714,"column":14}},"250":{"start":{"line":722,"column":0},"end":{"line":724,"column":1}},"251":{"start":{"line":723,"column":2},"end":{"line":723,"column":27}},"252":{"start":{"line":726,"column":0},"end":{"line":726,"column":71}},"253":{"start":{"line":735,"column":0},"end":{"line":781,"column":1}},"254":{"start":{"line":736,"column":2},"end":{"line":736,"column":26}},"255":{"start":{"line":737,"column":2},"end":{"line":737,"column":18}},"256":{"start":{"line":740,"column":2},"end":{"line":740,"column":47}},"257":{"start":{"line":740,"column":23},"end":{"line":740,"column":47}},"258":{"start":{"line":743,"column":2},"end":{"line":745,"column":3}},"259":{"start":{"line":744,"column":4},"end":{"line":744,"column":43}},"260":{"start":{"line":748,"column":2},"end":{"line":748,"column":26}},"261":{"start":{"line":748,"column":19},"end":{"line":748,"column":26}},"262":{"start":{"line":751,"column":2},"end":{"line":753,"column":3}},"263":{"start":{"line":752,"column":4},"end":{"line":752,"column":29}},"264":{"start":{"line":756,"column":2},"end":{"line":758,"column":3}},"265":{"start":{"line":757,"column":4},"end":{"line":757,"column":31}},"266":{"start":{"line":761,"column":2},"end":{"line":763,"column":5}},"267":{"start":{"line":762,"column":4},"end":{"line":762,"column":42}},"268":{"start":{"line":766,"column":2},"end":{"line":768,"column":5}},"269":{"start":{"line":766,"column":48},"end":{"line":768,"column":5}},"270":{"start":{"line":771,"column":2},"end":{"line":773,"column":3}},"271":{"start":{"line":772,"column":4},"end":{"line":772,"column":57}},"272":{"start":{"line":775,"column":2},"end":{"line":777,"column":3}},"273":{"start":{"line":776,"column":4},"end":{"line":776,"column":69}},"274":{"start":{"line":780,"column":2},"end":{"line":780,"column":37}},"275":{"start":{"line":867,"column":0},"end":{"line":867,"column":24}}},"branchMap":{"1":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":12},"end":{"line":83,"column":19}},{"start":{"line":83,"column":23},"end":{"line":83,"column":25}}]},"2":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":12},"end":{"line":98,"column":33}},{"start":{"line":98,"column":37},"end":{"line":98,"column":48}}]},"3":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":10},"end":{"line":100,"column":22}},{"start":{"line":100,"column":26},"end":{"line":102,"column":67}}]},"4":{"line":108,"type":"cond-expr","locations":[{"start":{"line":108,"column":57},"end":{"line":108,"column":75}},{"start":{"line":108,"column":78},"end":{"line":108,"column":82}}]},"5":{"line":110,"type":"cond-expr","locations":[{"start":{"line":110,"column":57},"end":{"line":110,"column":75}},{"start":{"line":110,"column":78},"end":{"line":110,"column":83}}]},"6":{"line":112,"type":"cond-expr","locations":[{"start":{"line":113,"column":8},"end":{"line":113,"column":34}},{"start":{"line":114,"column":8},"end":{"line":114,"column":12}}]},"7":{"line":152,"type":"cond-expr","locations":[{"start":{"line":152,"column":25},"end":{"line":152,"column":30}},{"start":{"line":152,"column":33},"end":{"line":152,"column":37}}]},"8":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":2},"end":{"line":176,"column":2}},{"start":{"line":176,"column":2},"end":{"line":176,"column":2}}]},"9":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":2},"end":{"line":181,"column":2}},{"start":{"line":181,"column":2},"end":{"line":181,"column":2}}]},"10":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":2},"end":{"line":192,"column":2}},{"start":{"line":192,"column":2},"end":{"line":192,"column":2}}]},"11":{"line":192,"type":"binary-expr","locations":[{"start":{"line":192,"column":5},"end":{"line":192,"column":31}},{"start":{"line":192,"column":35},"end":{"line":192,"column":67}},{"start":{"line":192,"column":71},"end":{"line":192,"column":90}}]},"12":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":2},"end":{"line":198,"column":2}},{"start":{"line":198,"column":2},"end":{"line":198,"column":2}}]},"13":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":4},"end":{"line":207,"column":4}},{"start":{"line":207,"column":4},"end":{"line":207,"column":4}}]},"14":{"line":220,"type":"cond-expr","locations":[{"start":{"line":220,"column":78},"end":{"line":220,"column":82}},{"start":{"line":220,"column":85},"end":{"line":220,"column":117}}]},"15":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":6},"end":{"line":225,"column":6}},{"start":{"line":225,"column":6},"end":{"line":225,"column":6}}]},"16":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":6},"end":{"line":227,"column":6}},{"start":{"line":227,"column":6},"end":{"line":227,"column":6}}]},"17":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":4},"end":{"line":239,"column":4}},{"start":{"line":239,"column":4},"end":{"line":239,"column":4}}]},"18":{"line":240,"type":"cond-expr","locations":[{"start":{"line":240,"column":47},"end":{"line":240,"column":66}},{"start":{"line":240,"column":69},"end":{"line":240,"column":71}}]},"19":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":4},"end":{"line":246,"column":4}},{"start":{"line":246,"column":4},"end":{"line":246,"column":4}}]},"20":{"line":256,"type":"binary-expr","locations":[{"start":{"line":256,"column":23},"end":{"line":256,"column":55}},{"start":{"line":256,"column":59},"end":{"line":256,"column":63}}]},"21":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":8},"end":{"line":260,"column":8}},{"start":{"line":260,"column":8},"end":{"line":260,"column":8}}]},"22":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":10},"end":{"line":262,"column":10}},{"start":{"line":262,"column":10},"end":{"line":262,"column":10}}]},"23":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":8},"end":{"line":273,"column":8}},{"start":{"line":273,"column":8},"end":{"line":273,"column":8}}]},"24":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":8},"end":{"line":279,"column":8}},{"start":{"line":279,"column":8},"end":{"line":279,"column":8}}]},"25":{"line":285,"type":"cond-expr","locations":[{"start":{"line":285,"column":96},"end":{"line":285,"column":108}},{"start":{"line":285,"column":111},"end":{"line":285,"column":137}}]},"26":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":8},"end":{"line":294,"column":8}},{"start":{"line":294,"column":8},"end":{"line":294,"column":8}}]},"27":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":11},"end":{"line":301,"column":11}},{"start":{"line":301,"column":11},"end":{"line":301,"column":11}}]},"28":{"line":301,"type":"binary-expr","locations":[{"start":{"line":301,"column":14},"end":{"line":301,"column":30}},{"start":{"line":301,"column":34},"end":{"line":301,"column":55}},{"start":{"line":302,"column":9},"end":{"line":302,"column":25}},{"start":{"line":302,"column":29},"end":{"line":302,"column":47}},{"start":{"line":302,"column":51},"end":{"line":302,"column":71}},{"start":{"line":303,"column":9},"end":{"line":303,"column":36}},{"start":{"line":303,"column":40},"end":{"line":303,"column":57}}]},"29":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":6},"end":{"line":305,"column":6}},{"start":{"line":305,"column":6},"end":{"line":305,"column":6}}]},"30":{"line":305,"type":"binary-expr","locations":[{"start":{"line":305,"column":9},"end":{"line":305,"column":25}},{"start":{"line":305,"column":29},"end":{"line":305,"column":112}}]},"31":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":8},"end":{"line":307,"column":8}},{"start":{"line":307,"column":8},"end":{"line":307,"column":8}}]},"32":{"line":315,"type":"if","locations":[{"start":{"line":315,"column":6},"end":{"line":315,"column":6}},{"start":{"line":315,"column":6},"end":{"line":315,"column":6}}]},"33":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":8},"end":{"line":318,"column":8}},{"start":{"line":318,"column":8},"end":{"line":318,"column":8}}]},"34":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":6},"end":{"line":326,"column":6}},{"start":{"line":326,"column":6},"end":{"line":326,"column":6}}]},"35":{"line":326,"type":"binary-expr","locations":[{"start":{"line":326,"column":9},"end":{"line":326,"column":44}},{"start":{"line":326,"column":48},"end":{"line":326,"column":66}},{"start":{"line":326,"column":70},"end":{"line":326,"column":134}}]},"36":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":6},"end":{"line":332,"column":6}},{"start":{"line":332,"column":6},"end":{"line":332,"column":6}}]},"37":{"line":349,"type":"binary-expr","locations":[{"start":{"line":349,"column":12},"end":{"line":349,"column":19}},{"start":{"line":349,"column":23},"end":{"line":349,"column":25}}]},"38":{"line":352,"type":"if","locations":[{"start":{"line":352,"column":2},"end":{"line":352,"column":2}},{"start":{"line":352,"column":2},"end":{"line":352,"column":2}}]},"39":{"line":355,"type":"if","locations":[{"start":{"line":355,"column":2},"end":{"line":355,"column":2}},{"start":{"line":355,"column":2},"end":{"line":355,"column":2}}]},"40":{"line":355,"type":"binary-expr","locations":[{"start":{"line":355,"column":5},"end":{"line":355,"column":16}},{"start":{"line":355,"column":20},"end":{"line":355,"column":49}},{"start":{"line":355,"column":53},"end":{"line":355,"column":79}}]},"41":{"line":372,"type":"if","locations":[{"start":{"line":372,"column":2},"end":{"line":372,"column":2}},{"start":{"line":372,"column":2},"end":{"line":372,"column":2}}]},"42":{"line":378,"type":"cond-expr","locations":[{"start":{"line":378,"column":42},"end":{"line":378,"column":59}},{"start":{"line":378,"column":62},"end":{"line":378,"column":69}}]},"43":{"line":383,"type":"if","locations":[{"start":{"line":383,"column":2},"end":{"line":383,"column":2}},{"start":{"line":383,"column":2},"end":{"line":383,"column":2}}]},"44":{"line":396,"type":"binary-expr","locations":[{"start":{"line":396,"column":17},"end":{"line":396,"column":30}},{"start":{"line":396,"column":34},"end":{"line":396,"column":36}}]},"45":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":2},"end":{"line":403,"column":2}},{"start":{"line":403,"column":2},"end":{"line":403,"column":2}}]},"46":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":2},"end":{"line":404,"column":2}},{"start":{"line":404,"column":2},"end":{"line":404,"column":2}}]},"47":{"line":405,"type":"if","locations":[{"start":{"line":405,"column":2},"end":{"line":405,"column":2}},{"start":{"line":405,"column":2},"end":{"line":405,"column":2}}]},"48":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":2},"end":{"line":406,"column":2}},{"start":{"line":406,"column":2},"end":{"line":406,"column":2}}]},"49":{"line":433,"type":"if","locations":[{"start":{"line":433,"column":2},"end":{"line":433,"column":2}},{"start":{"line":433,"column":2},"end":{"line":433,"column":2}}]},"50":{"line":443,"type":"if","locations":[{"start":{"line":443,"column":2},"end":{"line":443,"column":2}},{"start":{"line":443,"column":2},"end":{"line":443,"column":2}}]},"51":{"line":448,"type":"if","locations":[{"start":{"line":448,"column":2},"end":{"line":448,"column":2}},{"start":{"line":448,"column":2},"end":{"line":448,"column":2}}]},"52":{"line":449,"type":"if","locations":[{"start":{"line":449,"column":2},"end":{"line":449,"column":2}},{"start":{"line":449,"column":2},"end":{"line":449,"column":2}}]},"53":{"line":455,"type":"if","locations":[{"start":{"line":455,"column":2},"end":{"line":455,"column":2}},{"start":{"line":455,"column":2},"end":{"line":455,"column":2}}]},"54":{"line":455,"type":"binary-expr","locations":[{"start":{"line":455,"column":5},"end":{"line":455,"column":27}},{"start":{"line":455,"column":31},"end":{"line":455,"column":82}}]},"55":{"line":474,"type":"if","locations":[{"start":{"line":474,"column":2},"end":{"line":474,"column":2}},{"start":{"line":474,"column":2},"end":{"line":474,"column":2}}]},"56":{"line":474,"type":"binary-expr","locations":[{"start":{"line":474,"column":79},"end":{"line":474,"column":86}},{"start":{"line":474,"column":90},"end":{"line":474,"column":92}}]},"57":{"line":476,"type":"if","locations":[{"start":{"line":476,"column":2},"end":{"line":476,"column":2}},{"start":{"line":476,"column":2},"end":{"line":476,"column":2}}]},"58":{"line":482,"type":"if","locations":[{"start":{"line":482,"column":2},"end":{"line":482,"column":2}},{"start":{"line":482,"column":2},"end":{"line":482,"column":2}}]},"59":{"line":487,"type":"if","locations":[{"start":{"line":487,"column":2},"end":{"line":487,"column":2}},{"start":{"line":487,"column":2},"end":{"line":487,"column":2}}]},"60":{"line":490,"type":"if","locations":[{"start":{"line":490,"column":2},"end":{"line":490,"column":2}},{"start":{"line":490,"column":2},"end":{"line":490,"column":2}}]},"61":{"line":490,"type":"binary-expr","locations":[{"start":{"line":490,"column":5},"end":{"line":490,"column":18}},{"start":{"line":490,"column":22},"end":{"line":490,"column":54}},{"start":{"line":490,"column":58},"end":{"line":490,"column":71}}]},"62":{"line":498,"type":"cond-expr","locations":[{"start":{"line":498,"column":55},"end":{"line":498,"column":72}},{"start":{"line":498,"column":74},"end":{"line":498,"column":79}}]},"63":{"line":499,"type":"cond-expr","locations":[{"start":{"line":499,"column":73},"end":{"line":499,"column":99}},{"start":{"line":499,"column":102},"end":{"line":499,"column":107}}]},"64":{"line":500,"type":"cond-expr","locations":[{"start":{"line":500,"column":67},"end":{"line":500,"column":90}},{"start":{"line":500,"column":93},"end":{"line":500,"column":98}}]},"65":{"line":504,"type":"binary-expr","locations":[{"start":{"line":504,"column":17},"end":{"line":504,"column":33}},{"start":{"line":504,"column":37},"end":{"line":504,"column":39}}]},"66":{"line":508,"type":"cond-expr","locations":[{"start":{"line":508,"column":43},"end":{"line":508,"column":75}},{"start":{"line":508,"column":78},"end":{"line":508,"column":83}}]},"67":{"line":512,"type":"cond-expr","locations":[{"start":{"line":512,"column":43},"end":{"line":512,"column":54}},{"start":{"line":512,"column":57},"end":{"line":512,"column":62}}]},"68":{"line":513,"type":"cond-expr","locations":[{"start":{"line":513,"column":61},"end":{"line":513,"column":81}},{"start":{"line":513,"column":84},"end":{"line":513,"column":88}}]},"69":{"line":514,"type":"cond-expr","locations":[{"start":{"line":514,"column":63},"end":{"line":514,"column":84}},{"start":{"line":514,"column":87},"end":{"line":514,"column":91}}]},"70":{"line":515,"type":"cond-expr","locations":[{"start":{"line":515,"column":65},"end":{"line":515,"column":87}},{"start":{"line":515,"column":90},"end":{"line":515,"column":95}}]},"71":{"line":517,"type":"cond-expr","locations":[{"start":{"line":517,"column":57},"end":{"line":517,"column":75}},{"start":{"line":517,"column":78},"end":{"line":517,"column":83}}]},"72":{"line":518,"type":"cond-expr","locations":[{"start":{"line":518,"column":57},"end":{"line":518,"column":75}},{"start":{"line":518,"column":78},"end":{"line":518,"column":83}}]},"73":{"line":520,"type":"cond-expr","locations":[{"start":{"line":520,"column":62},"end":{"line":520,"column":83}},{"start":{"line":520,"column":86},"end":{"line":520,"column":90}}]},"74":{"line":540,"type":"if","locations":[{"start":{"line":540,"column":2},"end":{"line":540,"column":2}},{"start":{"line":540,"column":2},"end":{"line":540,"column":2}}]},"75":{"line":540,"type":"binary-expr","locations":[{"start":{"line":540,"column":79},"end":{"line":540,"column":86}},{"start":{"line":540,"column":90},"end":{"line":540,"column":92}}]},"76":{"line":542,"type":"if","locations":[{"start":{"line":542,"column":2},"end":{"line":542,"column":2}},{"start":{"line":542,"column":2},"end":{"line":542,"column":2}}]},"77":{"line":545,"type":"if","locations":[{"start":{"line":545,"column":2},"end":{"line":545,"column":2}},{"start":{"line":545,"column":2},"end":{"line":545,"column":2}}]},"78":{"line":548,"type":"cond-expr","locations":[{"start":{"line":548,"column":29},"end":{"line":548,"column":32}},{"start":{"line":548,"column":35},"end":{"line":548,"column":40}}]},"79":{"line":567,"type":"if","locations":[{"start":{"line":567,"column":2},"end":{"line":567,"column":2}},{"start":{"line":567,"column":2},"end":{"line":567,"column":2}}]},"80":{"line":567,"type":"binary-expr","locations":[{"start":{"line":567,"column":79},"end":{"line":567,"column":86}},{"start":{"line":567,"column":90},"end":{"line":567,"column":92}}]},"81":{"line":569,"type":"if","locations":[{"start":{"line":569,"column":2},"end":{"line":569,"column":2}},{"start":{"line":569,"column":2},"end":{"line":569,"column":2}}]},"82":{"line":572,"type":"if","locations":[{"start":{"line":572,"column":2},"end":{"line":572,"column":2}},{"start":{"line":572,"column":2},"end":{"line":572,"column":2}}]},"83":{"line":575,"type":"if","locations":[{"start":{"line":575,"column":2},"end":{"line":575,"column":2}},{"start":{"line":575,"column":2},"end":{"line":575,"column":2}}]},"84":{"line":575,"type":"binary-expr","locations":[{"start":{"line":575,"column":5},"end":{"line":575,"column":18}},{"start":{"line":575,"column":22},"end":{"line":575,"column":54}},{"start":{"line":575,"column":58},"end":{"line":575,"column":75}}]},"85":{"line":580,"type":"cond-expr","locations":[{"start":{"line":580,"column":29},"end":{"line":580,"column":32}},{"start":{"line":580,"column":35},"end":{"line":580,"column":40}}]},"86":{"line":598,"type":"if","locations":[{"start":{"line":598,"column":2},"end":{"line":598,"column":2}},{"start":{"line":598,"column":2},"end":{"line":598,"column":2}}]},"87":{"line":598,"type":"binary-expr","locations":[{"start":{"line":598,"column":79},"end":{"line":598,"column":86}},{"start":{"line":598,"column":90},"end":{"line":598,"column":92}}]},"88":{"line":600,"type":"if","locations":[{"start":{"line":600,"column":2},"end":{"line":600,"column":2}},{"start":{"line":600,"column":2},"end":{"line":600,"column":2}}]},"89":{"line":603,"type":"if","locations":[{"start":{"line":603,"column":2},"end":{"line":603,"column":2}},{"start":{"line":603,"column":2},"end":{"line":603,"column":2}}]},"90":{"line":606,"type":"if","locations":[{"start":{"line":606,"column":2},"end":{"line":606,"column":2}},{"start":{"line":606,"column":2},"end":{"line":606,"column":2}}]},"91":{"line":606,"type":"binary-expr","locations":[{"start":{"line":606,"column":5},"end":{"line":606,"column":18}},{"start":{"line":606,"column":22},"end":{"line":606,"column":54}},{"start":{"line":606,"column":58},"end":{"line":606,"column":75}}]},"92":{"line":611,"type":"cond-expr","locations":[{"start":{"line":611,"column":29},"end":{"line":611,"column":32}},{"start":{"line":611,"column":35},"end":{"line":611,"column":40}}]},"93":{"line":630,"type":"binary-expr","locations":[{"start":{"line":630,"column":18},"end":{"line":630,"column":31}},{"start":{"line":630,"column":35},"end":{"line":630,"column":37}}]},"94":{"line":632,"type":"binary-expr","locations":[{"start":{"line":632,"column":20},"end":{"line":632,"column":47}},{"start":{"line":632,"column":51},"end":{"line":632,"column":59}}]},"95":{"line":660,"type":"if","locations":[{"start":{"line":660,"column":2},"end":{"line":660,"column":2}},{"start":{"line":660,"column":2},"end":{"line":660,"column":2}}]},"96":{"line":660,"type":"binary-expr","locations":[{"start":{"line":660,"column":5},"end":{"line":660,"column":27}},{"start":{"line":660,"column":31},"end":{"line":660,"column":44}},{"start":{"line":660,"column":48},"end":{"line":660,"column":81}}]},"97":{"line":662,"type":"if","locations":[{"start":{"line":662,"column":9},"end":{"line":662,"column":9}},{"start":{"line":662,"column":9},"end":{"line":662,"column":9}}]},"98":{"line":674,"type":"if","locations":[{"start":{"line":674,"column":2},"end":{"line":674,"column":2}},{"start":{"line":674,"column":2},"end":{"line":674,"column":2}}]},"99":{"line":679,"type":"if","locations":[{"start":{"line":679,"column":2},"end":{"line":679,"column":2}},{"start":{"line":679,"column":2},"end":{"line":679,"column":2}}]},"100":{"line":679,"type":"binary-expr","locations":[{"start":{"line":679,"column":5},"end":{"line":679,"column":24}},{"start":{"line":679,"column":28},"end":{"line":679,"column":59}}]},"101":{"line":694,"type":"if","locations":[{"start":{"line":694,"column":2},"end":{"line":694,"column":2}},{"start":{"line":694,"column":2},"end":{"line":694,"column":2}}]},"102":{"line":695,"type":"if","locations":[{"start":{"line":695,"column":2},"end":{"line":695,"column":2}},{"start":{"line":695,"column":2},"end":{"line":695,"column":2}}]},"103":{"line":736,"type":"binary-expr","locations":[{"start":{"line":736,"column":12},"end":{"line":736,"column":19}},{"start":{"line":736,"column":23},"end":{"line":736,"column":25}}]},"104":{"line":740,"type":"if","locations":[{"start":{"line":740,"column":2},"end":{"line":740,"column":2}},{"start":{"line":740,"column":2},"end":{"line":740,"column":2}}]},"105":{"line":743,"type":"if","locations":[{"start":{"line":743,"column":2},"end":{"line":743,"column":2}},{"start":{"line":743,"column":2},"end":{"line":743,"column":2}}]},"106":{"line":748,"type":"if","locations":[{"start":{"line":748,"column":2},"end":{"line":748,"column":2}},{"start":{"line":748,"column":2},"end":{"line":748,"column":2}}]},"107":{"line":751,"type":"if","locations":[{"start":{"line":751,"column":2},"end":{"line":751,"column":2}},{"start":{"line":751,"column":2},"end":{"line":751,"column":2}}]},"108":{"line":756,"type":"if","locations":[{"start":{"line":756,"column":2},"end":{"line":756,"column":2}},{"start":{"line":756,"column":2},"end":{"line":756,"column":2}}]},"109":{"line":766,"type":"if","locations":[{"start":{"line":766,"column":2},"end":{"line":766,"column":2}},{"start":{"line":766,"column":2},"end":{"line":766,"column":2}}]},"110":{"line":767,"type":"cond-expr","locations":[{"start":{"line":767,"column":42},"end":{"line":767,"column":59}},{"start":{"line":767,"column":62},"end":{"line":767,"column":69}}]},"111":{"line":771,"type":"if","locations":[{"start":{"line":771,"column":2},"end":{"line":771,"column":2}},{"start":{"line":771,"column":2},"end":{"line":771,"column":2}}]},"112":{"line":771,"type":"binary-expr","locations":[{"start":{"line":771,"column":5},"end":{"line":771,"column":48}},{"start":{"line":771,"column":52},"end":{"line":771,"column":70}}]},"113":{"line":775,"type":"if","locations":[{"start":{"line":775,"column":2},"end":{"line":775,"column":2}},{"start":{"line":775,"column":2},"end":{"line":775,"column":2}}]}},"code":["\"use strict\"","","var inherits = require('util').inherits,","  require_optional = require('require_optional'),","  f = require('util').format,","  EventEmitter = require('events').EventEmitter,","  ReadPreference = require('./read_preference'),","  Logger = require('../connection/logger'),","  debugOptions = require('../connection/utils').debugOptions,","  retrieveBSON = require('../connection/utils').retrieveBSON,","  Pool = require('../connection/pool'),","  Query = require('../connection/commands').Query,","  MongoError = require('../error'),","  PreTwoSixWireProtocolSupport = require('../wireprotocol/2_4_support'),","  TwoSixWireProtocolSupport = require('../wireprotocol/2_6_support'),","  ThreeTwoWireProtocolSupport = require('../wireprotocol/3_2_support'),","  BasicCursor = require('../cursor'),","  sdam = require('./shared'),","  assign = require('./shared').assign,","  createClientInfo = require('./shared').createClientInfo;","","// Used for filtering out fields for loggin","var debugFields = ['reconnect', 'reconnectTries', 'reconnectInterval', 'emitError', 'cursorFactory', 'host'","  , 'port', 'size', 'keepAlive', 'keepAliveInitialDelay', 'noDelay', 'connectionTimeout', 'checkServerIdentity'","  , 'socketTimeout', 'singleBufferSerializtion', 'ssl', 'ca', 'crl', 'cert', 'key', 'rejectUnauthorized', 'promoteLongs', 'promoteValues'","  , 'promoteBuffers', 'servername'];","","// Server instance id","var id = 0;","var serverAccounting = false;","var servers = {};","var BSON = retrieveBSON();","","/**"," * Creates a new Server instance"," * @class"," * @param {boolean} [options.reconnect=true] Server will attempt to reconnect on loss of connection"," * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times"," * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries"," * @param {number} [options.monitoring=true] Enable the server state monitoring (calling ismaster at monitoringInterval)"," * @param {number} [options.monitoringInterval=5000] The interval of calling ismaster when monitoring is enabled."," * @param {Cursor} [options.cursorFactory=Cursor] The cursor factory class used for all query cursors"," * @param {string} options.host The server host"," * @param {number} options.port The server port"," * @param {number} [options.size=5] Server connection pool size"," * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled"," * @param {number} [options.keepAliveInitialDelay=0] Initial delay before TCP keep alive enabled"," * @param {boolean} [options.noDelay=true] TCP Connection no delay"," * @param {number} [options.connectionTimeout=0] TCP Connection timeout setting"," * @param {number} [options.socketTimeout=0] TCP Socket timeout setting"," * @param {boolean} [options.ssl=false] Use SSL for connection"," * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function."," * @param {Buffer} [options.ca] SSL Certificate store binary buffer"," * @param {Buffer} [options.crl] SSL Certificate revocation store binary buffer"," * @param {Buffer} [options.cert] SSL Certificate binary buffer"," * @param {Buffer} [options.key] SSL Key file binary buffer"," * @param {string} [options.passphrase] SSL Certificate pass phrase"," * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates"," * @param {string} [options.servername=null] String containing the server name requested via TLS SNI."," * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits"," * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types."," * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers."," * @param {string} [options.appname=null] Application name, passed in on ismaster call and logged in mongod server logs. Maximum size 128 bytes."," * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit."," * @return {Server} A cursor instance"," * @fires Server#connect"," * @fires Server#close"," * @fires Server#error"," * @fires Server#timeout"," * @fires Server#parseError"," * @fires Server#reconnect"," * @fires Server#reconnectFailed"," * @fires Server#serverHeartbeatStarted"," * @fires Server#serverHeartbeatSucceeded"," * @fires Server#serverHeartbeatFailed"," * @fires Server#topologyOpening"," * @fires Server#topologyClosed"," * @fires Server#topologyDescriptionChanged"," * @property {string} type the topology type."," * @property {string} parserType the parser type used (c++ or js)."," */","var Server = function(options) {","  options = options || {};","","  // Add event listener","  EventEmitter.call(this);","","  // Server instance id","  this.id = id++;","","  // Internal state","  this.s = {","    // Options","    options: options,","    // Logger","    logger: Logger('Server', options),","    // Factory overrides","    Cursor: options.cursorFactory || BasicCursor,","    // BSON instance","    bson: options.bson || new BSON([BSON.Binary, BSON.Code, BSON.DBRef, BSON.Decimal128,","      BSON.Double, BSON.Int32, BSON.Long, BSON.Map, BSON.MaxKey, BSON.MinKey,","      BSON.ObjectId, BSON.BSONRegExp, BSON.Symbol, BSON.Timestamp]),","    // Pool","    pool: null,","    // Disconnect handler","    disconnectHandler: options.disconnectHandler,","    // Monitor thread (keeps the connection alive)","    monitoring: typeof options.monitoring == 'boolean' ? options.monitoring : true,","    // Is the server in a topology","    inTopology: typeof options.inTopology == 'boolean' ? options.inTopology : false,","    // Monitoring timeout","    monitoringInterval: typeof options.monitoringInterval == 'number'","      ? options.monitoringInterval","      : 5000,","    // Topology id","    topologyId: -1","  }","","  // Curent ismaster","  this.ismaster = null;","  // Current ping time","  this.lastIsMasterMS = -1;","  // The monitoringProcessId","  this.monitoringProcessId = null;","  // Initial connection","  this.initalConnect = true;","  // Wire protocol handler, default to oldest known protocol handler","  // this gets changed when the first ismaster is called.","  this.wireProtocolHandler = new PreTwoSixWireProtocolSupport();","  // Default type","  this._type = 'server';","  // Set the client info","  this.clientInfo = createClientInfo(options);","","  // Max Stalleness values","  // last time we updated the ismaster state","  this.lastUpdateTime = 0;","  // Last write time","  this.lastWriteDate = 0;","  // Stalleness","  this.staleness = 0;","}","","inherits(Server, EventEmitter);","","Object.defineProperty(Server.prototype, 'type', {","  enumerable:true, get: function() { return this._type; }","});","","Object.defineProperty(Server.prototype, 'parserType', {","  enumerable:true, get: function() {","    return BSON.native ? \"c++\" : \"js\";","  }","});","","Server.enableServerAccounting = function() {","  serverAccounting = true;","  servers = {};","}","","Server.disableServerAccounting = function() {","  serverAccounting = false;","}","","Server.servers = function() {","  return servers;","}","","Object.defineProperty(Server.prototype, 'name', {","  enumerable:true,","  get: function() { return this.s.options.host + \":\" + this.s.options.port; }","});","","function configureWireProtocolHandler(self, ismaster) {","  // 3.2 wire protocol handler","  if(ismaster.maxWireVersion >= 4) {","    return new ThreeTwoWireProtocolSupport(new TwoSixWireProtocolSupport());","  }","","  // 2.6 wire protocol handler","  if(ismaster.maxWireVersion >= 2) {","    return new TwoSixWireProtocolSupport();","  }","","  // 2.4 or earlier wire protocol handler","  return new PreTwoSixWireProtocolSupport();","}","","function disconnectHandler(self, type, ns, cmd, options, callback) {","  // Topology is not connected, save the call in the provided store to be","  // Executed at some point when the handler deems it's reconnected","  if(!self.s.pool.isConnected() && self.s.disconnectHandler != null && !options.monitoring) {","    self.s.disconnectHandler.add(type, ns, cmd, options, callback);","    return true;","  }","","  // If we have no connection error","  if(!self.s.pool.isConnected()) {","    callback(MongoError.create(f(\"no connection available to server %s\", self.name)));","    return true;","  }","}","","function monitoringProcess(self) {","  return function() {","    // Pool was destroyed do not continue process","    if(self.s.pool.isDestroyed()) return;","    // Emit monitoring Process event","    self.emit('monitoring', self);","    // Perform ismaster call","    // Query options","    var queryOptions = { numberToSkip: 0, numberToReturn: -1, checkKeys: false, slaveOk: true };","    // Create a query instance","    var query = new Query(self.s.bson, 'admin.$cmd', {ismaster:true}, queryOptions);","    // Get start time","    var start = new Date().getTime();","","    // Execute the ismaster query","    self.s.pool.write(query, {","      socketTimeout: (typeof self.s.options.connectionTimeout !== 'number') ? 2000 : self.s.options.connectionTimeout,","      monitoring: true,","    }, function(err, result) {","      // Set initial lastIsMasterMS","      self.lastIsMasterMS = new Date().getTime() - start;","      if(self.s.pool.isDestroyed()) return;","      // Update the ismaster view if we have a result","      if(result) {","        self.ismaster = result.result;","      }","      // Re-schedule the monitoring process","      self.monitoringProcessId = setTimeout(monitoringProcess(self), self.s.monitoringInterval);","    });","  }","}","","var eventHandler = function(self, event) {","  return function(err) {","    // Log information of received information if in info mode","    if(self.s.logger.isInfo()) {","      var object = err instanceof MongoError ? JSON.stringify(err) : {}","      self.s.logger.info(f('server %s fired event %s out with message %s'","        , self.name, event, object));","    }","","    // Handle connect event","    if(event == 'connect') {","      // Issue an ismaster command at connect","      // Query options","      var queryOptions = { numberToSkip: 0, numberToReturn: -1, checkKeys: false, slaveOk: true };","      // Create a query instance","      var query = new Query(self.s.bson, 'admin.$cmd', {ismaster:true, client: self.clientInfo}, queryOptions);","      // Get start time","      var start = new Date().getTime();","      // Execute the ismaster query","      self.s.pool.write(query, {","        socketTimeout: self.s.options.connectionTimeout || 2000,","      }, function(err, result) {","        // Set initial lastIsMasterMS","        self.lastIsMasterMS = new Date().getTime() - start;","        if(err) {","          self.destroy();","          if(self.listeners('error').length > 0) self.emit('error', err);","          return;","        }","","        // Ensure no error emitted after initial connect when reconnecting","        self.initalConnect = false;","        // Save the ismaster","        self.ismaster = result.result;","","        // It's a proxy change the type so","        // the wireprotocol will send $readPreference","        if(self.ismaster.msg == 'isdbgrid') {","          self._type = 'mongos';","        }","        // Add the correct wire protocol handler","        self.wireProtocolHandler = configureWireProtocolHandler(self, self.ismaster);","        // Have we defined self monitoring","        if(self.s.monitoring) {","          self.monitoringProcessId = setTimeout(monitoringProcess(self), self.s.monitoringInterval);","        }","","        // Emit server description changed if something listening","        sdam.emitServerDescriptionChanged(self, {","          address: self.name, arbiters: [], hosts: [], passives: [], type: !self.s.inTopology ? 'Standalone' : sdam.getTopologyType(self)","        });","","        // Emit topology description changed if something listening","        sdam.emitTopologyDescriptionChanged(self, {","          topologyType: 'Single', servers: [{address: self.name, arbiters: [], hosts: [], passives: [], type: 'Standalone'}]","        });","","        // Log the ismaster if available","        if(self.s.logger.isInfo()) {","          self.s.logger.info(f('server %s connected with ismaster [%s]', self.name, JSON.stringify(self.ismaster)));","        }","","        // Emit connect","        self.emit('connect', self);","      });","    } else if(event == 'error' || event == 'parseError'","      || event == 'close' || event == 'timeout' || event == 'reconnect'","      || event == 'attemptReconnect' || 'reconnectFailed') {","      // Remove server instance from accounting","      if(serverAccounting && ['close', 'timeout', 'error', 'parseError', 'reconnectFailed'].indexOf(event) != -1) {","        // Emit toplogy opening event if not in topology","        if(!self.s.inTopology) {","          self.emit('topologyOpening', { topologyId: self.id });","        }","","        delete servers[self.id];","      }","","      // Reconnect failed return error","      if(event == 'reconnectFailed') {","        self.emit('reconnectFailed', err);","        // Emit error if any listeners","        if(self.listeners('error').length > 0) {","          self.emit('error', err);","        }","        // Terminate","        return;","      }","","      // On first connect fail","      if(self.s.pool.state == 'disconnected' && self.initalConnect && ['close', 'timeout', 'error', 'parseError'].indexOf(event) != -1) {","        self.initalConnect = false;","        return self.emit('error', new MongoError(f('failed to connect to server [%s] on first connect [%s]', self.name, err)));","      }","","      // Reconnect event, emit the server","      if(event == 'reconnect') {","        return self.emit(event, self);","      }","","      // Emit the event","      self.emit(event, err);","    }","  }","}","","/**"," * Initiate server connect"," * @method"," * @param {array} [options.auth=null] Array of auth options to apply on connect"," */","Server.prototype.connect = function(options) {","  var self = this;","  options = options || {};","","  // Set the connections","  if(serverAccounting) servers[this.id] = this;","","  // Do not allow connect to be called on anything that's not disconnected","  if(self.s.pool && !self.s.pool.isDisconnected() && !self.s.pool.isDestroyed()) {","    throw MongoError.create(f('server instance in invalid state %s', self.s.state));","  }","","  // Create a pool","  self.s.pool = new Pool(assign(self.s.options, options, {bson: this.s.bson}));","","  // Set up listeners","  self.s.pool.on('close', eventHandler(self, 'close'));","  self.s.pool.on('error', eventHandler(self, 'error'));","  self.s.pool.on('timeout', eventHandler(self, 'timeout'));","  self.s.pool.on('parseError', eventHandler(self, 'parseError'));","  self.s.pool.on('connect', eventHandler(self, 'connect'));","  self.s.pool.on('reconnect', eventHandler(self, 'reconnect'));","  self.s.pool.on('reconnectFailed', eventHandler(self, 'reconnectFailed'));","","  // Emit toplogy opening event if not in topology","  if(!self.s.inTopology) {","    this.emit('topologyOpening', { topologyId: self.id });","  }","","  // Emit opening server event","  self.emit('serverOpening', {","    topologyId: self.s.topologyId != -1 ? self.s.topologyId : self.id,","    address: self.name","  });","","  // Connect with optional auth settings","  if(options.auth) {","    self.s.pool.connect.apply(self.s.pool, options.auth);","  } else {","    self.s.pool.connect();","  }","}","","/**"," * Get the server description"," * @method"," * @return {object}","*/","Server.prototype.getDescription = function() {","  var ismaster = this.ismaster || {};","  var description = {","    type: sdam.getTopologyType(this),","    address: this.name,","  };","","  // Add fields if available","  if(ismaster.hosts) description.hosts = ismaster.hosts;","  if(ismaster.arbiters) description.arbiters = ismaster.arbiters;","  if(ismaster.passives) description.passives = ismaster.passives;","  if(ismaster.setName) description.setName = ismaster.setName;","  return description;","}","","/**"," * Returns the last known ismaster document for this server"," * @method"," * @return {object}"," */","Server.prototype.lastIsMaster = function() {","  return this.ismaster;","}","","/**"," * Unref all connections belong to this server"," * @method"," */","Server.prototype.unref = function() {","  this.s.pool.unref();","}","","/**"," * Figure out if the server is connected"," * @method"," * @return {boolean}"," */","Server.prototype.isConnected = function() {","  if(!this.s.pool) return false;","  return this.s.pool.isConnected();","}","","/**"," * Figure out if the server instance was destroyed by calling destroy"," * @method"," * @return {boolean}"," */","Server.prototype.isDestroyed = function() {","  if(!this.s.pool) return false;","  return this.s.pool.isDestroyed();","}","","function basicWriteValidations(self) {","  if(!self.s.pool) return MongoError.create('server instance is not connected');","  if(self.s.pool.isDestroyed()) return MongoError.create('server instance pool was destroyed');","}","","function basicReadValidations(self, options) {","  basicWriteValidations(self, options);","","  if(options.readPreference && !(options.readPreference instanceof ReadPreference)) {","    throw new Error(\"readPreference must be an instance of ReadPreference\");","  }","}","","/**"," * Execute a command"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {object} cmd The command hash"," * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.checkKeys=false] Specify if the bson parser should validate keys."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {Boolean} [options.fullResult=false] Return the full envelope instead of just the result document."," * @param {opResultCallback} callback A callback function"," */","Server.prototype.command = function(ns, cmd, options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {}, options = options || {};","  var result = basicReadValidations(self, options);","  if(result) return callback(result);","","  // Clone the options","  options = assign({}, options, { wireProtocolCommand: false });","","  // Debug log","  if(self.s.logger.isDebug()) self.s.logger.debug(f('executing command [%s] against %s', JSON.stringify({","    ns: ns, cmd: cmd, options: debugOptions(debugFields, options)","  }), self.name));","","  // If we are not connected or have a disconnectHandler specified","  if(disconnectHandler(self, 'command', ns, cmd, options, callback)) return;","","  // Check if we have collation support","  if(this.ismaster && this.ismaster.maxWireVersion < 5 && cmd.collation) {","    return callback(new MongoError(f('server %s does not support collation', this.name)));","  }","","  // Query options","  var queryOptions = {","    numberToSkip: 0,","    numberToReturn: -1,","    checkKeys: typeof options.checkKeys == 'boolean' ? options.checkKeys: false,","    serializeFunctions: typeof options.serializeFunctions == 'boolean' ? options.serializeFunctions : false,","    ignoreUndefined: typeof options.ignoreUndefined == 'boolean' ? options.ignoreUndefined : false","  };","","  // Are we executing against a specific topology","  var topology = options.topology || {};","  // Create the query object","  var query = self.wireProtocolHandler.command(self.s.bson, ns, cmd, {}, topology, options);","  // Set slave OK of the query","  query.slaveOk = options.readPreference ? options.readPreference.slaveOk() : false;","","  // Write options","  var writeOptions = {","    raw: typeof options.raw == 'boolean' ? options.raw : false,","    promoteLongs: typeof options.promoteLongs == 'boolean' ? options.promoteLongs : true,","    promoteValues: typeof options.promoteValues == 'boolean' ? options.promoteValues : true,","    promoteBuffers: typeof options.promoteBuffers == 'boolean' ? options.promoteBuffers : false,","    command: true,","    monitoring: typeof options.monitoring == 'boolean' ? options.monitoring : false,","    fullResult: typeof options.fullResult == 'boolean' ? options.fullResult : false,","    requestId: query.requestId,","    socketTimeout: typeof options.socketTimeout == 'number' ? options.socketTimeout : null,","  };","","  // Write the operation to the pool","  self.s.pool.write(query, writeOptions, callback);","}","","/**"," * Insert one or more documents"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {array} ops An array of documents to insert"," * @param {boolean} [options.ordered=true] Execute in order or out of order"," * @param {object} [options.writeConcern={}] Write concern for the operation"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","Server.prototype.insert = function(ns, ops, options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {}, options = options || {};","  var result = basicWriteValidations(self, options);","  if(result) return callback(result);","","  // If we are not connected or have a disconnectHandler specified","  if(disconnectHandler(self, 'insert', ns, ops, options, callback)) return;","","  // Setup the docs as an array","  ops = Array.isArray(ops) ? ops : [ops];","","  // Execute write","  return self.wireProtocolHandler.insert(self.s.pool, self.ismaster, ns, self.s.bson, ops, options, callback);","}","","/**"," * Perform one or more update operations"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {array} ops An array of updates"," * @param {boolean} [options.ordered=true] Execute in order or out of order"," * @param {object} [options.writeConcern={}] Write concern for the operation"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","Server.prototype.update = function(ns, ops, options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {}, options = options || {};","  var result = basicWriteValidations(self, options);","  if(result) return callback(result);","","  // If we are not connected or have a disconnectHandler specified","  if(disconnectHandler(self, 'update', ns, ops, options, callback)) return;","","  // Check if we have collation support","  if(this.ismaster && this.ismaster.maxWireVersion < 5 && options.collation) {","    return callback(new MongoError(f('server %s does not support collation', this.name)));","  }","","  // Setup the docs as an array","  ops = Array.isArray(ops) ? ops : [ops];","  // Execute write","  return self.wireProtocolHandler.update(self.s.pool, self.ismaster, ns, self.s.bson, ops, options, callback);","}","","/**"," * Perform one or more remove operations"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {array} ops An array of removes"," * @param {boolean} [options.ordered=true] Execute in order or out of order"," * @param {object} [options.writeConcern={}] Write concern for the operation"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","Server.prototype.remove = function(ns, ops, options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {}, options = options || {};","  var result = basicWriteValidations(self, options);","  if(result) return callback(result);","","  // If we are not connected or have a disconnectHandler specified","  if(disconnectHandler(self, 'remove', ns, ops, options, callback)) return;","","  // Check if we have collation support","  if(this.ismaster && this.ismaster.maxWireVersion < 5 && options.collation) {","    return callback(new MongoError(f('server %s does not support collation', this.name)));","  }","","  // Setup the docs as an array","  ops = Array.isArray(ops) ? ops : [ops];","  // Execute write","  return self.wireProtocolHandler.remove(self.s.pool, self.ismaster, ns, self.s.bson, ops, options, callback);","}","","/**"," * Get a new cursor"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {{object}|{Long}} cmd Can be either a command returning a cursor or a cursorId"," * @param {object} [options.batchSize=0] Batchsize for the operation"," * @param {array} [options.documents=[]] Initial documents list for cursor"," * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","Server.prototype.cursor = function(ns, cmd, cursorOptions) {","  var s = this.s;","  cursorOptions = cursorOptions || {};","  // Set up final cursor type","  var FinalCursor = cursorOptions.cursorFactory || s.Cursor;","  // Return the cursor","  return new FinalCursor(s.bson, ns, cmd, cursorOptions, this, s.options);","}","","/**"," * Logout from a database"," * @method"," * @param {string} db The db we are logging out from"," * @param {authResultCallback} callback A callback function"," */","Server.prototype.logout = function(dbName, callback) {","  this.s.pool.logout(dbName, callback);","}","","/**"," * Authenticate using a specified mechanism"," * @method"," * @param {string} mechanism The Auth mechanism we are invoking"," * @param {string} db The db we are invoking the mechanism against"," * @param {...object} param Parameters for the specific mechanism"," * @param {authResultCallback} callback A callback function"," */","Server.prototype.auth = function(mechanism, db) {","  var self = this;","","  // If we have the default mechanism we pick mechanism based on the wire","  // protocol max version. If it's >= 3 then scram-sha1 otherwise mongodb-cr","  if(mechanism == 'default' && self.ismaster && self.ismaster.maxWireVersion >= 3) {","    mechanism = 'scram-sha-1';","  } else if(mechanism == 'default') {","    mechanism = 'mongocr';","  }","","  // Slice all the arguments off","  var args = Array.prototype.slice.call(arguments, 0);","  // Set the mechanism","  args[0] = mechanism;","  // Get the callback","  var callback = args[args.length - 1];","","  // If we are not connected or have a disconnectHandler specified","  if(disconnectHandler(self, 'auth', db, args, {}, callback)) {","    return;","  }","","  // Do not authenticate if we are an arbiter","  if(this.lastIsMaster() && this.lastIsMaster().arbiterOnly) {","    return callback(null, true);","  }","","  // Apply the arguments to the pool","  self.s.pool.auth.apply(self.s.pool, args);","}","","/**"," * Compare two server instances"," * @method"," * @param {Server} server Server to compare equality against"," * @return {boolean}"," */","Server.prototype.equals = function(server) {","  if(typeof server == 'string') return this.name.toLowerCase() == server.toLowerCase();","  if(server.name) return this.name.toLowerCase() == server.name.toLowerCase();","  return false;","}","","/**"," * All raw connections"," * @method"," * @return {Connection[]}"," */","Server.prototype.connections = function() {","  return this.s.pool.allConnections();","}","","/**"," * Get server"," * @method"," * @return {Server}"," */","Server.prototype.getServer = function() {","  return this;","}","","/**"," * Get connection"," * @method"," * @return {Connection}"," */","Server.prototype.getConnection = function() {","  return this.s.pool.get();","}","","var listeners = ['close', 'error', 'timeout', 'parseError', 'connect'];","","/**"," * Destroy the server connection"," * @method"," * @param {boolean} [options.emitClose=false] Emit close event on destroy"," * @param {boolean} [options.emitDestroy=false] Emit destroy event on destroy"," * @param {boolean} [options.force=false] Force destroy the pool"," */","Server.prototype.destroy = function(options) {","  options = options || {};","  var self = this;","","  // Set the connections","  if(serverAccounting) delete servers[this.id];","","  // Destroy the monitoring process if any","  if(this.monitoringProcessId) {","    clearTimeout(this.monitoringProcessId);","  }","","  // No pool, return","  if(!self.s.pool) return;","","  // Emit close event","  if(options.emitClose) {","    self.emit('close', self);","  }","","  // Emit destroy event","  if(options.emitDestroy) {","    self.emit('destroy', self);","  }","","  // Remove all listeners","  listeners.forEach(function(event) {","    self.s.pool.removeAllListeners(event);","  });","","  // Emit opening server event","  if(self.listeners('serverClosed').length > 0) self.emit('serverClosed', {","    topologyId: self.s.topologyId != -1 ? self.s.topologyId : self.id, address: self.name","  });","","  // Emit toplogy opening event if not in topology","  if(self.listeners('topologyClosed').length > 0 && !self.s.inTopology) {","    self.emit('topologyClosed', { topologyId: self.id });","  }","","  if(self.s.logger.isDebug()) {","    self.s.logger.debug(f('destroy called on server %s', self.name));","  }","","  // Destroy the pool","  this.s.pool.destroy(options.force);","}","","/**"," * A server connect event, used to verify that the connection is up and running"," *"," * @event Server#connect"," * @type {Server}"," */","","/**"," * A server reconnect event, used to verify that the server topology has reconnected"," *"," * @event Server#reconnect"," * @type {Server}"," */","","/**"," * A server opening SDAM monitoring event"," *"," * @event Server#serverOpening"," * @type {object}"," */","","/**"," * A server closed SDAM monitoring event"," *"," * @event Server#serverClosed"," * @type {object}"," */","","/**"," * A server description SDAM change monitoring event"," *"," * @event Server#serverDescriptionChanged"," * @type {object}"," */","","/**"," * A topology open SDAM event"," *"," * @event Server#topologyOpening"," * @type {object}"," */","","/**"," * A topology closed SDAM event"," *"," * @event Server#topologyClosed"," * @type {object}"," */","","/**"," * A topology structure SDAM change event"," *"," * @event Server#topologyDescriptionChanged"," * @type {object}"," */","","/**"," * Server reconnect failed"," *"," * @event Server#reconnectFailed"," * @type {Error}"," */","","/**"," * Server connection pool closed"," *"," * @event Server#close"," * @type {object}"," */","","/**"," * Server connection pool caused an error"," *"," * @event Server#error"," * @type {Error}"," */","","/**"," * Server destroyed was called"," *"," * @event Server#destroy"," * @type {Server}"," */","","module.exports = Server;",""],"l":{"3":1,"23":1,"29":1,"30":1,"31":1,"32":1,"82":1,"83":2,"86":2,"89":2,"92":2,"120":2,"122":2,"124":2,"126":2,"129":2,"131":2,"133":2,"137":2,"139":2,"141":2,"144":1,"146":1,"147":8,"150":1,"152":12,"156":1,"157":0,"158":0,"161":1,"162":0,"165":1,"166":0,"169":1,"171":12,"174":1,"176":0,"177":0,"181":0,"182":0,"186":0,"189":1,"192":0,"193":0,"194":0,"198":0,"199":0,"200":0,"204":1,"205":0,"207":0,"209":0,"212":0,"214":0,"216":0,"219":0,"224":0,"225":0,"227":0,"228":0,"231":0,"236":1,"237":14,"239":2,"240":0,"241":0,"246":2,"249":0,"251":0,"253":0,"255":0,"259":0,"260":0,"261":0,"262":0,"263":0,"267":0,"269":0,"273":0,"274":0,"277":0,"279":0,"280":0,"284":0,"289":0,"294":0,"295":0,"299":0,"301":2,"305":2,"307":0,"308":0,"311":0,"315":2,"316":0,"318":0,"319":0,"322":0,"326":2,"327":2,"328":2,"332":0,"333":0,"337":0,"347":1,"348":2,"349":2,"352":2,"355":2,"356":0,"360":2,"363":2,"364":2,"365":2,"366":2,"367":2,"368":2,"369":2,"372":2,"373":2,"377":2,"383":2,"384":0,"386":2,"395":1,"396":0,"397":0,"403":0,"404":0,"405":0,"406":0,"407":0,"415":1,"416":0,"423":1,"424":0,"432":1,"433":0,"434":0,"442":1,"443":0,"444":0,"447":1,"448":0,"449":0,"452":1,"453":0,"455":0,"456":0,"472":1,"473":0,"474":0,"475":0,"476":0,"479":0,"482":0,"487":0,"490":0,"491":0,"495":0,"504":0,"506":0,"508":0,"511":0,"524":0,"538":1,"539":0,"540":0,"541":0,"542":0,"545":0,"548":0,"551":0,"565":1,"566":0,"567":0,"568":0,"569":0,"572":0,"575":0,"576":0,"580":0,"582":0,"596":1,"597":0,"598":0,"599":0,"600":0,"603":0,"606":0,"607":0,"611":0,"613":0,"628":1,"629":0,"630":0,"632":0,"634":0,"643":1,"644":0,"655":1,"656":0,"660":0,"661":0,"662":0,"663":0,"667":0,"669":0,"671":0,"674":0,"675":0,"679":0,"680":0,"684":0,"693":1,"694":0,"695":0,"696":0,"704":1,"705":0,"713":1,"714":0,"722":1,"723":0,"726":1,"735":1,"736":0,"737":0,"740":0,"743":0,"744":0,"748":0,"751":0,"752":0,"756":0,"757":0,"761":0,"762":0,"766":0,"771":0,"772":0,"775":0,"776":0,"780":0,"867":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/topologies/read_preference.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/topologies/read_preference.js","s":{"1":1,"2":1,"3":5,"4":5,"5":5,"6":5,"7":0,"8":0,"9":5,"10":0,"11":1,"12":0,"13":1,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1},"b":{"1":[0,5],"2":[5,0],"3":[0,0],"4":[0,5],"5":[5,0],"6":[0,0],"7":[0,0]},"f":{"1":5,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":42,"loc":{"start":{"line":42,"column":21},"end":{"line":42,"column":57}}},"2":{"name":"(anonymous_2)","line":62,"loc":{"start":{"line":62,"column":35},"end":{"line":62,"column":46}}},"3":{"name":"(anonymous_3)","line":71,"loc":{"start":{"line":71,"column":34},"end":{"line":71,"column":59}}},"4":{"name":"(anonymous_4)","line":80,"loc":{"start":{"line":80,"column":34},"end":{"line":80,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":85}},"2":{"start":{"line":42,"column":0},"end":{"line":55,"column":1}},"3":{"start":{"line":43,"column":2},"end":{"line":43,"column":31}},"4":{"start":{"line":44,"column":2},"end":{"line":44,"column":19}},"5":{"start":{"line":45,"column":2},"end":{"line":45,"column":25}},"6":{"start":{"line":48,"column":2},"end":{"line":54,"column":3}},"7":{"start":{"line":49,"column":4},"end":{"line":49,"column":27}},"8":{"start":{"line":50,"column":4},"end":{"line":51,"column":48}},"9":{"start":{"line":52,"column":9},"end":{"line":54,"column":3}},"10":{"start":{"line":53,"column":4},"end":{"line":53,"column":37}},"11":{"start":{"line":62,"column":0},"end":{"line":64,"column":1}},"12":{"start":{"line":63,"column":2},"end":{"line":63,"column":52}},"13":{"start":{"line":71,"column":0},"end":{"line":73,"column":1}},"14":{"start":{"line":72,"column":2},"end":{"line":72,"column":54}},"15":{"start":{"line":80,"column":0},"end":{"line":85,"column":1}},"16":{"start":{"line":81,"column":2},"end":{"line":81,"column":47}},"17":{"start":{"line":82,"column":2},"end":{"line":82,"column":63}},"18":{"start":{"line":82,"column":31},"end":{"line":82,"column":63}},"19":{"start":{"line":83,"column":2},"end":{"line":83,"column":93}},"20":{"start":{"line":83,"column":31},"end":{"line":83,"column":93}},"21":{"start":{"line":84,"column":2},"end":{"line":84,"column":24}},"22":{"start":{"line":92,"column":0},"end":{"line":92,"column":55}},"23":{"start":{"line":98,"column":0},"end":{"line":98,"column":73}},"24":{"start":{"line":104,"column":0},"end":{"line":104,"column":59}},"25":{"start":{"line":110,"column":0},"end":{"line":110,"column":77}},"26":{"start":{"line":116,"column":0},"end":{"line":116,"column":55}},"27":{"start":{"line":118,"column":0},"end":{"line":118,"column":32}}},"branchMap":{"1":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"2":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":5},"end":{"line":48,"column":17}},{"start":{"line":48,"column":21},"end":{"line":48,"column":61}}]},"3":{"line":50,"type":"cond-expr","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":40}},{"start":{"line":51,"column":43},"end":{"line":51,"column":47}}]},"4":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":9},"end":{"line":52,"column":9}},{"start":{"line":52,"column":9},"end":{"line":52,"column":9}}]},"5":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":12},"end":{"line":52,"column":16}},{"start":{"line":52,"column":20},"end":{"line":52,"column":43}}]},"6":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]},"7":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]}},"code":["\"use strict\";","","var needSlaveOk = ['primaryPreferred', 'secondary', 'secondaryPreferred', 'nearest'];","","/**"," * @fileOverview The **ReadPreference** class is a class that represents a MongoDB ReadPreference and is"," * used to construct connections."," *"," * @example"," * var ReplSet = require('mongodb-core').ReplSet"," *   , ReadPreference = require('mongodb-core').ReadPreference"," *   , assert = require('assert');"," *"," * var server = new ReplSet([{host: 'localhost', port: 30000}], {setName: 'rs'});"," * // Wait for the connection event"," * server.on('connect', function(server) {"," *   var cursor = server.cursor('db.test'"," *     , {find: 'db.test', query: {}}"," *     , {readPreference: new ReadPreference('secondary')});"," *   cursor.next(function(err, doc) {"," *     server.destroy();"," *   });"," * });"," *"," * // Start connecting"," * server.connect();"," */","","/**"," * Creates a new Pool instance"," * @class"," * @param {string} preference A string describing the preference (primary|primaryPreferred|secondary|secondaryPreferred|nearest)"," * @param {array} tags The tags object"," * @param {object} [options] Additional read preference options"," * @param {number} [options.maxStalenessSeconds] Max Secondary Read Stalleness in Seconds, Minimum value is 90 seconds."," * @property {string} preference The preference string (primary|primaryPreferred|secondary|secondaryPreferred|nearest)"," * @property {array} tags The tags object"," * @property {object} options Additional read preference options"," * @property {number} maxStalenessSeconds MaxStalenessSeconds value for the read preference"," * @return {ReadPreference}"," */","var ReadPreference = function(preference, tags, options) {","  this.preference = preference;","  this.tags = tags;","  this.options = options;","","  // Add the maxStalenessSeconds value to the read Preference","  if(this.options && this.options.maxStalenessSeconds != null) {","    this.options = options;","    this.maxStalenessSeconds = this.options.maxStalenessSeconds >= 0","      ? this.options.maxStalenessSeconds : null;","  } else if(tags && typeof tags == 'object') {","    this.options = tags, tags = null;","  }","}","","/**"," * This needs slaveOk bit set"," * @method"," * @return {boolean}"," */","ReadPreference.prototype.slaveOk = function() {","  return needSlaveOk.indexOf(this.preference) != -1;","}","","/**"," * Are the two read preference equal"," * @method"," * @return {boolean}"," */","ReadPreference.prototype.equals = function(readPreference) {","  return readPreference.preference == this.preference;","}","","/**"," * Return JSON representation"," * @method"," * @return {Object}"," */","ReadPreference.prototype.toJSON = function() {","  var readPreference = {mode: this.preference};","  if(Array.isArray(this.tags)) readPreference.tags = this.tags;","  if(this.maxStalenessSeconds) readPreference.maxStalenessSeconds = this.maxStalenessSeconds;","  return readPreference;","}","","/**"," * Primary read preference"," * @method"," * @return {ReadPreference}"," */","ReadPreference.primary = new ReadPreference('primary');","/**"," * Primary Preferred read preference"," * @method"," * @return {ReadPreference}"," */","ReadPreference.primaryPreferred = new ReadPreference('primaryPreferred');","/**"," * Secondary read preference"," * @method"," * @return {ReadPreference}"," */","ReadPreference.secondary = new ReadPreference('secondary');","/**"," * Secondary Preferred read preference"," * @method"," * @return {ReadPreference}"," */","ReadPreference.secondaryPreferred = new ReadPreference('secondaryPreferred');","/**"," * Nearest read preference"," * @method"," * @return {ReadPreference}"," */","ReadPreference.nearest = new ReadPreference('nearest');","","module.exports = ReadPreference;",""],"l":{"3":1,"42":1,"43":5,"44":5,"45":5,"48":5,"49":0,"50":0,"52":5,"53":0,"62":1,"63":0,"71":1,"72":0,"80":1,"81":0,"82":0,"83":0,"84":0,"92":1,"98":1,"104":1,"110":1,"116":1,"118":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/connection/pool.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/connection/pool.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":2,"11":2,"12":2,"13":2,"14":2,"15":2,"16":0,"17":2,"18":2,"19":2,"20":2,"21":2,"22":2,"23":2,"24":2,"25":2,"26":2,"27":2,"28":2,"29":2,"30":2,"31":2,"32":1,"33":1,"34":4,"35":1,"36":4,"37":1,"38":4,"39":1,"40":4,"41":4,"42":4,"43":4,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":8,"72":2,"73":0,"74":2,"75":2,"76":2,"77":2,"78":0,"79":0,"80":0,"81":2,"82":0,"83":0,"84":0,"85":0,"86":0,"87":2,"88":2,"89":2,"90":2,"91":2,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":1,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":1,"139":0,"140":0,"141":0,"142":0,"143":1,"144":2,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":1,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":1,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":1,"190":2,"191":1,"192":0,"193":1,"194":0,"195":1,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":1,"206":0,"207":1,"208":0,"209":1,"210":2,"211":0,"212":2,"213":2,"214":2,"215":2,"216":2,"217":2,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":2,"240":2,"241":2,"242":2,"243":2,"244":2,"245":0,"246":0,"247":1,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":1,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":1,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":1,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":1,"304":0,"305":0,"306":0,"307":1,"308":1,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":1,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":1,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":1,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":1,"393":6,"394":2,"395":2,"396":2,"397":1,"398":2,"399":0,"400":2,"401":0,"402":2,"403":2,"404":0,"405":0,"406":1,"407":1,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":1,"446":0,"447":0,"448":0,"449":0,"450":0,"451":1,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":1,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":1,"521":1},"b":{"1":[0,2],"2":[2,2,2,2],"3":[2,2],"4":[4,0],"5":[4,4],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,2],"13":[0,0],"14":[0,2],"15":[0,0],"16":[2,0],"17":[2,0],"18":[2,2],"19":[2,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0,0,0,0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,2],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[2,0],"100":[0,2],"101":[0,2],"102":[2,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0]},"f":{"1":2,"2":4,"3":4,"4":4,"5":4,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":8,"13":2,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":2,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":2,"32":0,"33":0,"34":0,"35":0,"36":0,"37":2,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":6,"63":2,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0},"fnMap":{"1":{"name":"(anonymous_1)","line":62,"loc":{"start":{"line":62,"column":11},"end":{"line":62,"column":29}}},"2":{"name":"(anonymous_2)","line":143,"loc":{"start":{"line":143,"column":7},"end":{"line":143,"column":18}}},"3":{"name":"(anonymous_3)","line":148,"loc":{"start":{"line":148,"column":7},"end":{"line":148,"column":18}}},"4":{"name":"(anonymous_4)","line":153,"loc":{"start":{"line":153,"column":7},"end":{"line":153,"column":18}}},"5":{"name":"stateTransition","line":156,"loc":{"start":{"line":156,"column":0},"end":{"line":156,"column":41}}},"6":{"name":"authenticate","line":175,"loc":{"start":{"line":175,"column":0},"end":{"line":175,"column":50}}},"7":{"name":"write","line":193,"loc":{"start":{"line":193,"column":0},"end":{"line":193,"column":21}}},"8":{"name":"(anonymous_8)","line":194,"loc":{"start":{"line":194,"column":9},"end":{"line":194,"column":49}}},"9":{"name":"reauthenticate","line":212,"loc":{"start":{"line":212,"column":0},"end":{"line":212,"column":46}}},"10":{"name":"authenticateAgainstProvider","line":214,"loc":{"start":{"line":214,"column":2},"end":{"line":214,"column":72}}},"11":{"name":"(anonymous_11)","line":221,"loc":{"start":{"line":221,"column":55},"end":{"line":221,"column":69}}},"12":{"name":"connectionFailureHandler","line":233,"loc":{"start":{"line":233,"column":0},"end":{"line":233,"column":47}}},"13":{"name":"(anonymous_13)","line":234,"loc":{"start":{"line":234,"column":9},"end":{"line":234,"column":23}}},"14":{"name":"attemptReconnect","line":284,"loc":{"start":{"line":284,"column":0},"end":{"line":284,"column":32}}},"15":{"name":"(anonymous_15)","line":285,"loc":{"start":{"line":285,"column":9},"end":{"line":285,"column":20}}},"16":{"name":"_connectionFailureHandler","line":296,"loc":{"start":{"line":296,"column":4},"end":{"line":296,"column":45}}},"17":{"name":"(anonymous_17)","line":297,"loc":{"start":{"line":297,"column":13},"end":{"line":297,"column":24}}},"18":{"name":"_connectHandler","line":318,"loc":{"start":{"line":318,"column":4},"end":{"line":318,"column":35}}},"19":{"name":"(anonymous_19)","line":319,"loc":{"start":{"line":319,"column":13},"end":{"line":319,"column":24}}},"20":{"name":"(anonymous_20)","line":329,"loc":{"start":{"line":329,"column":25},"end":{"line":329,"column":41}}},"21":{"name":"(anonymous_21)","line":343,"loc":{"start":{"line":343,"column":35},"end":{"line":343,"column":46}}},"22":{"name":"moveConnectionBetween","line":372,"loc":{"start":{"line":372,"column":0},"end":{"line":372,"column":53}}},"23":{"name":"messageHandler","line":381,"loc":{"start":{"line":381,"column":0},"end":{"line":381,"column":30}}},"24":{"name":"(anonymous_24)","line":382,"loc":{"start":{"line":382,"column":9},"end":{"line":382,"column":39}}},"25":{"name":"authenticateStragglers","line":413,"loc":{"start":{"line":413,"column":4},"end":{"line":413,"column":64}}},"26":{"name":"(anonymous_26)","line":442,"loc":{"start":{"line":442,"column":45},"end":{"line":442,"column":56}}},"27":{"name":"handleOperationCallback","line":457,"loc":{"start":{"line":457,"column":4},"end":{"line":457,"column":60}}},"28":{"name":"(anonymous_28)","line":460,"loc":{"start":{"line":460,"column":32},"end":{"line":460,"column":43}}},"29":{"name":"(anonymous_29)","line":469,"loc":{"start":{"line":469,"column":45},"end":{"line":469,"column":56}}},"30":{"name":"(anonymous_30)","line":472,"loc":{"start":{"line":472,"column":25},"end":{"line":472,"column":36}}},"31":{"name":"(anonymous_31)","line":507,"loc":{"start":{"line":507,"column":29},"end":{"line":507,"column":40}}},"32":{"name":"(anonymous_32)","line":518,"loc":{"start":{"line":518,"column":32},"end":{"line":518,"column":43}}},"33":{"name":"(anonymous_33)","line":529,"loc":{"start":{"line":529,"column":21},"end":{"line":529,"column":32}}},"34":{"name":"(anonymous_34)","line":538,"loc":{"start":{"line":538,"column":29},"end":{"line":538,"column":40}}},"35":{"name":"(anonymous_35)","line":567,"loc":{"start":{"line":567,"column":29},"end":{"line":567,"column":40}}},"36":{"name":"(anonymous_36)","line":576,"loc":{"start":{"line":576,"column":32},"end":{"line":576,"column":43}}},"37":{"name":"(anonymous_37)","line":584,"loc":{"start":{"line":584,"column":25},"end":{"line":584,"column":36}}},"38":{"name":"(anonymous_38)","line":599,"loc":{"start":{"line":599,"column":29},"end":{"line":599,"column":50}}},"39":{"name":"(anonymous_39)","line":617,"loc":{"start":{"line":617,"column":37},"end":{"line":617,"column":51}}},"40":{"name":"(anonymous_40)","line":629,"loc":{"start":{"line":629,"column":43},"end":{"line":629,"column":57}}},"41":{"name":"(anonymous_41)","line":661,"loc":{"start":{"line":661,"column":21},"end":{"line":661,"column":32}}},"42":{"name":"(anonymous_42)","line":675,"loc":{"start":{"line":675,"column":22},"end":{"line":675,"column":42}}},"43":{"name":"authenticateLiveConnections","line":690,"loc":{"start":{"line":690,"column":2},"end":{"line":690,"column":55}}},"44":{"name":"(anonymous_44)","line":706,"loc":{"start":{"line":706,"column":47},"end":{"line":706,"column":61}}},"45":{"name":"waitForLogout","line":735,"loc":{"start":{"line":735,"column":2},"end":{"line":735,"column":35}}},"46":{"name":"(anonymous_46)","line":737,"loc":{"start":{"line":737,"column":15},"end":{"line":737,"column":26}}},"47":{"name":"(anonymous_47)","line":743,"loc":{"start":{"line":743,"column":22},"end":{"line":743,"column":33}}},"48":{"name":"(anonymous_48)","line":745,"loc":{"start":{"line":745,"column":44},"end":{"line":745,"column":58}}},"49":{"name":"(anonymous_49)","line":761,"loc":{"start":{"line":761,"column":24},"end":{"line":761,"column":51}}},"50":{"name":"(anonymous_50)","line":784,"loc":{"start":{"line":784,"column":59},"end":{"line":784,"column":73}}},"51":{"name":"(anonymous_51)","line":800,"loc":{"start":{"line":800,"column":23},"end":{"line":800,"column":34}}},"52":{"name":"(anonymous_52)","line":805,"loc":{"start":{"line":805,"column":22},"end":{"line":805,"column":34}}},"53":{"name":"destroy","line":814,"loc":{"start":{"line":814,"column":0},"end":{"line":814,"column":36}}},"54":{"name":"(anonymous_54)","line":816,"loc":{"start":{"line":816,"column":22},"end":{"line":816,"column":34}}},"55":{"name":"(anonymous_55)","line":839,"loc":{"start":{"line":839,"column":25},"end":{"line":839,"column":41}}},"56":{"name":"checkStatus","line":868,"loc":{"start":{"line":868,"column":2},"end":{"line":868,"column":25}}},"57":{"name":"(anonymous_57)","line":907,"loc":{"start":{"line":907,"column":23},"end":{"line":907,"column":55}}},"58":{"name":"(anonymous_58)","line":924,"loc":{"start":{"line":924,"column":25},"end":{"line":924,"column":36}}},"59":{"name":"(anonymous_59)","line":937,"loc":{"start":{"line":937,"column":29},"end":{"line":937,"column":40}}},"60":{"name":"(anonymous_60)","line":941,"loc":{"start":{"line":941,"column":23},"end":{"line":941,"column":34}}},"61":{"name":"(anonymous_61)","line":1006,"loc":{"start":{"line":1006,"column":21},"end":{"line":1006,"column":32}}},"62":{"name":"remove","line":1013,"loc":{"start":{"line":1013,"column":0},"end":{"line":1013,"column":41}}},"63":{"name":"removeConnection","line":1022,"loc":{"start":{"line":1022,"column":0},"end":{"line":1022,"column":44}}},"64":{"name":"_createConnection","line":1032,"loc":{"start":{"line":1032,"column":0},"end":{"line":1032,"column":33}}},"65":{"name":"(anonymous_65)","line":1042,"loc":{"start":{"line":1042,"column":25},"end":{"line":1042,"column":47}}},"66":{"name":"(anonymous_66)","line":1043,"loc":{"start":{"line":1043,"column":11},"end":{"line":1043,"column":22}}},"67":{"name":"(anonymous_67)","line":1056,"loc":{"start":{"line":1056,"column":27},"end":{"line":1056,"column":49}}},"68":{"name":"(anonymous_68)","line":1057,"loc":{"start":{"line":1057,"column":11},"end":{"line":1057,"column":22}}},"69":{"name":"(anonymous_69)","line":1066,"loc":{"start":{"line":1066,"column":23},"end":{"line":1066,"column":35}}},"70":{"name":"(anonymous_70)","line":1077,"loc":{"start":{"line":1077,"column":40},"end":{"line":1077,"column":54}}},"71":{"name":"flushMonitoringOperations","line":1115,"loc":{"start":{"line":1115,"column":0},"end":{"line":1115,"column":42}}},"72":{"name":"_execute","line":1125,"loc":{"start":{"line":1125,"column":0},"end":{"line":1125,"column":24}}},"73":{"name":"(anonymous_73)","line":1126,"loc":{"start":{"line":1126,"column":9},"end":{"line":1126,"column":20}}},"74":{"name":"waitForAuth","line":1134,"loc":{"start":{"line":1134,"column":4},"end":{"line":1134,"column":29}}},"75":{"name":"(anonymous_75)","line":1137,"loc":{"start":{"line":1137,"column":17},"end":{"line":1137,"column":28}}},"76":{"name":"(anonymous_76)","line":1143,"loc":{"start":{"line":1143,"column":16},"end":{"line":1143,"column":27}}},"77":{"name":"(anonymous_77)","line":1226,"loc":{"start":{"line":1226,"column":25},"end":{"line":1226,"column":36}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":11,"column":50}},"2":{"start":{"line":13,"column":0},"end":{"line":18,"column":41}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":34}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":30}},"5":{"start":{"line":22,"column":0},"end":{"line":22,"column":28}},"6":{"start":{"line":23,"column":0},"end":{"line":23,"column":30}},"7":{"start":{"line":24,"column":0},"end":{"line":24,"column":28}},"8":{"start":{"line":26,"column":0},"end":{"line":26,"column":12}},"9":{"start":{"line":62,"column":0},"end":{"line":137,"column":1}},"10":{"start":{"line":64,"column":2},"end":{"line":64,"column":26}},"11":{"start":{"line":66,"column":2},"end":{"line":91,"column":14}},"12":{"start":{"line":94,"column":2},"end":{"line":94,"column":18}},"13":{"start":{"line":96,"column":2},"end":{"line":96,"column":49}},"14":{"start":{"line":97,"column":2},"end":{"line":97,"column":26}},"15":{"start":{"line":99,"column":2},"end":{"line":103,"column":3}},"16":{"start":{"line":102,"column":6},"end":{"line":102,"column":56}},"17":{"start":{"line":106,"column":2},"end":{"line":106,"column":40}},"18":{"start":{"line":108,"column":2},"end":{"line":108,"column":28}},"19":{"start":{"line":110,"column":2},"end":{"line":110,"column":33}},"20":{"start":{"line":111,"column":2},"end":{"line":111,"column":29}},"21":{"start":{"line":112,"column":2},"end":{"line":112,"column":34}},"22":{"start":{"line":114,"column":2},"end":{"line":114,"column":25}},"23":{"start":{"line":116,"column":2},"end":{"line":116,"column":18}},"24":{"start":{"line":119,"column":2},"end":{"line":123,"column":3}},"25":{"start":{"line":126,"column":2},"end":{"line":126,"column":34}},"26":{"start":{"line":129,"column":2},"end":{"line":129,"column":30}},"27":{"start":{"line":130,"column":2},"end":{"line":130,"column":26}},"28":{"start":{"line":131,"column":2},"end":{"line":131,"column":40}},"29":{"start":{"line":132,"column":2},"end":{"line":132,"column":38}},"30":{"start":{"line":134,"column":2},"end":{"line":134,"column":39}},"31":{"start":{"line":136,"column":2},"end":{"line":136,"column":27}},"32":{"start":{"line":139,"column":0},"end":{"line":139,"column":29}},"33":{"start":{"line":141,"column":0},"end":{"line":144,"column":3}},"34":{"start":{"line":143,"column":20},"end":{"line":143,"column":45}},"35":{"start":{"line":146,"column":0},"end":{"line":149,"column":3}},"36":{"start":{"line":148,"column":20},"end":{"line":148,"column":58}},"37":{"start":{"line":151,"column":0},"end":{"line":154,"column":3}},"38":{"start":{"line":153,"column":20},"end":{"line":153,"column":54}},"39":{"start":{"line":156,"column":0},"end":{"line":173,"column":1}},"40":{"start":{"line":157,"column":2},"end":{"line":163,"column":3}},"41":{"start":{"line":166,"column":2},"end":{"line":166,"column":49}},"42":{"start":{"line":167,"column":2},"end":{"line":172,"column":3}},"43":{"start":{"line":168,"column":4},"end":{"line":168,"column":26}},"44":{"start":{"line":170,"column":4},"end":{"line":171,"column":53}},"45":{"start":{"line":175,"column":0},"end":{"line":190,"column":1}},"46":{"start":{"line":176,"column":2},"end":{"line":176,"column":44}},"47":{"start":{"line":176,"column":28},"end":{"line":176,"column":44}},"48":{"start":{"line":178,"column":2},"end":{"line":178,"column":26}},"49":{"start":{"line":179,"column":2},"end":{"line":179,"column":19}},"50":{"start":{"line":181,"column":2},"end":{"line":183,"column":3}},"51":{"start":{"line":182,"column":4},"end":{"line":182,"column":73}},"52":{"start":{"line":186,"column":2},"end":{"line":186,"column":47}},"53":{"start":{"line":189,"column":2},"end":{"line":189,"column":100}},"54":{"start":{"line":193,"column":0},"end":{"line":209,"column":1}},"55":{"start":{"line":194,"column":2},"end":{"line":208,"column":4}},"56":{"start":{"line":197,"column":4},"end":{"line":199,"column":5}},"57":{"start":{"line":198,"column":6},"end":{"line":198,"column":56}},"58":{"start":{"line":202,"column":4},"end":{"line":204,"column":7}},"59":{"start":{"line":207,"column":4},"end":{"line":207,"column":38}},"60":{"start":{"line":212,"column":0},"end":{"line":231,"column":1}},"61":{"start":{"line":214,"column":2},"end":{"line":227,"column":3}},"62":{"start":{"line":216,"column":4},"end":{"line":216,"column":42}},"63":{"start":{"line":216,"column":30},"end":{"line":216,"column":42}},"64":{"start":{"line":218,"column":4},"end":{"line":218,"column":55}},"65":{"start":{"line":221,"column":4},"end":{"line":226,"column":7}},"66":{"start":{"line":223,"column":6},"end":{"line":223,"column":29}},"67":{"start":{"line":223,"column":14},"end":{"line":223,"column":29}},"68":{"start":{"line":225,"column":6},"end":{"line":225,"column":67}},"69":{"start":{"line":230,"column":2},"end":{"line":230,"column":85}},"70":{"start":{"line":233,"column":0},"end":{"line":282,"column":1}},"71":{"start":{"line":234,"column":2},"end":{"line":281,"column":4}},"72":{"start":{"line":235,"column":4},"end":{"line":235,"column":44}},"73":{"start":{"line":235,"column":37},"end":{"line":235,"column":44}},"74":{"start":{"line":236,"column":4},"end":{"line":236,"column":39}},"75":{"start":{"line":238,"column":4},"end":{"line":238,"column":19}},"76":{"start":{"line":241,"column":4},"end":{"line":241,"column":33}},"77":{"start":{"line":244,"column":4},"end":{"line":248,"column":5}},"78":{"start":{"line":245,"column":6},"end":{"line":245,"column":44}},"79":{"start":{"line":247,"column":6},"end":{"line":247,"column":39}},"80":{"start":{"line":247,"column":22},"end":{"line":247,"column":39}},"81":{"start":{"line":251,"column":4},"end":{"line":263,"column":5}},"82":{"start":{"line":252,"column":6},"end":{"line":252,"column":78}},"83":{"start":{"line":256,"column":6},"end":{"line":262,"column":7}},"84":{"start":{"line":257,"column":8},"end":{"line":257,"column":45}},"85":{"start":{"line":259,"column":8},"end":{"line":259,"column":27}},"86":{"start":{"line":261,"column":8},"end":{"line":261,"column":40}},"87":{"start":{"line":266,"column":4},"end":{"line":275,"column":5}},"88":{"start":{"line":267,"column":6},"end":{"line":269,"column":7}},"89":{"start":{"line":268,"column":8},"end":{"line":268,"column":44}},"90":{"start":{"line":273,"column":6},"end":{"line":273,"column":49}},"91":{"start":{"line":274,"column":6},"end":{"line":274,"column":28}},"92":{"start":{"line":278,"column":4},"end":{"line":280,"column":5}},"93":{"start":{"line":279,"column":6},"end":{"line":279,"column":92}},"94":{"start":{"line":284,"column":0},"end":{"line":370,"column":1}},"95":{"start":{"line":285,"column":2},"end":{"line":369,"column":3}},"96":{"start":{"line":286,"column":4},"end":{"line":286,"column":40}},"97":{"start":{"line":287,"column":4},"end":{"line":287,"column":67}},"98":{"start":{"line":287,"column":60},"end":{"line":287,"column":67}},"99":{"start":{"line":290,"column":4},"end":{"line":293,"column":5}},"100":{"start":{"line":291,"column":6},"end":{"line":291,"column":30}},"101":{"start":{"line":292,"column":6},"end":{"line":292,"column":13}},"102":{"start":{"line":296,"column":4},"end":{"line":315,"column":5}},"103":{"start":{"line":297,"column":6},"end":{"line":314,"column":7}},"104":{"start":{"line":298,"column":8},"end":{"line":298,"column":48}},"105":{"start":{"line":298,"column":41},"end":{"line":298,"column":48}},"106":{"start":{"line":299,"column":8},"end":{"line":299,"column":43}},"107":{"start":{"line":301,"column":8},"end":{"line":301,"column":23}},"108":{"start":{"line":303,"column":8},"end":{"line":303,"column":48}},"109":{"start":{"line":305,"column":8},"end":{"line":313,"column":9}},"110":{"start":{"line":307,"column":10},"end":{"line":307,"column":25}},"111":{"start":{"line":309,"column":10},"end":{"line":310,"column":155}},"112":{"start":{"line":312,"column":10},"end":{"line":312,"column":96}},"113":{"start":{"line":318,"column":4},"end":{"line":356,"column":5}},"114":{"start":{"line":319,"column":6},"end":{"line":355,"column":7}},"115":{"start":{"line":321,"column":8},"end":{"line":321,"column":30}},"116":{"start":{"line":324,"column":8},"end":{"line":326,"column":9}},"117":{"start":{"line":325,"column":10},"end":{"line":325,"column":38}},"118":{"start":{"line":329,"column":8},"end":{"line":331,"column":11}},"119":{"start":{"line":330,"column":10},"end":{"line":330,"column":47}},"120":{"start":{"line":334,"column":8},"end":{"line":334,"column":32}},"121":{"start":{"line":337,"column":8},"end":{"line":337,"column":72}},"122":{"start":{"line":338,"column":8},"end":{"line":338,"column":72}},"123":{"start":{"line":339,"column":8},"end":{"line":339,"column":76}},"124":{"start":{"line":340,"column":8},"end":{"line":340,"column":82}},"125":{"start":{"line":343,"column":8},"end":{"line":354,"column":11}},"126":{"start":{"line":345,"column":10},"end":{"line":345,"column":57}},"127":{"start":{"line":347,"column":10},"end":{"line":347,"column":53}},"128":{"start":{"line":349,"column":10},"end":{"line":349,"column":42}},"129":{"start":{"line":351,"column":10},"end":{"line":351,"column":39}},"130":{"start":{"line":353,"column":10},"end":{"line":353,"column":27}},"131":{"start":{"line":359,"column":4},"end":{"line":359,"column":82}},"132":{"start":{"line":361,"column":4},"end":{"line":361,"column":83}},"133":{"start":{"line":362,"column":4},"end":{"line":362,"column":83}},"134":{"start":{"line":363,"column":4},"end":{"line":363,"column":87}},"135":{"start":{"line":364,"column":4},"end":{"line":364,"column":93}},"136":{"start":{"line":366,"column":4},"end":{"line":366,"column":66}},"137":{"start":{"line":368,"column":4},"end":{"line":368,"column":39}},"138":{"start":{"line":372,"column":0},"end":{"line":379,"column":1}},"139":{"start":{"line":373,"column":2},"end":{"line":373,"column":39}},"140":{"start":{"line":375,"column":2},"end":{"line":378,"column":3}},"141":{"start":{"line":376,"column":4},"end":{"line":376,"column":26}},"142":{"start":{"line":377,"column":4},"end":{"line":377,"column":24}},"143":{"start":{"line":381,"column":0},"end":{"line":500,"column":1}},"144":{"start":{"line":382,"column":2},"end":{"line":499,"column":3}},"145":{"start":{"line":384,"column":4},"end":{"line":384,"column":24}},"146":{"start":{"line":387,"column":4},"end":{"line":394,"column":5}},"147":{"start":{"line":388,"column":6},"end":{"line":393,"column":7}},"148":{"start":{"line":390,"column":8},"end":{"line":390,"column":43}},"149":{"start":{"line":392,"column":8},"end":{"line":392,"column":42}},"150":{"start":{"line":398,"column":4},"end":{"line":398,"column":41}},"151":{"start":{"line":402,"column":4},"end":{"line":404,"column":5}},"152":{"start":{"line":403,"column":6},"end":{"line":403,"column":38}},"153":{"start":{"line":407,"column":4},"end":{"line":410,"column":5}},"154":{"start":{"line":408,"column":6},"end":{"line":409,"column":78}},"155":{"start":{"line":413,"column":4},"end":{"line":455,"column":5}},"156":{"start":{"line":415,"column":6},"end":{"line":415,"column":66}},"157":{"start":{"line":416,"column":6},"end":{"line":416,"column":73}},"158":{"start":{"line":417,"column":6},"end":{"line":417,"column":44}},"159":{"start":{"line":423,"column":6},"end":{"line":428,"column":7}},"160":{"start":{"line":427,"column":8},"end":{"line":427,"column":37}},"161":{"start":{"line":431,"column":6},"end":{"line":436,"column":7}},"162":{"start":{"line":433,"column":8},"end":{"line":433,"column":92}},"163":{"start":{"line":435,"column":8},"end":{"line":435,"column":26}},"164":{"start":{"line":439,"column":6},"end":{"line":439,"column":47}},"165":{"start":{"line":441,"column":6},"end":{"line":454,"column":7}},"166":{"start":{"line":442,"column":8},"end":{"line":453,"column":11}},"167":{"start":{"line":443,"column":10},"end":{"line":443,"column":48}},"168":{"start":{"line":445,"column":10},"end":{"line":452,"column":11}},"169":{"start":{"line":447,"column":12},"end":{"line":447,"column":102}},"170":{"start":{"line":449,"column":12},"end":{"line":449,"column":96}},"171":{"start":{"line":451,"column":12},"end":{"line":451,"column":23}},"172":{"start":{"line":457,"column":4},"end":{"line":467,"column":5}},"173":{"start":{"line":459,"column":6},"end":{"line":463,"column":7}},"174":{"start":{"line":460,"column":8},"end":{"line":462,"column":11}},"175":{"start":{"line":461,"column":10},"end":{"line":461,"column":33}},"176":{"start":{"line":466,"column":6},"end":{"line":466,"column":22}},"177":{"start":{"line":469,"column":4},"end":{"line":498,"column":7}},"178":{"start":{"line":471,"column":6},"end":{"line":475,"column":7}},"179":{"start":{"line":472,"column":8},"end":{"line":474,"column":11}},"180":{"start":{"line":473,"column":10},"end":{"line":473,"column":27}},"181":{"start":{"line":478,"column":6},"end":{"line":497,"column":7}},"182":{"start":{"line":479,"column":8},"end":{"line":484,"column":9}},"183":{"start":{"line":481,"column":10},"end":{"line":481,"column":34}},"184":{"start":{"line":483,"column":10},"end":{"line":483,"column":84}},"185":{"start":{"line":487,"column":8},"end":{"line":490,"column":9}},"186":{"start":{"line":489,"column":10},"end":{"line":489,"column":101}},"187":{"start":{"line":493,"column":8},"end":{"line":493,"column":51}},"188":{"start":{"line":496,"column":8},"end":{"line":496,"column":151}},"189":{"start":{"line":507,"column":0},"end":{"line":511,"column":1}},"190":{"start":{"line":508,"column":2},"end":{"line":509,"column":35}},"191":{"start":{"line":518,"column":0},"end":{"line":522,"column":1}},"192":{"start":{"line":519,"column":2},"end":{"line":521,"column":40}},"193":{"start":{"line":529,"column":0},"end":{"line":531,"column":1}},"194":{"start":{"line":530,"column":2},"end":{"line":530,"column":34}},"195":{"start":{"line":538,"column":0},"end":{"line":560,"column":1}},"196":{"start":{"line":540,"column":2},"end":{"line":542,"column":3}},"197":{"start":{"line":541,"column":4},"end":{"line":541,"column":17}},"198":{"start":{"line":545,"column":2},"end":{"line":546,"column":35}},"199":{"start":{"line":549,"column":2},"end":{"line":551,"column":3}},"200":{"start":{"line":550,"column":4},"end":{"line":550,"column":49}},"201":{"start":{"line":550,"column":37},"end":{"line":550,"column":49}},"202":{"start":{"line":554,"column":2},"end":{"line":556,"column":3}},"203":{"start":{"line":555,"column":4},"end":{"line":555,"column":15}},"204":{"start":{"line":559,"column":2},"end":{"line":559,"column":15}},"205":{"start":{"line":567,"column":0},"end":{"line":569,"column":1}},"206":{"start":{"line":568,"column":2},"end":{"line":568,"column":61}},"207":{"start":{"line":576,"column":0},"end":{"line":578,"column":1}},"208":{"start":{"line":577,"column":2},"end":{"line":577,"column":36}},"209":{"start":{"line":584,"column":0},"end":{"line":665,"column":1}},"210":{"start":{"line":585,"column":2},"end":{"line":587,"column":3}},"211":{"start":{"line":586,"column":4},"end":{"line":586,"column":71}},"212":{"start":{"line":589,"column":2},"end":{"line":589,"column":18}},"213":{"start":{"line":591,"column":2},"end":{"line":591,"column":36}},"214":{"start":{"line":593,"column":2},"end":{"line":593,"column":54}},"215":{"start":{"line":595,"column":2},"end":{"line":595,"column":70}},"216":{"start":{"line":597,"column":2},"end":{"line":597,"column":46}},"217":{"start":{"line":599,"column":2},"end":{"line":649,"column":5}},"218":{"start":{"line":600,"column":4},"end":{"line":600,"column":82}},"219":{"start":{"line":600,"column":60},"end":{"line":600,"column":82}},"220":{"start":{"line":605,"column":4},"end":{"line":614,"column":5}},"221":{"start":{"line":607,"column":6},"end":{"line":607,"column":39}},"222":{"start":{"line":610,"column":6},"end":{"line":610,"column":95}},"223":{"start":{"line":613,"column":6},"end":{"line":613,"column":40}},"224":{"start":{"line":617,"column":4},"end":{"line":648,"column":7}},"225":{"start":{"line":618,"column":6},"end":{"line":618,"column":84}},"226":{"start":{"line":618,"column":62},"end":{"line":618,"column":84}},"227":{"start":{"line":621,"column":6},"end":{"line":626,"column":7}},"228":{"start":{"line":623,"column":8},"end":{"line":623,"column":23}},"229":{"start":{"line":625,"column":8},"end":{"line":625,"column":39}},"230":{"start":{"line":629,"column":6},"end":{"line":647,"column":9}},"231":{"start":{"line":630,"column":8},"end":{"line":630,"column":86}},"232":{"start":{"line":630,"column":64},"end":{"line":630,"column":86}},"233":{"start":{"line":633,"column":8},"end":{"line":638,"column":9}},"234":{"start":{"line":635,"column":10},"end":{"line":635,"column":25}},"235":{"start":{"line":637,"column":10},"end":{"line":637,"column":41}},"236":{"start":{"line":640,"column":8},"end":{"line":640,"column":41}},"237":{"start":{"line":643,"column":8},"end":{"line":643,"column":97}},"238":{"start":{"line":646,"column":8},"end":{"line":646,"column":35}},"239":{"start":{"line":652,"column":2},"end":{"line":652,"column":68}},"240":{"start":{"line":653,"column":2},"end":{"line":653,"column":68}},"241":{"start":{"line":654,"column":2},"end":{"line":654,"column":72}},"242":{"start":{"line":655,"column":2},"end":{"line":655,"column":78}},"243":{"start":{"line":657,"column":2},"end":{"line":664,"column":3}},"244":{"start":{"line":658,"column":4},"end":{"line":658,"column":25}},"245":{"start":{"line":661,"column":4},"end":{"line":663,"column":7}},"246":{"start":{"line":662,"column":6},"end":{"line":662,"column":30}},"247":{"start":{"line":675,"column":0},"end":{"line":753,"column":1}},"248":{"start":{"line":676,"column":2},"end":{"line":676,"column":18}},"249":{"start":{"line":677,"column":2},"end":{"line":677,"column":54}},"250":{"start":{"line":678,"column":2},"end":{"line":678,"column":28}},"251":{"start":{"line":681,"column":2},"end":{"line":683,"column":3}},"252":{"start":{"line":682,"column":4},"end":{"line":682,"column":74}},"253":{"start":{"line":686,"column":2},"end":{"line":686,"column":29}},"254":{"start":{"line":687,"column":2},"end":{"line":687,"column":54}},"255":{"start":{"line":690,"column":2},"end":{"line":732,"column":3}},"256":{"start":{"line":692,"column":4},"end":{"line":692,"column":44}},"257":{"start":{"line":694,"column":4},"end":{"line":694,"column":35}},"258":{"start":{"line":696,"column":4},"end":{"line":696,"column":46}},"259":{"start":{"line":697,"column":4},"end":{"line":697,"column":21}},"260":{"start":{"line":699,"column":4},"end":{"line":702,"column":5}},"261":{"start":{"line":700,"column":6},"end":{"line":700,"column":34}},"262":{"start":{"line":701,"column":6},"end":{"line":701,"column":28}},"263":{"start":{"line":705,"column":4},"end":{"line":731,"column":5}},"264":{"start":{"line":706,"column":6},"end":{"line":730,"column":9}},"265":{"start":{"line":707,"column":8},"end":{"line":707,"column":48}},"266":{"start":{"line":710,"column":8},"end":{"line":710,"column":28}},"267":{"start":{"line":710,"column":16},"end":{"line":710,"column":28}},"268":{"start":{"line":713,"column":8},"end":{"line":729,"column":9}},"269":{"start":{"line":715,"column":10},"end":{"line":715,"column":38}},"270":{"start":{"line":717,"column":10},"end":{"line":717,"column":84}},"271":{"start":{"line":719,"column":10},"end":{"line":727,"column":11}},"272":{"start":{"line":721,"column":12},"end":{"line":724,"column":13}},"273":{"start":{"line":722,"column":14},"end":{"line":723,"column":66}},"274":{"start":{"line":726,"column":12},"end":{"line":726,"column":29}},"275":{"start":{"line":728,"column":10},"end":{"line":728,"column":19}},"276":{"start":{"line":735,"column":2},"end":{"line":740,"column":3}},"277":{"start":{"line":736,"column":4},"end":{"line":736,"column":37}},"278":{"start":{"line":736,"column":25},"end":{"line":736,"column":37}},"279":{"start":{"line":737,"column":4},"end":{"line":739,"column":9}},"280":{"start":{"line":738,"column":6},"end":{"line":738,"column":30}},"281":{"start":{"line":743,"column":2},"end":{"line":752,"column":5}},"282":{"start":{"line":745,"column":4},"end":{"line":751,"column":7}},"283":{"start":{"line":748,"column":6},"end":{"line":748,"column":34}},"284":{"start":{"line":750,"column":6},"end":{"line":750,"column":20}},"285":{"start":{"line":761,"column":0},"end":{"line":794,"column":1}},"286":{"start":{"line":762,"column":2},"end":{"line":762,"column":18}},"287":{"start":{"line":763,"column":2},"end":{"line":765,"column":3}},"288":{"start":{"line":764,"column":4},"end":{"line":764,"column":79}},"289":{"start":{"line":767,"column":2},"end":{"line":769,"column":3}},"290":{"start":{"line":768,"column":4},"end":{"line":768,"column":62}},"291":{"start":{"line":772,"column":2},"end":{"line":772,"column":25}},"292":{"start":{"line":775,"column":2},"end":{"line":775,"column":76}},"293":{"start":{"line":776,"column":2},"end":{"line":776,"column":33}},"294":{"start":{"line":778,"column":2},"end":{"line":778,"column":19}},"295":{"start":{"line":781,"column":2},"end":{"line":793,"column":3}},"296":{"start":{"line":782,"column":4},"end":{"line":792,"column":7}},"297":{"start":{"line":785,"column":6},"end":{"line":785,"column":24}},"298":{"start":{"line":786,"column":6},"end":{"line":786,"column":26}},"299":{"start":{"line":786,"column":14},"end":{"line":786,"column":26}},"300":{"start":{"line":788,"column":6},"end":{"line":791,"column":7}},"301":{"start":{"line":789,"column":8},"end":{"line":789,"column":32}},"302":{"start":{"line":790,"column":8},"end":{"line":790,"column":24}},"303":{"start":{"line":800,"column":0},"end":{"line":808,"column":1}},"304":{"start":{"line":802,"column":2},"end":{"line":804,"column":40}},"305":{"start":{"line":805,"column":2},"end":{"line":807,"column":5}},"306":{"start":{"line":806,"column":4},"end":{"line":806,"column":14}},"307":{"start":{"line":811,"column":0},"end":{"line":811,"column":68}},"308":{"start":{"line":814,"column":0},"end":{"line":833,"column":1}},"309":{"start":{"line":816,"column":2},"end":{"line":823,"column":5}},"310":{"start":{"line":818,"column":4},"end":{"line":820,"column":5}},"311":{"start":{"line":819,"column":6},"end":{"line":819,"column":38}},"312":{"start":{"line":822,"column":4},"end":{"line":822,"column":16}},"313":{"start":{"line":826,"column":2},"end":{"line":826,"column":29}},"314":{"start":{"line":827,"column":2},"end":{"line":827,"column":33}},"315":{"start":{"line":828,"column":2},"end":{"line":828,"column":40}},"316":{"start":{"line":829,"column":2},"end":{"line":829,"column":34}},"317":{"start":{"line":832,"column":2},"end":{"line":832,"column":35}},"318":{"start":{"line":839,"column":0},"end":{"line":900,"column":1}},"319":{"start":{"line":840,"column":2},"end":{"line":840,"column":18}},"320":{"start":{"line":842,"column":2},"end":{"line":842,"column":65}},"321":{"start":{"line":842,"column":58},"end":{"line":842,"column":65}},"322":{"start":{"line":844,"column":2},"end":{"line":844,"column":36}},"323":{"start":{"line":847,"column":2},"end":{"line":854,"column":3}},"324":{"start":{"line":849,"column":4},"end":{"line":852,"column":42}},"325":{"start":{"line":853,"column":4},"end":{"line":853,"column":38}},"326":{"start":{"line":857,"column":2},"end":{"line":859,"column":3}},"327":{"start":{"line":858,"column":4},"end":{"line":858,"column":35}},"328":{"start":{"line":863,"column":2},"end":{"line":865,"column":3}},"329":{"start":{"line":864,"column":4},"end":{"line":864,"column":39}},"330":{"start":{"line":868,"column":2},"end":{"line":896,"column":3}},"331":{"start":{"line":869,"column":4},"end":{"line":869,"column":42}},"332":{"start":{"line":871,"column":4},"end":{"line":895,"column":5}},"333":{"start":{"line":873,"column":6},"end":{"line":876,"column":44}},"334":{"start":{"line":879,"column":6},"end":{"line":885,"column":7}},"335":{"start":{"line":882,"column":8},"end":{"line":884,"column":9}},"336":{"start":{"line":883,"column":10},"end":{"line":883,"column":44}},"337":{"start":{"line":887,"column":6},"end":{"line":887,"column":33}},"338":{"start":{"line":892,"column":6},"end":{"line":892,"column":23}},"339":{"start":{"line":894,"column":6},"end":{"line":894,"column":33}},"340":{"start":{"line":899,"column":2},"end":{"line":899,"column":16}},"341":{"start":{"line":907,"column":0},"end":{"line":1010,"column":1}},"342":{"start":{"line":908,"column":2},"end":{"line":908,"column":18}},"343":{"start":{"line":910,"column":2},"end":{"line":912,"column":3}},"344":{"start":{"line":911,"column":4},"end":{"line":911,"column":17}},"345":{"start":{"line":915,"column":2},"end":{"line":915,"column":26}},"346":{"start":{"line":918,"column":2},"end":{"line":931,"column":3}},"347":{"start":{"line":920,"column":4},"end":{"line":928,"column":5}},"348":{"start":{"line":921,"column":6},"end":{"line":927,"column":7}},"349":{"start":{"line":922,"column":8},"end":{"line":922,"column":45}},"350":{"start":{"line":924,"column":8},"end":{"line":926,"column":11}},"351":{"start":{"line":925,"column":10},"end":{"line":925,"column":20}},"352":{"start":{"line":930,"column":4},"end":{"line":930,"column":11}},"353":{"start":{"line":933,"column":2},"end":{"line":945,"column":3}},"354":{"start":{"line":936,"column":4},"end":{"line":936,"column":19}},"355":{"start":{"line":937,"column":4},"end":{"line":944,"column":7}},"356":{"start":{"line":939,"column":6},"end":{"line":939,"column":45}},"357":{"start":{"line":939,"column":46},"end":{"line":939,"column":115}},"358":{"start":{"line":939,"column":90},"end":{"line":939,"column":113}},"359":{"start":{"line":941,"column":6},"end":{"line":943,"column":9}},"360":{"start":{"line":942,"column":8},"end":{"line":942,"column":32}},"361":{"start":{"line":948,"column":2},"end":{"line":950,"column":4}},"362":{"start":{"line":952,"column":2},"end":{"line":952,"column":19}},"363":{"start":{"line":954,"column":2},"end":{"line":966,"column":3}},"364":{"start":{"line":955,"column":4},"end":{"line":955,"column":16}},"365":{"start":{"line":957,"column":4},"end":{"line":959,"column":5}},"366":{"start":{"line":958,"column":6},"end":{"line":958,"column":39}},"367":{"start":{"line":962,"column":4},"end":{"line":962,"column":66}},"368":{"start":{"line":964,"column":4},"end":{"line":964,"column":45}},"369":{"start":{"line":965,"column":4},"end":{"line":965,"column":30}},"370":{"start":{"line":969,"column":2},"end":{"line":969,"column":28}},"371":{"start":{"line":972,"column":2},"end":{"line":972,"column":98}},"372":{"start":{"line":973,"column":2},"end":{"line":973,"column":101}},"373":{"start":{"line":974,"column":2},"end":{"line":974,"column":105}},"374":{"start":{"line":975,"column":2},"end":{"line":975,"column":72}},"375":{"start":{"line":976,"column":2},"end":{"line":976,"column":111}},"376":{"start":{"line":977,"column":2},"end":{"line":977,"column":62}},"377":{"start":{"line":978,"column":2},"end":{"line":978,"column":84}},"378":{"start":{"line":979,"column":2},"end":{"line":979,"column":93}},"379":{"start":{"line":980,"column":2},"end":{"line":980,"column":93}},"380":{"start":{"line":984,"column":2},"end":{"line":984,"column":50}},"381":{"start":{"line":985,"column":2},"end":{"line":985,"column":44}},"382":{"start":{"line":987,"column":2},"end":{"line":989,"column":3}},"383":{"start":{"line":988,"column":4},"end":{"line":988,"column":52}},"384":{"start":{"line":992,"column":2},"end":{"line":994,"column":3}},"385":{"start":{"line":993,"column":4},"end":{"line":993,"column":65}},"386":{"start":{"line":998,"column":2},"end":{"line":1002,"column":3}},"387":{"start":{"line":999,"column":4},"end":{"line":999,"column":34}},"388":{"start":{"line":1001,"column":4},"end":{"line":1001,"column":31}},"389":{"start":{"line":1005,"column":2},"end":{"line":1009,"column":3}},"390":{"start":{"line":1006,"column":4},"end":{"line":1008,"column":7}},"391":{"start":{"line":1007,"column":6},"end":{"line":1007,"column":23}},"392":{"start":{"line":1013,"column":0},"end":{"line":1020,"column":1}},"393":{"start":{"line":1014,"column":2},"end":{"line":1019,"column":3}},"394":{"start":{"line":1015,"column":4},"end":{"line":1018,"column":5}},"395":{"start":{"line":1016,"column":6},"end":{"line":1016,"column":31}},"396":{"start":{"line":1017,"column":6},"end":{"line":1017,"column":18}},"397":{"start":{"line":1022,"column":0},"end":{"line":1027,"column":1}},"398":{"start":{"line":1023,"column":2},"end":{"line":1023,"column":59}},"399":{"start":{"line":1023,"column":52},"end":{"line":1023,"column":59}},"400":{"start":{"line":1024,"column":2},"end":{"line":1024,"column":55}},"401":{"start":{"line":1024,"column":48},"end":{"line":1024,"column":55}},"402":{"start":{"line":1025,"column":2},"end":{"line":1025,"column":60}},"403":{"start":{"line":1025,"column":53},"end":{"line":1025,"column":60}},"404":{"start":{"line":1026,"column":2},"end":{"line":1026,"column":66}},"405":{"start":{"line":1026,"column":59},"end":{"line":1026,"column":66}},"406":{"start":{"line":1030,"column":0},"end":{"line":1030,"column":81}},"407":{"start":{"line":1032,"column":0},"end":{"line":1113,"column":1}},"408":{"start":{"line":1033,"column":2},"end":{"line":1035,"column":3}},"409":{"start":{"line":1034,"column":4},"end":{"line":1034,"column":11}},"410":{"start":{"line":1036,"column":2},"end":{"line":1036,"column":70}},"411":{"start":{"line":1039,"column":2},"end":{"line":1039,"column":46}},"412":{"start":{"line":1042,"column":2},"end":{"line":1053,"column":3}},"413":{"start":{"line":1043,"column":4},"end":{"line":1052,"column":5}},"414":{"start":{"line":1045,"column":6},"end":{"line":1045,"column":28}},"415":{"start":{"line":1047,"column":6},"end":{"line":1047,"column":42}},"416":{"start":{"line":1049,"column":6},"end":{"line":1051,"column":7}},"417":{"start":{"line":1050,"column":8},"end":{"line":1050,"column":94}},"418":{"start":{"line":1056,"column":2},"end":{"line":1102,"column":3}},"419":{"start":{"line":1057,"column":4},"end":{"line":1101,"column":5}},"420":{"start":{"line":1059,"column":6},"end":{"line":1063,"column":7}},"421":{"start":{"line":1061,"column":8},"end":{"line":1061,"column":44}},"422":{"start":{"line":1062,"column":8},"end":{"line":1062,"column":37}},"423":{"start":{"line":1066,"column":6},"end":{"line":1068,"column":9}},"424":{"start":{"line":1067,"column":8},"end":{"line":1067,"column":42}},"425":{"start":{"line":1071,"column":6},"end":{"line":1071,"column":73}},"426":{"start":{"line":1072,"column":6},"end":{"line":1072,"column":73}},"427":{"start":{"line":1073,"column":6},"end":{"line":1073,"column":77}},"428":{"start":{"line":1074,"column":6},"end":{"line":1074,"column":83}},"429":{"start":{"line":1077,"column":6},"end":{"line":1100,"column":9}},"430":{"start":{"line":1078,"column":8},"end":{"line":1080,"column":9}},"431":{"start":{"line":1079,"column":10},"end":{"line":1079,"column":39}},"432":{"start":{"line":1082,"column":8},"end":{"line":1082,"column":44}},"433":{"start":{"line":1085,"column":8},"end":{"line":1087,"column":9}},"434":{"start":{"line":1086,"column":10},"end":{"line":1086,"column":39}},"435":{"start":{"line":1092,"column":8},"end":{"line":1099,"column":9}},"436":{"start":{"line":1093,"column":10},"end":{"line":1093,"column":61}},"437":{"start":{"line":1096,"column":10},"end":{"line":1096,"column":54}},"438":{"start":{"line":1098,"column":10},"end":{"line":1098,"column":27}},"439":{"start":{"line":1105,"column":2},"end":{"line":1105,"column":57}},"440":{"start":{"line":1106,"column":2},"end":{"line":1106,"column":57}},"441":{"start":{"line":1107,"column":2},"end":{"line":1107,"column":59}},"442":{"start":{"line":1108,"column":2},"end":{"line":1108,"column":62}},"443":{"start":{"line":1109,"column":2},"end":{"line":1109,"column":61}},"444":{"start":{"line":1112,"column":2},"end":{"line":1112,"column":23}},"445":{"start":{"line":1115,"column":0},"end":{"line":1123,"column":1}},"446":{"start":{"line":1116,"column":2},"end":{"line":1122,"column":3}},"447":{"start":{"line":1117,"column":4},"end":{"line":1121,"column":5}},"448":{"start":{"line":1118,"column":6},"end":{"line":1118,"column":30}},"449":{"start":{"line":1119,"column":6},"end":{"line":1119,"column":25}},"450":{"start":{"line":1120,"column":6},"end":{"line":1120,"column":102}},"451":{"start":{"line":1125,"column":0},"end":{"line":1294,"column":1}},"452":{"start":{"line":1126,"column":2},"end":{"line":1293,"column":3}},"453":{"start":{"line":1127,"column":4},"end":{"line":1127,"column":39}},"454":{"start":{"line":1127,"column":32},"end":{"line":1127,"column":39}},"455":{"start":{"line":1129,"column":4},"end":{"line":1129,"column":30}},"456":{"start":{"line":1129,"column":23},"end":{"line":1129,"column":30}},"457":{"start":{"line":1131,"column":4},"end":{"line":1131,"column":26}},"458":{"start":{"line":1134,"column":4},"end":{"line":1140,"column":5}},"459":{"start":{"line":1135,"column":6},"end":{"line":1135,"column":43}},"460":{"start":{"line":1135,"column":31},"end":{"line":1135,"column":43}},"461":{"start":{"line":1137,"column":6},"end":{"line":1139,"column":12}},"462":{"start":{"line":1138,"column":8},"end":{"line":1138,"column":24}},"463":{"start":{"line":1143,"column":4},"end":{"line":1290,"column":7}},"464":{"start":{"line":1147,"column":6},"end":{"line":1149,"column":7}},"465":{"start":{"line":1148,"column":8},"end":{"line":1148,"column":15}},"466":{"start":{"line":1152,"column":6},"end":{"line":1289,"column":7}},"467":{"start":{"line":1154,"column":8},"end":{"line":1156,"column":41}},"468":{"start":{"line":1159,"column":8},"end":{"line":1163,"column":9}},"469":{"start":{"line":1161,"column":10},"end":{"line":1161,"column":48}},"470":{"start":{"line":1162,"column":10},"end":{"line":1162,"column":16}},"471":{"start":{"line":1166,"column":8},"end":{"line":1168,"column":9}},"472":{"start":{"line":1167,"column":10},"end":{"line":1167,"column":16}},"473":{"start":{"line":1171,"column":8},"end":{"line":1171,"column":30}},"474":{"start":{"line":1174,"column":8},"end":{"line":1174,"column":29}},"475":{"start":{"line":1176,"column":8},"end":{"line":1180,"column":9}},"476":{"start":{"line":1177,"column":10},"end":{"line":1179,"column":11}},"477":{"start":{"line":1178,"column":12},"end":{"line":1178,"column":59}},"478":{"start":{"line":1183,"column":8},"end":{"line":1187,"column":9}},"479":{"start":{"line":1184,"column":10},"end":{"line":1184,"column":108}},"480":{"start":{"line":1186,"column":10},"end":{"line":1186,"column":80}},"481":{"start":{"line":1190,"column":8},"end":{"line":1288,"column":9}},"482":{"start":{"line":1192,"column":10},"end":{"line":1192,"column":44}},"483":{"start":{"line":1197,"column":10},"end":{"line":1232,"column":11}},"484":{"start":{"line":1198,"column":12},"end":{"line":1198,"column":45}},"485":{"start":{"line":1200,"column":12},"end":{"line":1210,"column":13}},"486":{"start":{"line":1204,"column":14},"end":{"line":1209,"column":17}},"487":{"start":{"line":1206,"column":18},"end":{"line":1206,"column":46}},"488":{"start":{"line":1207,"column":18},"end":{"line":1207,"column":60}},"489":{"start":{"line":1208,"column":18},"end":{"line":1208,"column":24}},"490":{"start":{"line":1214,"column":12},"end":{"line":1231,"column":13}},"491":{"start":{"line":1216,"column":14},"end":{"line":1216,"column":43}},"492":{"start":{"line":1219,"column":14},"end":{"line":1223,"column":15}},"493":{"start":{"line":1222,"column":16},"end":{"line":1222,"column":40}},"494":{"start":{"line":1226,"column":14},"end":{"line":1228,"column":21}},"495":{"start":{"line":1227,"column":16},"end":{"line":1227,"column":33}},"496":{"start":{"line":1230,"column":14},"end":{"line":1230,"column":20}},"497":{"start":{"line":1235,"column":10},"end":{"line":1246,"column":11}},"498":{"start":{"line":1238,"column":12},"end":{"line":1245,"column":13}},"499":{"start":{"line":1240,"column":14},"end":{"line":1240,"column":43}},"500":{"start":{"line":1242,"column":14},"end":{"line":1242,"column":38}},"501":{"start":{"line":1244,"column":14},"end":{"line":1244,"column":20}},"502":{"start":{"line":1249,"column":10},"end":{"line":1249,"column":39}},"503":{"start":{"line":1252,"column":10},"end":{"line":1252,"column":56}},"504":{"start":{"line":1253,"column":10},"end":{"line":1253,"column":74}},"505":{"start":{"line":1256,"column":10},"end":{"line":1258,"column":11}},"506":{"start":{"line":1257,"column":12},"end":{"line":1257,"column":96}},"507":{"start":{"line":1262,"column":10},"end":{"line":1264,"column":11}},"508":{"start":{"line":1263,"column":12},"end":{"line":1263,"column":48}},"509":{"start":{"line":1267,"column":10},"end":{"line":1269,"column":11}},"510":{"start":{"line":1268,"column":12},"end":{"line":1268,"column":64}},"511":{"start":{"line":1272,"column":10},"end":{"line":1278,"column":11}},"512":{"start":{"line":1273,"column":12},"end":{"line":1275,"column":13}},"513":{"start":{"line":1274,"column":14},"end":{"line":1274,"column":41}},"514":{"start":{"line":1277,"column":12},"end":{"line":1277,"column":37}},"515":{"start":{"line":1280,"column":10},"end":{"line":1282,"column":11}},"516":{"start":{"line":1281,"column":12},"end":{"line":1281,"column":62}},"517":{"start":{"line":1285,"column":10},"end":{"line":1285,"column":45}},"518":{"start":{"line":1287,"column":10},"end":{"line":1287,"column":48}},"519":{"start":{"line":1292,"column":4},"end":{"line":1292,"column":27}},"520":{"start":{"line":1297,"column":0},"end":{"line":1297,"column":25}},"521":{"start":{"line":1355,"column":0},"end":{"line":1355,"column":22}}},"branchMap":{"1":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":2},"end":{"line":99,"column":2}},{"start":{"line":99,"column":2},"end":{"line":99,"column":2}}]},"2":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":5},"end":{"line":99,"column":18}},{"start":{"line":99,"column":23},"end":{"line":99,"column":35}},{"start":{"line":100,"column":8},"end":{"line":100,"column":51}},{"start":{"line":101,"column":7},"end":{"line":101,"column":52}}]},"3":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":23},"end":{"line":119,"column":44}},{"start":{"line":119,"column":48},"end":{"line":123,"column":3}}]},"4":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":2},"end":{"line":167,"column":2}},{"start":{"line":167,"column":2},"end":{"line":167,"column":2}}]},"5":{"line":167,"type":"binary-expr","locations":[{"start":{"line":167,"column":5},"end":{"line":167,"column":16}},{"start":{"line":167,"column":20},"end":{"line":167,"column":55}}]},"6":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":2},"end":{"line":176,"column":2}},{"start":{"line":176,"column":2},"end":{"line":176,"column":2}}]},"7":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":2},"end":{"line":181,"column":2}},{"start":{"line":181,"column":2},"end":{"line":181,"column":2}}]},"8":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":4},"end":{"line":197,"column":4}},{"start":{"line":197,"column":4},"end":{"line":197,"column":4}}]},"9":{"line":197,"type":"binary-expr","locations":[{"start":{"line":197,"column":7},"end":{"line":197,"column":30}},{"start":{"line":197,"column":34},"end":{"line":197,"column":58}}]},"10":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":216,"column":4}},{"start":{"line":216,"column":4},"end":{"line":216,"column":4}}]},"11":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":6},"end":{"line":223,"column":6}},{"start":{"line":223,"column":6},"end":{"line":223,"column":6}}]},"12":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":4},"end":{"line":235,"column":4}},{"start":{"line":235,"column":4},"end":{"line":235,"column":4}}]},"13":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":6},"end":{"line":247,"column":6}},{"start":{"line":247,"column":6},"end":{"line":247,"column":6}}]},"14":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":4},"end":{"line":251,"column":4}},{"start":{"line":251,"column":4},"end":{"line":251,"column":4}}]},"15":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":6},"end":{"line":256,"column":6}},{"start":{"line":256,"column":6},"end":{"line":256,"column":6}}]},"16":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":4},"end":{"line":266,"column":4}},{"start":{"line":266,"column":4},"end":{"line":266,"column":4}}]},"17":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":6},"end":{"line":267,"column":6}},{"start":{"line":267,"column":6},"end":{"line":267,"column":6}}]},"18":{"line":267,"type":"binary-expr","locations":[{"start":{"line":267,"column":9},"end":{"line":267,"column":32}},{"start":{"line":267,"column":36},"end":{"line":267,"column":60}}]},"19":{"line":273,"type":"cond-expr","locations":[{"start":{"line":273,"column":33},"end":{"line":273,"column":40}},{"start":{"line":273,"column":43},"end":{"line":273,"column":48}}]},"20":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":4},"end":{"line":278,"column":4}},{"start":{"line":278,"column":4},"end":{"line":278,"column":4}}]},"21":{"line":278,"type":"binary-expr","locations":[{"start":{"line":278,"column":7},"end":{"line":278,"column":24}},{"start":{"line":278,"column":28},"end":{"line":278,"column":50}}]},"22":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":4},"end":{"line":287,"column":4}},{"start":{"line":287,"column":4},"end":{"line":287,"column":4}}]},"23":{"line":287,"type":"binary-expr","locations":[{"start":{"line":287,"column":7},"end":{"line":287,"column":30}},{"start":{"line":287,"column":34},"end":{"line":287,"column":58}}]},"24":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":4},"end":{"line":290,"column":4}},{"start":{"line":290,"column":4},"end":{"line":290,"column":4}}]},"25":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":8},"end":{"line":298,"column":8}},{"start":{"line":298,"column":8},"end":{"line":298,"column":8}}]},"26":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8}},{"start":{"line":305,"column":8},"end":{"line":305,"column":8}}]},"27":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":8},"end":{"line":324,"column":8}},{"start":{"line":324,"column":8},"end":{"line":324,"column":8}}]},"28":{"line":324,"type":"binary-expr","locations":[{"start":{"line":324,"column":11},"end":{"line":324,"column":34}},{"start":{"line":324,"column":38},"end":{"line":324,"column":62}}]},"29":{"line":375,"type":"if","locations":[{"start":{"line":375,"column":2},"end":{"line":375,"column":2}},{"start":{"line":375,"column":2},"end":{"line":375,"column":2}}]},"30":{"line":388,"type":"if","locations":[{"start":{"line":388,"column":6},"end":{"line":388,"column":6}},{"start":{"line":388,"column":6},"end":{"line":388,"column":6}}]},"31":{"line":402,"type":"if","locations":[{"start":{"line":402,"column":4},"end":{"line":402,"column":4}},{"start":{"line":402,"column":4},"end":{"line":402,"column":4}}]},"32":{"line":407,"type":"if","locations":[{"start":{"line":407,"column":4},"end":{"line":407,"column":4}},{"start":{"line":407,"column":4},"end":{"line":407,"column":4}}]},"33":{"line":423,"type":"if","locations":[{"start":{"line":423,"column":6},"end":{"line":423,"column":6}},{"start":{"line":423,"column":6},"end":{"line":423,"column":6}}]},"34":{"line":423,"type":"binary-expr","locations":[{"start":{"line":423,"column":9},"end":{"line":423,"column":41}},{"start":{"line":423,"column":46},"end":{"line":423,"column":92}},{"start":{"line":424,"column":12},"end":{"line":424,"column":78}},{"start":{"line":425,"column":15},"end":{"line":425,"column":94}}]},"35":{"line":431,"type":"if","locations":[{"start":{"line":431,"column":6},"end":{"line":431,"column":6}},{"start":{"line":431,"column":6},"end":{"line":431,"column":6}}]},"36":{"line":445,"type":"if","locations":[{"start":{"line":445,"column":10},"end":{"line":445,"column":10}},{"start":{"line":445,"column":10},"end":{"line":445,"column":10}}]},"37":{"line":459,"type":"if","locations":[{"start":{"line":459,"column":6},"end":{"line":459,"column":6}},{"start":{"line":459,"column":6},"end":{"line":459,"column":6}}]},"38":{"line":471,"type":"if","locations":[{"start":{"line":471,"column":6},"end":{"line":471,"column":6}},{"start":{"line":471,"column":6},"end":{"line":471,"column":6}}]},"39":{"line":478,"type":"if","locations":[{"start":{"line":478,"column":6},"end":{"line":478,"column":6}},{"start":{"line":478,"column":6},"end":{"line":478,"column":6}}]},"40":{"line":487,"type":"if","locations":[{"start":{"line":487,"column":8},"end":{"line":487,"column":8}},{"start":{"line":487,"column":8},"end":{"line":487,"column":8}}]},"41":{"line":487,"type":"binary-expr","locations":[{"start":{"line":487,"column":11},"end":{"line":487,"column":27}},{"start":{"line":487,"column":31},"end":{"line":487,"column":51}},{"start":{"line":487,"column":56},"end":{"line":487,"column":84}},{"start":{"line":487,"column":88},"end":{"line":487,"column":116}},{"start":{"line":488,"column":11},"end":{"line":488,"column":41}},{"start":{"line":488,"column":45},"end":{"line":488,"column":73}}]},"42":{"line":496,"type":"cond-expr","locations":[{"start":{"line":496,"column":97},"end":{"line":496,"column":104}},{"start":{"line":496,"column":107},"end":{"line":496,"column":127}}]},"43":{"line":540,"type":"if","locations":[{"start":{"line":540,"column":2},"end":{"line":540,"column":2}},{"start":{"line":540,"column":2},"end":{"line":540,"column":2}}]},"44":{"line":540,"type":"binary-expr","locations":[{"start":{"line":540,"column":5},"end":{"line":540,"column":28}},{"start":{"line":540,"column":32},"end":{"line":540,"column":56}}]},"45":{"line":550,"type":"if","locations":[{"start":{"line":550,"column":4},"end":{"line":550,"column":4}},{"start":{"line":550,"column":4},"end":{"line":550,"column":4}}]},"46":{"line":554,"type":"if","locations":[{"start":{"line":554,"column":2},"end":{"line":554,"column":2}},{"start":{"line":554,"column":2},"end":{"line":554,"column":2}}]},"47":{"line":554,"type":"binary-expr","locations":[{"start":{"line":554,"column":5},"end":{"line":554,"column":28}},{"start":{"line":554,"column":32},"end":{"line":554,"column":51}}]},"48":{"line":568,"type":"binary-expr","locations":[{"start":{"line":568,"column":9},"end":{"line":568,"column":32}},{"start":{"line":568,"column":36},"end":{"line":568,"column":60}}]},"49":{"line":585,"type":"if","locations":[{"start":{"line":585,"column":2},"end":{"line":585,"column":2}},{"start":{"line":585,"column":2},"end":{"line":585,"column":2}}]},"50":{"line":600,"type":"if","locations":[{"start":{"line":600,"column":4},"end":{"line":600,"column":4}},{"start":{"line":600,"column":4},"end":{"line":600,"column":4}}]},"51":{"line":600,"type":"binary-expr","locations":[{"start":{"line":600,"column":7},"end":{"line":600,"column":30}},{"start":{"line":600,"column":34},"end":{"line":600,"column":58}}]},"52":{"line":605,"type":"if","locations":[{"start":{"line":605,"column":4},"end":{"line":605,"column":4}},{"start":{"line":605,"column":4},"end":{"line":605,"column":4}}]},"53":{"line":618,"type":"if","locations":[{"start":{"line":618,"column":6},"end":{"line":618,"column":6}},{"start":{"line":618,"column":6},"end":{"line":618,"column":6}}]},"54":{"line":618,"type":"binary-expr","locations":[{"start":{"line":618,"column":9},"end":{"line":618,"column":32}},{"start":{"line":618,"column":36},"end":{"line":618,"column":60}}]},"55":{"line":621,"type":"if","locations":[{"start":{"line":621,"column":6},"end":{"line":621,"column":6}},{"start":{"line":621,"column":6},"end":{"line":621,"column":6}}]},"56":{"line":630,"type":"if","locations":[{"start":{"line":630,"column":8},"end":{"line":630,"column":8}},{"start":{"line":630,"column":8},"end":{"line":630,"column":8}}]},"57":{"line":630,"type":"binary-expr","locations":[{"start":{"line":630,"column":11},"end":{"line":630,"column":34}},{"start":{"line":630,"column":38},"end":{"line":630,"column":62}}]},"58":{"line":633,"type":"if","locations":[{"start":{"line":633,"column":8},"end":{"line":633,"column":8}},{"start":{"line":633,"column":8},"end":{"line":633,"column":8}}]},"59":{"line":681,"type":"if","locations":[{"start":{"line":681,"column":2},"end":{"line":681,"column":2}},{"start":{"line":681,"column":2},"end":{"line":681,"column":2}}]},"60":{"line":681,"type":"binary-expr","locations":[{"start":{"line":681,"column":5},"end":{"line":681,"column":42}},{"start":{"line":681,"column":46},"end":{"line":681,"column":68}}]},"61":{"line":699,"type":"if","locations":[{"start":{"line":699,"column":4},"end":{"line":699,"column":4}},{"start":{"line":699,"column":4},"end":{"line":699,"column":4}}]},"62":{"line":710,"type":"if","locations":[{"start":{"line":710,"column":8},"end":{"line":710,"column":8}},{"start":{"line":710,"column":8},"end":{"line":710,"column":8}}]},"63":{"line":713,"type":"if","locations":[{"start":{"line":713,"column":8},"end":{"line":713,"column":8}},{"start":{"line":713,"column":8},"end":{"line":713,"column":8}}]},"64":{"line":719,"type":"if","locations":[{"start":{"line":719,"column":10},"end":{"line":719,"column":10}},{"start":{"line":719,"column":10},"end":{"line":719,"column":10}}]},"65":{"line":721,"type":"if","locations":[{"start":{"line":721,"column":12},"end":{"line":721,"column":12}},{"start":{"line":721,"column":12},"end":{"line":721,"column":12}}]},"66":{"line":736,"type":"if","locations":[{"start":{"line":736,"column":4},"end":{"line":736,"column":4}},{"start":{"line":736,"column":4},"end":{"line":736,"column":4}}]},"67":{"line":763,"type":"if","locations":[{"start":{"line":763,"column":2},"end":{"line":763,"column":2}},{"start":{"line":763,"column":2},"end":{"line":763,"column":2}}]},"68":{"line":767,"type":"if","locations":[{"start":{"line":767,"column":2},"end":{"line":767,"column":2}},{"start":{"line":767,"column":2},"end":{"line":767,"column":2}}]},"69":{"line":786,"type":"if","locations":[{"start":{"line":786,"column":6},"end":{"line":786,"column":6}},{"start":{"line":786,"column":6},"end":{"line":786,"column":6}}]},"70":{"line":788,"type":"if","locations":[{"start":{"line":788,"column":6},"end":{"line":788,"column":6}},{"start":{"line":788,"column":6},"end":{"line":788,"column":6}}]},"71":{"line":842,"type":"if","locations":[{"start":{"line":842,"column":2},"end":{"line":842,"column":2}},{"start":{"line":842,"column":2},"end":{"line":842,"column":2}}]},"72":{"line":842,"type":"binary-expr","locations":[{"start":{"line":842,"column":5},"end":{"line":842,"column":28}},{"start":{"line":842,"column":32},"end":{"line":842,"column":56}}]},"73":{"line":847,"type":"if","locations":[{"start":{"line":847,"column":2},"end":{"line":847,"column":2}},{"start":{"line":847,"column":2},"end":{"line":847,"column":2}}]},"74":{"line":857,"type":"if","locations":[{"start":{"line":857,"column":2},"end":{"line":857,"column":2}},{"start":{"line":857,"column":2},"end":{"line":857,"column":2}}]},"75":{"line":863,"type":"if","locations":[{"start":{"line":863,"column":2},"end":{"line":863,"column":2}},{"start":{"line":863,"column":2},"end":{"line":863,"column":2}}]},"76":{"line":871,"type":"if","locations":[{"start":{"line":871,"column":4},"end":{"line":871,"column":4}},{"start":{"line":871,"column":4},"end":{"line":871,"column":4}}]},"77":{"line":882,"type":"if","locations":[{"start":{"line":882,"column":8},"end":{"line":882,"column":8}},{"start":{"line":882,"column":8},"end":{"line":882,"column":8}}]},"78":{"line":910,"type":"if","locations":[{"start":{"line":910,"column":2},"end":{"line":910,"column":2}},{"start":{"line":910,"column":2},"end":{"line":910,"column":2}}]},"79":{"line":915,"type":"binary-expr","locations":[{"start":{"line":915,"column":12},"end":{"line":915,"column":19}},{"start":{"line":915,"column":23},"end":{"line":915,"column":25}}]},"80":{"line":918,"type":"if","locations":[{"start":{"line":918,"column":2},"end":{"line":918,"column":2}},{"start":{"line":918,"column":2},"end":{"line":918,"column":2}}]},"81":{"line":918,"type":"binary-expr","locations":[{"start":{"line":918,"column":5},"end":{"line":918,"column":28}},{"start":{"line":918,"column":32},"end":{"line":918,"column":56}}]},"82":{"line":920,"type":"if","locations":[{"start":{"line":920,"column":4},"end":{"line":920,"column":4}},{"start":{"line":920,"column":4},"end":{"line":920,"column":4}}]},"83":{"line":933,"type":"if","locations":[{"start":{"line":933,"column":2},"end":{"line":933,"column":2}},{"start":{"line":933,"column":2},"end":{"line":933,"column":2}}]},"84":{"line":933,"type":"binary-expr","locations":[{"start":{"line":933,"column":5},"end":{"line":933,"column":32}},{"start":{"line":934,"column":7},"end":{"line":934,"column":21}},{"start":{"line":934,"column":25},"end":{"line":934,"column":49}}]},"85":{"line":954,"type":"if","locations":[{"start":{"line":954,"column":2},"end":{"line":954,"column":2}},{"start":{"line":954,"column":2},"end":{"line":954,"column":2}}]},"86":{"line":972,"type":"cond-expr","locations":[{"start":{"line":972,"column":70},"end":{"line":972,"column":90}},{"start":{"line":972,"column":93},"end":{"line":972,"column":97}}]},"87":{"line":973,"type":"cond-expr","locations":[{"start":{"line":973,"column":72},"end":{"line":973,"column":93}},{"start":{"line":973,"column":96},"end":{"line":973,"column":100}}]},"88":{"line":974,"type":"cond-expr","locations":[{"start":{"line":974,"column":74},"end":{"line":974,"column":96}},{"start":{"line":974,"column":99},"end":{"line":974,"column":104}}]},"89":{"line":975,"type":"cond-expr","locations":[{"start":{"line":975,"column":52},"end":{"line":975,"column":63}},{"start":{"line":975,"column":66},"end":{"line":975,"column":71}}]},"90":{"line":976,"type":"cond-expr","locations":[{"start":{"line":976,"column":78},"end":{"line":976,"column":102}},{"start":{"line":976,"column":105},"end":{"line":976,"column":110}}]},"91":{"line":978,"type":"cond-expr","locations":[{"start":{"line":978,"column":60},"end":{"line":978,"column":75}},{"start":{"line":978,"column":78},"end":{"line":978,"column":83}}]},"92":{"line":979,"type":"cond-expr","locations":[{"start":{"line":979,"column":66},"end":{"line":979,"column":84}},{"start":{"line":979,"column":87},"end":{"line":979,"column":92}}]},"93":{"line":980,"type":"cond-expr","locations":[{"start":{"line":980,"column":66},"end":{"line":980,"column":84}},{"start":{"line":980,"column":87},"end":{"line":980,"column":92}}]},"94":{"line":987,"type":"if","locations":[{"start":{"line":987,"column":2},"end":{"line":987,"column":2}},{"start":{"line":987,"column":2},"end":{"line":987,"column":2}}]},"95":{"line":992,"type":"if","locations":[{"start":{"line":992,"column":2},"end":{"line":992,"column":2}},{"start":{"line":992,"column":2},"end":{"line":992,"column":2}}]},"96":{"line":992,"type":"binary-expr","locations":[{"start":{"line":992,"column":5},"end":{"line":992,"column":31}},{"start":{"line":992,"column":35},"end":{"line":992,"column":54}}]},"97":{"line":998,"type":"if","locations":[{"start":{"line":998,"column":2},"end":{"line":998,"column":2}},{"start":{"line":998,"column":2},"end":{"line":998,"column":2}}]},"98":{"line":1005,"type":"if","locations":[{"start":{"line":1005,"column":2},"end":{"line":1005,"column":2}},{"start":{"line":1005,"column":2},"end":{"line":1005,"column":2}}]},"99":{"line":1015,"type":"if","locations":[{"start":{"line":1015,"column":4},"end":{"line":1015,"column":4}},{"start":{"line":1015,"column":4},"end":{"line":1015,"column":4}}]},"100":{"line":1023,"type":"if","locations":[{"start":{"line":1023,"column":2},"end":{"line":1023,"column":2}},{"start":{"line":1023,"column":2},"end":{"line":1023,"column":2}}]},"101":{"line":1024,"type":"if","locations":[{"start":{"line":1024,"column":2},"end":{"line":1024,"column":2}},{"start":{"line":1024,"column":2},"end":{"line":1024,"column":2}}]},"102":{"line":1025,"type":"if","locations":[{"start":{"line":1025,"column":2},"end":{"line":1025,"column":2}},{"start":{"line":1025,"column":2},"end":{"line":1025,"column":2}}]},"103":{"line":1026,"type":"if","locations":[{"start":{"line":1026,"column":2},"end":{"line":1026,"column":2}},{"start":{"line":1026,"column":2},"end":{"line":1026,"column":2}}]},"104":{"line":1033,"type":"if","locations":[{"start":{"line":1033,"column":2},"end":{"line":1033,"column":2}},{"start":{"line":1033,"column":2},"end":{"line":1033,"column":2}}]},"105":{"line":1033,"type":"binary-expr","locations":[{"start":{"line":1033,"column":5},"end":{"line":1033,"column":28}},{"start":{"line":1033,"column":32},"end":{"line":1033,"column":56}}]},"106":{"line":1049,"type":"if","locations":[{"start":{"line":1049,"column":6},"end":{"line":1049,"column":6}},{"start":{"line":1049,"column":6},"end":{"line":1049,"column":6}}]},"107":{"line":1049,"type":"binary-expr","locations":[{"start":{"line":1049,"column":9},"end":{"line":1049,"column":26}},{"start":{"line":1049,"column":30},"end":{"line":1049,"column":52}}]},"108":{"line":1059,"type":"if","locations":[{"start":{"line":1059,"column":6},"end":{"line":1059,"column":6}},{"start":{"line":1059,"column":6},"end":{"line":1059,"column":6}}]},"109":{"line":1059,"type":"binary-expr","locations":[{"start":{"line":1059,"column":9},"end":{"line":1059,"column":32}},{"start":{"line":1059,"column":36},"end":{"line":1059,"column":60}}]},"110":{"line":1078,"type":"if","locations":[{"start":{"line":1078,"column":8},"end":{"line":1078,"column":8}},{"start":{"line":1078,"column":8},"end":{"line":1078,"column":8}}]},"111":{"line":1078,"type":"binary-expr","locations":[{"start":{"line":1078,"column":11},"end":{"line":1078,"column":34}},{"start":{"line":1078,"column":38},"end":{"line":1078,"column":62}}]},"112":{"line":1085,"type":"if","locations":[{"start":{"line":1085,"column":8},"end":{"line":1085,"column":8}},{"start":{"line":1085,"column":8},"end":{"line":1085,"column":8}}]},"113":{"line":1092,"type":"if","locations":[{"start":{"line":1092,"column":8},"end":{"line":1092,"column":8}},{"start":{"line":1092,"column":8},"end":{"line":1092,"column":8}}]},"114":{"line":1117,"type":"if","locations":[{"start":{"line":1117,"column":4},"end":{"line":1117,"column":4}},{"start":{"line":1117,"column":4},"end":{"line":1117,"column":4}}]},"115":{"line":1127,"type":"if","locations":[{"start":{"line":1127,"column":4},"end":{"line":1127,"column":4}},{"start":{"line":1127,"column":4},"end":{"line":1127,"column":4}}]},"116":{"line":1129,"type":"if","locations":[{"start":{"line":1129,"column":4},"end":{"line":1129,"column":4}},{"start":{"line":1129,"column":4},"end":{"line":1129,"column":4}}]},"117":{"line":1135,"type":"if","locations":[{"start":{"line":1135,"column":6},"end":{"line":1135,"column":6}},{"start":{"line":1135,"column":6},"end":{"line":1135,"column":6}}]},"118":{"line":1147,"type":"if","locations":[{"start":{"line":1147,"column":6},"end":{"line":1147,"column":6}},{"start":{"line":1147,"column":6},"end":{"line":1147,"column":6}}]},"119":{"line":1159,"type":"if","locations":[{"start":{"line":1159,"column":8},"end":{"line":1159,"column":8}},{"start":{"line":1159,"column":8},"end":{"line":1159,"column":8}}]},"120":{"line":1166,"type":"if","locations":[{"start":{"line":1166,"column":8},"end":{"line":1166,"column":8}},{"start":{"line":1166,"column":8},"end":{"line":1166,"column":8}}]},"121":{"line":1177,"type":"if","locations":[{"start":{"line":1177,"column":10},"end":{"line":1177,"column":10}},{"start":{"line":1177,"column":10},"end":{"line":1177,"column":10}}]},"122":{"line":1183,"type":"if","locations":[{"start":{"line":1183,"column":8},"end":{"line":1183,"column":8}},{"start":{"line":1183,"column":8},"end":{"line":1183,"column":8}}]},"123":{"line":1190,"type":"if","locations":[{"start":{"line":1190,"column":8},"end":{"line":1190,"column":8}},{"start":{"line":1190,"column":8},"end":{"line":1190,"column":8}}]},"124":{"line":1197,"type":"if","locations":[{"start":{"line":1197,"column":10},"end":{"line":1197,"column":10}},{"start":{"line":1197,"column":10},"end":{"line":1197,"column":10}}]},"125":{"line":1204,"type":"if","locations":[{"start":{"line":1204,"column":14},"end":{"line":1204,"column":14}},{"start":{"line":1204,"column":14},"end":{"line":1204,"column":14}}]},"126":{"line":1204,"type":"binary-expr","locations":[{"start":{"line":1204,"column":17},"end":{"line":1204,"column":59}},{"start":{"line":1205,"column":19},"end":{"line":1205,"column":69}}]},"127":{"line":1214,"type":"if","locations":[{"start":{"line":1214,"column":12},"end":{"line":1214,"column":12}},{"start":{"line":1214,"column":12},"end":{"line":1214,"column":12}}]},"128":{"line":1219,"type":"if","locations":[{"start":{"line":1219,"column":14},"end":{"line":1219,"column":14}},{"start":{"line":1219,"column":14},"end":{"line":1219,"column":14}}]},"129":{"line":1219,"type":"binary-expr","locations":[{"start":{"line":1219,"column":17},"end":{"line":1219,"column":53}},{"start":{"line":1220,"column":19},"end":{"line":1220,"column":40}}]},"130":{"line":1235,"type":"if","locations":[{"start":{"line":1235,"column":10},"end":{"line":1235,"column":10}},{"start":{"line":1235,"column":10},"end":{"line":1235,"column":10}}]},"131":{"line":1238,"type":"if","locations":[{"start":{"line":1238,"column":12},"end":{"line":1238,"column":12}},{"start":{"line":1238,"column":12},"end":{"line":1238,"column":12}}]},"132":{"line":1256,"type":"if","locations":[{"start":{"line":1256,"column":10},"end":{"line":1256,"column":10}},{"start":{"line":1256,"column":10},"end":{"line":1256,"column":10}}]},"133":{"line":1262,"type":"if","locations":[{"start":{"line":1262,"column":10},"end":{"line":1262,"column":10}},{"start":{"line":1262,"column":10},"end":{"line":1262,"column":10}}]},"134":{"line":1267,"type":"if","locations":[{"start":{"line":1267,"column":10},"end":{"line":1267,"column":10}},{"start":{"line":1267,"column":10},"end":{"line":1267,"column":10}}]},"135":{"line":1267,"type":"binary-expr","locations":[{"start":{"line":1267,"column":13},"end":{"line":1267,"column":39}},{"start":{"line":1267,"column":43},"end":{"line":1267,"column":84}}]},"136":{"line":1272,"type":"if","locations":[{"start":{"line":1272,"column":10},"end":{"line":1272,"column":10}},{"start":{"line":1272,"column":10},"end":{"line":1272,"column":10}}]},"137":{"line":1280,"type":"if","locations":[{"start":{"line":1280,"column":10},"end":{"line":1280,"column":10}},{"start":{"line":1280,"column":10},"end":{"line":1280,"column":10}}]},"138":{"line":1280,"type":"binary-expr","locations":[{"start":{"line":1280,"column":13},"end":{"line":1280,"column":38}},{"start":{"line":1280,"column":42},"end":{"line":1280,"column":61}}]}},"code":["\"use strict\";","","var inherits = require('util').inherits,","  EventEmitter = require('events').EventEmitter,","  Connection = require('./connection'),","  MongoError = require('../error'),","  Logger = require('./logger'),","  f = require('util').format,","  Query = require('./commands').Query,","  CommandResult = require('./command_result'),","  assign = require('../topologies/shared').assign;","","var MongoCR = require('../auth/mongocr')","  , X509 = require('../auth/x509')","  , Plain = require('../auth/plain')","  , GSSAPI = require('../auth/gssapi')","  , SSPI = require('../auth/sspi')","  , ScramSHA1 = require('../auth/scram');","","var DISCONNECTED = 'disconnected';","var CONNECTING = 'connecting';","var CONNECTED = 'connected';","var DESTROYING = 'destroying';","var DESTROYED = 'destroyed';","","var _id = 0;","","/**"," * Creates a new Pool instance"," * @class"," * @param {string} options.host The server host"," * @param {number} options.port The server port"," * @param {number} [options.size=1] Max server connection pool size"," * @param {boolean} [options.reconnect=true] Server will attempt to reconnect on loss of connection"," * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times"," * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries"," * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled"," * @param {number} [options.keepAliveInitialDelay=0] Initial delay before TCP keep alive enabled"," * @param {boolean} [options.noDelay=true] TCP Connection no delay"," * @param {number} [options.connectionTimeout=0] TCP Connection timeout setting"," * @param {number} [options.socketTimeout=0] TCP Socket timeout setting"," * @param {number} [options.monitoringSocketTimeout=30000] TCP Socket timeout setting for replicaset monitoring socket"," * @param {boolean} [options.ssl=false] Use SSL for connection"," * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function."," * @param {Buffer} [options.ca] SSL Certificate store binary buffer"," * @param {Buffer} [options.crl] SSL Certificate revocation store binary buffer"," * @param {Buffer} [options.cert] SSL Certificate binary buffer"," * @param {Buffer} [options.key] SSL Key file binary buffer"," * @param {string} [options.passPhrase] SSL Certificate pass phrase"," * @param {boolean} [options.rejectUnauthorized=false] Reject unauthorized server certificates"," * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits"," * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types."," * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers."," * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit."," * @fires Pool#connect"," * @fires Pool#close"," * @fires Pool#error"," * @fires Pool#timeout"," * @fires Pool#parseError"," * @return {Pool} A cursor instance"," */","var Pool = function(options) {","  // Add event listener","  EventEmitter.call(this);","  // Add the options","  this.options = assign({","    // Host and port settings","    host: 'localhost',","    port: 27017,","    // Pool default max size","    size: 5,","    // socket settings","    connectionTimeout: 30000,","    socketTimeout: 30000,","    keepAlive: true,","    keepAliveInitialDelay: 0,","    noDelay: true,","    // SSL Settings","    ssl: false, checkServerIdentity: true,","    ca: null, crl: null, cert: null, key: null, passPhrase: null,","    rejectUnauthorized: false,","    promoteLongs: true,","    promoteValues: true,","    promoteBuffers: false,","    // Reconnection options","    reconnect: true,","    reconnectInterval: 1000,","    reconnectTries: 30,","    // Enable domains","    domainsEnabled: false","  }, options);","","  // Identification information","  this.id = _id++;","  // Current reconnect retries","  this.retriesLeft = this.options.reconnectTries;","  this.reconnectId = null;","  // No bson parser passed in","  if(!options.bson || (options.bson","    && (typeof options.bson.serialize != 'function'","    || typeof options.bson.deserialize != 'function'))) {","      throw new Error(\"must pass in valid bson parser\");","  }","","  // Logger instance","  this.logger = Logger('Pool', options);","  // Pool state","  this.state = DISCONNECTED;","  // Connections","  this.availableConnections = [];","  this.inUseConnections = [];","  this.connectingConnections = [];","  // Currently executing","  this.executing = false;","  // Operation work queue","  this.queue = [];","","  // All the authProviders","  this.authProviders = options.authProviders || {","      'mongocr': new MongoCR(options.bson), 'x509': new X509(options.bson)","    , 'plain': new Plain(options.bson), 'gssapi': new GSSAPI(options.bson)","    , 'sspi': new SSPI(options.bson), 'scram-sha-1': new ScramSHA1(options.bson)","  }","","  // Contains the reconnect connection","  this.reconnectConnection = null;","","  // Are we currently authenticating","  this.authenticating = false;","  this.loggingout = false;","  this.nonAuthenticatedConnections = [];","  this.authenticatingTimestamp = null;","  // Number of consecutive timeouts caught","  this.numberOfConsecutiveTimeouts = 0;","  // Current pool Index","  this.connectionIndex = 0;","}","","inherits(Pool, EventEmitter);","","Object.defineProperty(Pool.prototype, 'size', {","  enumerable:true,","  get: function() { return this.options.size; }","});","","Object.defineProperty(Pool.prototype, 'connectionTimeout', {","  enumerable:true,","  get: function() { return this.options.connectionTimeout; }","});","","Object.defineProperty(Pool.prototype, 'socketTimeout', {","  enumerable:true,","  get: function() { return this.options.socketTimeout; }","});","","function stateTransition(self, newState) {","  var legalTransitions = {","    'disconnected': [CONNECTING, DESTROYING, DISCONNECTED],","    'connecting': [CONNECTING, DESTROYING, CONNECTED, DISCONNECTED],","    'connected': [CONNECTED, DISCONNECTED, DESTROYING],","    'destroying': [DESTROYING, DESTROYED],","    'destroyed': [DESTROYED]","  }","","  // Get current state","  var legalStates = legalTransitions[self.state];","  if(legalStates && legalStates.indexOf(newState) != -1) {","    self.state = newState;","  } else {","    self.logger.error(f('Pool with id [%s] failed attempted illegal state transition from [%s] to [%s] only following state allowed [%s]'","      , self.id, self.state, newState, legalStates));","  }","}","","function authenticate(pool, auth, connection, cb) {","  if(auth[0] === undefined) return cb(null);","  // We need to authenticate the server","  var mechanism = auth[0];","  var db = auth[1];","  // Validate if the mechanism exists","  if(!pool.authProviders[mechanism]) {","    throw new MongoError(f('authMechanism %s not supported', mechanism));","  }","","  // Get the provider","  var provider = pool.authProviders[mechanism];","","  // Authenticate using the provided mechanism","  provider.auth.apply(provider, [write(pool), [connection], db].concat(auth.slice(2)).concat([cb]));","}","","// The write function used by the authentication mechanism (bypasses external)","function write(self) {","  return function(connection, command, callback) {","    // Get the raw buffer","    // Ensure we stop auth if pool was destroyed","    if(self.state == DESTROYED || self.state == DESTROYING) {","      return callback(new MongoError('pool destroyed'));","    }","","    // Set the connection workItem callback","    connection.workItems.push({","      cb: callback, command: true, requestId: command.requestId","    });","","    // Write the buffer out to the connection","    connection.write(command.toBin());","  };","}","","","function reauthenticate(pool, connection, cb) {","  // Authenticate","  function authenticateAgainstProvider(pool, connection, providers, cb) {","    // Finished re-authenticating against providers","    if(providers.length == 0) return cb();","    // Get the provider name","    var provider = pool.authProviders[providers.pop()];","","    // Auth provider","    provider.reauthenticate(write(pool), [connection], function(err) {","      // We got an error return immediately","      if(err) return cb(err);","      // Continue authenticating the connection","      authenticateAgainstProvider(pool, connection, providers, cb);","    });","  }","","  // Start re-authenticating process","  authenticateAgainstProvider(pool, connection, Object.keys(pool.authProviders), cb);","}","","function connectionFailureHandler(self, event) {","  return function(err) {","    if (this._connectionFailHandled) return;","    this._connectionFailHandled = true;","    // Destroy the connection","    this.destroy();","","    // Remove the connection","    removeConnection(self, this);","","    // Flush all work Items on this connection","    while(this.workItems.length > 0) {","      var workItem = this.workItems.shift();","      // if(workItem.cb) workItem.cb(err);","      if(workItem.cb) workItem.cb(err);","    }","","    // Did we catch a timeout, increment the numberOfConsecutiveTimeouts","    if(event == 'timeout') {","      self.numberOfConsecutiveTimeouts = self.numberOfConsecutiveTimeouts + 1;","","      // Have we timed out more than reconnectTries in a row ?","      // Force close the pool as we are trying to connect to tcp sink hole","      if(self.numberOfConsecutiveTimeouts > self.options.reconnectTries) {","        self.numberOfConsecutiveTimeouts = 0;","        // Destroy all connections and pool","        self.destroy(true);","        // Emit close event","        return self.emit('close', self);","      }","    }","","    // No more socket available propegate the event","    if(self.socketCount() == 0) {","      if(self.state != DESTROYED && self.state != DESTROYING) {","        stateTransition(self, DISCONNECTED);","      }","","      // Do not emit error events, they are always close events","      // do not trigger the low level error handler in node","      event = event == 'error' ? 'close' : event;","      self.emit(event, err);","    }","","    // Start reconnection attempts","    if(!self.reconnectId && self.options.reconnect) {","      self.reconnectId = setTimeout(attemptReconnect(self), self.options.reconnectInterval);","    }","  };","}","","function attemptReconnect(self) {","  return function() {","    self.emit('attemptReconnect', self);","    if(self.state == DESTROYED || self.state == DESTROYING) return;","","    // We are connected do not try again","    if(self.isConnected()) {","      self.reconnectId = null;","      return;","    }","","    // If we have failure schedule a retry","    function _connectionFailureHandler(self) {","      return function() {","        if (this._connectionFailHandled) return;","        this._connectionFailHandled = true;","        // Destroy the connection","        this.destroy();","        // Count down the number of reconnects","        self.retriesLeft = self.retriesLeft - 1;","        // How many retries are left","        if(self.retriesLeft == 0) {","          // Destroy the instance","          self.destroy();","          // Emit close event","          self.emit('reconnectFailed'","            , new MongoError(f('failed to reconnect after %s attempts with interval %s ms', self.options.reconnectTries, self.options.reconnectInterval)));","        } else {","          self.reconnectId = setTimeout(attemptReconnect(self), self.options.reconnectInterval);","        }","      }","    }","","    // Got a connect handler","    function _connectHandler(self) {","      return function() {","        // Assign","        var connection = this;","","        // Pool destroyed stop the connection","        if(self.state == DESTROYED || self.state == DESTROYING) {","          return connection.destroy();","        }","","        // Clear out all handlers","        handlers.forEach(function(event) {","          connection.removeAllListeners(event);","        });","","        // Reset reconnect id","        self.reconnectId = null;","","        // Apply pool connection handlers","        connection.on('error', connectionFailureHandler(self, 'error'));","        connection.on('close', connectionFailureHandler(self, 'close'));","        connection.on('timeout', connectionFailureHandler(self, 'timeout'));","        connection.on('parseError', connectionFailureHandler(self, 'parseError'));","","        // Apply any auth to the connection","        reauthenticate(self, this, function() {","          // Reset retries","          self.retriesLeft = self.options.reconnectTries;","          // Push to available connections","          self.availableConnections.push(connection);","          // Set the reconnectConnection to null","          self.reconnectConnection = null;","          // Emit reconnect event","          self.emit('reconnect', self);","          // Trigger execute to start everything up again","          _execute(self)();","        });","      }","    }","","    // Create a connection","    self.reconnectConnection = new Connection(messageHandler(self), self.options);","    // Add handlers","    self.reconnectConnection.on('close', _connectionFailureHandler(self, 'close'));","    self.reconnectConnection.on('error', _connectionFailureHandler(self, 'error'));","    self.reconnectConnection.on('timeout', _connectionFailureHandler(self, 'timeout'));","    self.reconnectConnection.on('parseError', _connectionFailureHandler(self, 'parseError'));","    // On connection","    self.reconnectConnection.on('connect', _connectHandler(self));","    // Attempt connection","    self.reconnectConnection.connect();","  }","}","","function moveConnectionBetween(connection, from, to) {","  var index = from.indexOf(connection);","  // Move the connection from connecting to available","  if(index != -1) {","    from.splice(index, 1);","    to.push(connection);","  }","}","","function messageHandler(self) {","  return function(message, connection) {","    // workItem to execute","    var workItem = null;","","    // Locate the workItem","    for(var i = 0; i < connection.workItems.length; i++) {","      if(connection.workItems[i].requestId == message.responseTo) {","        // Get the callback","        workItem = connection.workItems[i];","        // Remove from list of workItems","        connection.workItems.splice(i, 1);","      }","    }","","","    // Reset timeout counter","    self.numberOfConsecutiveTimeouts = 0;","","    // Reset the connection timeout if we modified it for","    // this operation","    if(workItem.socketTimeout) {","      connection.resetSocketTimeout();","    }","","    // Log if debug enabled","    if(self.logger.isDebug()) {","      self.logger.debug(f('message [%s] received from %s:%s'","        , message.raw.toString('hex'), self.options.host, self.options.port));","    }","","    // Authenticate any straggler connections","    function authenticateStragglers(self, connection, callback) {","      // Get any non authenticated connections","      var connections = self.nonAuthenticatedConnections.slice(0);","      var nonAuthenticatedConnections = self.nonAuthenticatedConnections;","      self.nonAuthenticatedConnections = [];","","      // Establish if the connection need to be authenticated","      // Add to authentication list if","      // 1. we were in an authentication process when the operation was executed","      // 2. our current authentication timestamp is from the workItem one, meaning an auth has happened","      if(connection.workItems.length == 1 && (connection.workItems[0].authenticating == true","        || (typeof connection.workItems[0].authenticatingTimestamp == 'number'","            && connection.workItems[0].authenticatingTimestamp != self.authenticatingTimestamp))) {","        // Add connection to the list","        connections.push(connection);","      }","","      // No connections need to be re-authenticated","      if(connections.length == 0) {","        // Release the connection back to the pool","        moveConnectionBetween(connection, self.inUseConnections, self.availableConnections);","        // Finish","        return callback();","      }","","      // Apply re-authentication to all connections before releasing back to pool","      var connectionCount = connections.length;","      // Authenticate all connections","      for(var i = 0; i < connectionCount; i++) {","        reauthenticate(self, connections[i], function() {","          connectionCount = connectionCount - 1;","","          if(connectionCount == 0) {","            // Put non authenticated connections in available connections","            self.availableConnections = self.availableConnections.concat(nonAuthenticatedConnections);","            // Release the connection back to the pool","            moveConnectionBetween(connection, self.inUseConnections, self.availableConnections);","            // Return","            callback();","          }","        });","      }","    }","","    function handleOperationCallback(self, cb, err, result) {","      // No domain enabled","      if(!self.options.domainsEnabled) {","        return process.nextTick(function() {","          return cb(err, result);","        });","      }","","      // Domain enabled just call the callback","      cb(err, result);","    }","","    authenticateStragglers(self, connection, function() {","      // Keep executing, ensure current message handler does not stop execution","      if(!self.executing) {","        process.nextTick(function() {","          _execute(self)();","        });","      }","","      // Time to dispatch the message if we have a callback","      if(!workItem.immediateRelease) {","        try {","          // Parse the message according to the provided options","          message.parse(workItem);","        } catch(err) {","          return handleOperationCallback(self, workItem.cb, MongoError.create(err));","        }","","        // Establish if we have an error","        if(workItem.command && message.documents[0] && (message.documents[0].ok == 0 || message.documents[0]['$err']","        || message.documents[0]['errmsg'] || message.documents[0]['code'])) {","          return handleOperationCallback(self, workItem.cb, MongoError.create(message.documents[0]));","        }","","        // Add the connection details","        message.hashedName = connection.hashedName;","","        // Return the documents","        handleOperationCallback(self, workItem.cb, null, new CommandResult(workItem.fullResult ? message : message.documents[0], connection, message));","      }","    });","  }","}","","/**"," * Return the total socket count in the pool."," * @method"," * @return {Number} The number of socket available."," */","Pool.prototype.socketCount = function() {","  return this.availableConnections.length","    + this.inUseConnections.length;","    // + this.connectingConnections.length;","}","","/**"," * Return all pool connections"," * @method"," * @return {Connection[]} The pool connections"," */","Pool.prototype.allConnections = function() {","  return this.availableConnections","    .concat(this.inUseConnections)","    .concat(this.connectingConnections);","}","","/**"," * Get a pool connection (round-robin)"," * @method"," * @return {Connection}"," */","Pool.prototype.get = function() {","  return this.allConnections()[0];","}","","/**"," * Is the pool connected"," * @method"," * @return {boolean}"," */","Pool.prototype.isConnected = function() {","  // We are in a destroyed state","  if(this.state == DESTROYED || this.state == DESTROYING) {","    return false;","  }","","  // Get connections","  var connections = this.availableConnections","    .concat(this.inUseConnections);","","  // Check if we have any connected connections","  for(var i = 0; i < connections.length; i++) {","    if(connections[i].isConnected()) return true;","  }","","  // Might be authenticating, but we are still connected","  if(connections.length == 0 && this.authenticating) {","    return true","  }","","  // Not connected","  return false;","}","","/**"," * Was the pool destroyed"," * @method"," * @return {boolean}"," */","Pool.prototype.isDestroyed = function() {","  return this.state == DESTROYED || this.state == DESTROYING;","}","","/**"," * Is the pool in a disconnected state"," * @method"," * @return {boolean}"," */","Pool.prototype.isDisconnected = function() {","  return this.state == DISCONNECTED;","}","","/**"," * Connect pool"," * @method"," */","Pool.prototype.connect = function() {","  if(this.state != DISCONNECTED) {","    throw new MongoError('connection in unlawful state ' + this.state);","  }","","  var self = this;","  // Transition to connecting state","  stateTransition(this, CONNECTING);","  // Create an array of the arguments","  var args = Array.prototype.slice.call(arguments, 0);","  // Create a connection","  var connection = new Connection(messageHandler(self), this.options);","  // Add to list of connections","  this.connectingConnections.push(connection);","  // Add listeners to the connection","  connection.once('connect', function(connection) {","    if(self.state == DESTROYED || self.state == DESTROYING) return self.destroy();","","    // If we are in a topology, delegate the auth to it","    // This is to avoid issues where we would auth against an","    // arbiter","    if(self.options.inTopology) {","      // Set connected mode","      stateTransition(self, CONNECTED);","","      // Move the active connection","      moveConnectionBetween(connection, self.connectingConnections, self.availableConnections);","","      // Emit the connect event","      return self.emit('connect', self);      ","    }","","    // Apply any store credentials","    reauthenticate(self, connection, function(err) {","      if(self.state == DESTROYED || self.state == DESTROYING) return self.destroy();","","      // We have an error emit it","      if(err) {","        // Destroy the pool","        self.destroy();","        // Emit the error","        return self.emit('error', err);","      }","","      // Authenticate","      authenticate(self, args, connection, function(err) {","        if(self.state == DESTROYED || self.state == DESTROYING) return self.destroy();","","        // We have an error emit it","        if(err) {","          // Destroy the pool","          self.destroy();","          // Emit the error","          return self.emit('error', err);","        }","        // Set connected mode","        stateTransition(self, CONNECTED);","","        // Move the active connection","        moveConnectionBetween(connection, self.connectingConnections, self.availableConnections);","","        // Emit the connect event","        self.emit('connect', self);","      });","    });","  });","","  // Add error handlers","  connection.once('error', connectionFailureHandler(this, 'error'));","  connection.once('close', connectionFailureHandler(this, 'close'));","  connection.once('timeout', connectionFailureHandler(this, 'timeout'));","  connection.once('parseError', connectionFailureHandler(this, 'parseError'));","","  try {","    connection.connect();","  } catch(err) {","    // SSL or something threw on connect","    process.nextTick(function() {","      self.emit('error', err);","    });","  }","}","","/**"," * Authenticate using a specified mechanism"," * @method"," * @param {string} mechanism The Auth mechanism we are invoking"," * @param {string} db The db we are invoking the mechanism against"," * @param {...object} param Parameters for the specific mechanism"," * @param {authResultCallback} callback A callback function"," */","Pool.prototype.auth = function(mechanism) {","  var self = this;","  var args = Array.prototype.slice.call(arguments, 0);","  var callback = args.pop();","","  // If we don't have the mechanism fail","  if(self.authProviders[mechanism] == null && mechanism != 'default') {","    throw new MongoError(f(\"auth provider %s does not exist\", mechanism));","  }","","  // Signal that we are authenticating a new set of credentials","  this.authenticating = true;","  this.authenticatingTimestamp = new Date().getTime();","","  // Authenticate all live connections","  function authenticateLiveConnections(self, args, cb) {","    // Get the current viable connections","    var connections = self.allConnections();","    // Allow nothing else to use the connections while we authenticate them","    self.availableConnections = [];","","    var connectionsCount = connections.length;","    var error = null;","    // No connections available, return","    if(connectionsCount == 0) {","      self.authenticating = false;","      return callback(null);","    }","","    // Authenticate the connections","    for(var i = 0; i < connections.length; i++) {","      authenticate(self, args, connections[i], function(err) {","        connectionsCount = connectionsCount - 1;","","        // Store the error","        if(err) error = err;","","        // Processed all connections","        if(connectionsCount == 0) {","          // Auth finished","          self.authenticating = false;","          // Add the connections back to available connections","          self.availableConnections = self.availableConnections.concat(connections);","          // We had an error, return it","          if(error) {","            // Log the error","            if(self.logger.isError()) {","              self.logger.error(f('[%s] failed to authenticate against server %s:%s'","                , self.id, self.options.host, self.options.port));","            }","","            return cb(error);","          }","          cb(null);","        }","      });","    }","  }","","  // Wait for a logout in process to happen","  function waitForLogout(self, cb) {","    if(!self.loggingout) return cb();","    setTimeout(function() {","      waitForLogout(self, cb);","    }, 1)","  }","","  // Wait for loggout to finish","  waitForLogout(self, function() {","    // Authenticate all live connections","    authenticateLiveConnections(self, args, function(err) {","      // Credentials correctly stored in auth provider if successful","      // Any new connections will now reauthenticate correctly","      self.authenticating = false;","      // Return after authentication connections","      callback(err);","    });","  });","}","","/**"," * Logout all users against a database"," * @method"," * @param {string} dbName The database name"," * @param {authResultCallback} callback A callback function"," */","Pool.prototype.logout = function(dbName, callback) {","  var self = this;","  if(typeof dbName != 'string') {","    throw new MongoError('logout method requires a db name as first argument');","  }","","  if(typeof callback != 'function') {","    throw new MongoError('logout method requires a callback');","  }","","  // Indicate logout in process","  this.loggingout = true;","","  // Get all relevant connections","  var connections = self.availableConnections.concat(self.inUseConnections);","  var count = connections.length;","  // Store any error","  var error = null;","","  // Send logout command over all the connections","  for(var i = 0; i < connections.length; i++) {","    write(self)(connections[i], new Query(this.options.bson","      , f('%s.$cmd', dbName)","      , {logout:1}, {numberToSkip: 0, numberToReturn: 1}), function(err) {","      count = count - 1;","      if(err) error = err;","","      if(count == 0) {","        self.loggingout = false;","        callback(error);","      }","    });","  }","}","","/**"," * Unref the pool"," * @method"," */","Pool.prototype.unref = function() {","  // Get all the known connections","  var connections = this.availableConnections","    .concat(this.inUseConnections)","    .concat(this.connectingConnections);","  connections.forEach(function(c) {","    c.unref();","  });","}","","// Events","var events = ['error', 'close', 'timeout', 'parseError', 'connect'];","","// Destroy the connections","function destroy(self, connections) {","  // Destroy all connections","  connections.forEach(function(c) {","    // Remove all listeners","    for(var i = 0; i < events.length; i++) {","      c.removeAllListeners(events[i]);","    }","    // Destroy connection","    c.destroy();","  });","","  // Zero out all connections","  self.inUseConnections = [];","  self.availableConnections = [];","  self.nonAuthenticatedConnections = [];","  self.connectingConnections = [];","","  // Set state to destroyed","  stateTransition(self, DESTROYED);","}","","/**"," * Destroy pool"," * @method"," */","Pool.prototype.destroy = function(force) {","  var self = this;","  // Do not try again if the pool is already dead","  if(this.state == DESTROYED || self.state == DESTROYING) return;","  // Set state to destroyed","  stateTransition(this, DESTROYING);","","  // Are we force closing","  if(force) {","    // Get all the known connections","    var connections = self.availableConnections","      .concat(self.inUseConnections)","      .concat(self.nonAuthenticatedConnections)","      .concat(self.connectingConnections);","    return destroy(self, connections);","  }","","  // Clear out the reconnect if set","  if (this.reconnectId) {","    clearTimeout(this.reconnectId);","  }","","  // If we have a reconnect connection running, close","  // immediately","  if (this.reconnectConnection) {","    this.reconnectConnection.destroy();","  }","","  // Wait for the operations to drain before we close the pool","  function checkStatus() {","    flushMonitoringOperations(self.queue);","","    if(self.queue.length == 0) {","      // Get all the known connections","      var connections = self.availableConnections","        .concat(self.inUseConnections)","        .concat(self.nonAuthenticatedConnections)","        .concat(self.connectingConnections);","","      // Check if we have any in flight operations","      for(var i = 0; i < connections.length; i++) {","        // There is an operation still in flight, reschedule a","        // check waiting for it to drain","        if(connections[i].workItems.length > 0) {","          return setTimeout(checkStatus, 1);","        }","      }","","      destroy(self, connections);","    // } else if (self.queue.length > 0 && !this.reconnectId) {","      ","    } else {","      // Ensure we empty the queue","      _execute(self)();","      // Set timeout","      setTimeout(checkStatus, 1);","    }","  }","","  // Initiate drain of operations","  checkStatus();","}","","/**"," * Write a message to MongoDB"," * @method"," * @return {Connection}"," */","Pool.prototype.write = function(commands, options, cb) {","  var self = this;","  // Ensure we have a callback","  if(typeof options == 'function') {","    cb = options;","  }","","  // Always have options","  options = options || {};","","  // Pool was destroyed error out","  if(this.state == DESTROYED || this.state == DESTROYING) {","    // Callback with an error","    if(cb) {","      try {","        cb(new MongoError('pool destroyed'));","      } catch(err) {","        process.nextTick(function() {","          throw err;","        });","      }","    }","","    return;","  }","","  if(this.options.domainsEnabled","    && process.domain && typeof cb === \"function\") {","    // if we have a domain bind to it","    var oldCb = cb;","    cb = process.domain.bind(function() {","      // v8 - argumentsToArray one-liner","      var args = new Array(arguments.length); for(var i = 0; i < arguments.length; i++) { args[i] = arguments[i]; }","      // bounce off event loop so domain switch takes place","      process.nextTick(function() {","        oldCb.apply(null, args);","      });","    });","  }","","  // Do we have an operation","  var operation = {","    cb: cb, raw: false, promoteLongs: true, promoteValues: true, promoteBuffers: false, fullResult: false","  };","","  var buffer = null","","  if(Array.isArray(commands)) {","    buffer = [];","","    for(var i = 0; i < commands.length; i++) {","      buffer.push(commands[i].toBin());","    }","","    // Get the requestId","    operation.requestId = commands[commands.length - 1].requestId;","  } else {","    operation.requestId = commands.requestId;","    buffer = commands.toBin();","  }","","  // Set the buffers","  operation.buffer = buffer;","","  // Set the options for the parsing","  operation.promoteLongs = typeof options.promoteLongs == 'boolean' ? options.promoteLongs : true;","  operation.promoteValues = typeof options.promoteValues == 'boolean' ? options.promoteValues : true;","  operation.promoteBuffers = typeof options.promoteBuffers == 'boolean' ? options.promoteBuffers : false;","  operation.raw = typeof options.raw == 'boolean' ? options.raw : false;","  operation.immediateRelease = typeof options.immediateRelease == 'boolean' ? options.immediateRelease : false;","  operation.documentsReturnedIn = options.documentsReturnedIn;","  operation.command = typeof options.command == 'boolean' ? options.command : false;","  operation.fullResult = typeof options.fullResult == 'boolean' ? options.fullResult : false;","  operation.noResponse = typeof options.noResponse == 'boolean' ? options.noResponse : false;","  // operation.requestId = options.requestId;","","  // Optional per operation socketTimeout","  operation.socketTimeout = options.socketTimeout;","  operation.monitoring = options.monitoring;","  // Custom socket Timeout","  if(options.socketTimeout) {","    operation.socketTimeout = options.socketTimeout;","  }","","  // We need to have a callback function unless the message returns no response","  if(!(typeof cb == 'function') && !options.noResponse) {","    throw new MongoError('write method must provide a callback');","  }","","  // If we have a monitoring operation schedule as the very first operation","  // Otherwise add to back of queue","  if(options.monitoring) {","    this.queue.unshift(operation);","  } else {","    this.queue.push(operation);","  }","","  // Attempt to execute the operation","  if(!self.executing) {","    process.nextTick(function() {","      _execute(self)();","    });","  }","}","","// Remove connection method","function remove(connection, connections) {","  for(var i = 0; i < connections.length; i++) {","    if(connections[i] === connection) {","      connections.splice(i, 1);","      return true;","    }","  }","}","","function removeConnection(self, connection) {","  if(remove(connection, self.availableConnections)) return;","  if(remove(connection, self.inUseConnections)) return;","  if(remove(connection, self.connectingConnections)) return;","  if(remove(connection, self.nonAuthenticatedConnections)) return;","}","","// All event handlers","var handlers = [\"close\", \"message\", \"error\", \"timeout\", \"parseError\", \"connect\"];","","function _createConnection(self) {","  if(self.state == DESTROYED || self.state == DESTROYING) {","    return;","  }","  var connection = new Connection(messageHandler(self), self.options);","","  // Push the connection","  self.connectingConnections.push(connection);","","  // Handle any errors","  var tempErrorHandler = function(_connection) {","    return function() {","      // Destroy the connection","      _connection.destroy();","      // Remove the connection from the connectingConnections list","      removeConnection(self, _connection);","      // Start reconnection attempts","      if(!self.reconnectId && self.options.reconnect) {","        self.reconnectId = setTimeout(attemptReconnect(self), self.options.reconnectInterval);","      }","    }","  }","","  // Handle successful connection","  var tempConnectHandler = function(_connection) {","    return function() {","      // Destroyed state return","      if(self.state == DESTROYED || self.state == DESTROYING) {","        // Remove the connection from the list","        removeConnection(self, _connection);","        return _connection.destroy();","      }","","      // Destroy all event emitters","      handlers.forEach(function(e) {","        _connection.removeAllListeners(e);","      });","","      // Add the final handlers","      _connection.once('close', connectionFailureHandler(self, 'close'));","      _connection.once('error', connectionFailureHandler(self, 'error'));","      _connection.once('timeout', connectionFailureHandler(self, 'timeout'));","      _connection.once('parseError', connectionFailureHandler(self, 'parseError'));","","      // Signal","      reauthenticate(self, _connection, function(err) {","        if(self.state == DESTROYED || self.state == DESTROYING) {","          return _connection.destroy();","        }","        // Remove the connection from the connectingConnections list","        removeConnection(self, _connection);","","        // Handle error","        if(err) {","          return _connection.destroy();","        }","","        // If we are c at the moment","        // Do not automatially put in available connections","        // As we need to apply the credentials first","        if(self.authenticating) {","          self.nonAuthenticatedConnections.push(_connection);","        } else {","          // Push to available","          self.availableConnections.push(_connection);","          // Execute any work waiting","          _execute(self)();","        }","      });","    }","  }","","  // Add all handlers","  connection.once('close', tempErrorHandler(connection));","  connection.once('error', tempErrorHandler(connection));","  connection.once('timeout', tempErrorHandler(connection));","  connection.once('parseError', tempErrorHandler(connection));","  connection.once('connect', tempConnectHandler(connection));","","  // Start connection","  connection.connect();","}","","function flushMonitoringOperations(queue) {","  for(var i = 0; i < queue.length; i++) {","    if(queue[i].monitoring) {","      var workItem = queue[i];","      queue.splice(i, 1);","      workItem.cb(new MongoError({ message: 'no connection available for monitoring', driver:true }));","    }","  }","}","","function _execute(self) {","  return function() {","    if(self.state == DESTROYED) return;","    // Already executing, skip","    if(self.executing) return;","    // Set pool as executing","    self.executing = true;","","    // Wait for auth to clear before continuing","    function waitForAuth(cb) {","      if(!self.authenticating) return cb();","      // Wait for a milisecond and try again","      setTimeout(function() {","        waitForAuth(cb);","      }, 1);","    }","","    // Block on any auth in process","    waitForAuth(function() {","      // New pool connections are in progress, wait them to finish","      // before executing any more operation to ensure distribution of","      // operations","      if(self.connectingConnections.length > 0) {","        return;","      }","","      // As long as we have available connections","      while(true) {","        // Total availble connections","        var totalConnections = self.availableConnections.length","          + self.connectingConnections.length","          + self.inUseConnections.length;","","        // No available connections available, flush any monitoring ops","        if(self.availableConnections.length == 0) {","          // Flush any monitoring operations","          flushMonitoringOperations(self.queue);","          break;","        }","","        // No queue break","        if(self.queue.length == 0) {","          break;","        }","","        // Get a connection","        var connection = null;","","        // Locate all connections that have no work","        var connections = [];","        // Get a list of all connections","        for(var i = 0; i < self.availableConnections.length; i++) {","          if(self.availableConnections[i].workItems.length == 0) {","            connections.push(self.availableConnections[i]);","          }","        }","","        // No connection found that has no work on it, just pick one for pipelining","        if(connections.length == 0) {","          connection = self.availableConnections[self.connectionIndex++ % self.availableConnections.length];","        } else {","          connection = connections[self.connectionIndex++ % connections.length];","        }","","        // Is the connection connected","        if(connection.isConnected()) {","          // Get the next work item","          var workItem = self.queue.shift();","","          // If we are monitoring we need to use a connection that is not","          // running another operation to avoid socket timeout changes","          // affecting an existing operation","          if (workItem.monitoring) {","            var foundValidConnection = false;","","            for (var i = 0; i < self.availableConnections.length; i++) {","              // If the connection is connected","              // And there are no pending workItems on it","              // Then we can safely use it for monitoring.","              if(self.availableConnections[i].isConnected()","                && self.availableConnections[i].workItems.length == 0) {","                  foundValidConnection = true;","                  connection = self.availableConnections[i];","                  break;","                }","            }","","            // No safe connection found, attempt to grow the connections","            // if possible and break from the loop","            if(!foundValidConnection) {","              // Put workItem back on the queue","              self.queue.unshift(workItem);","","              // Attempt to grow the pool if it's not yet maxsize","              if(totalConnections < self.options.size","                && self.queue.length > 0) {","                // Create a new connection","                _createConnection(self);","              }","","              // Re-execute the operation","              setTimeout(function() {","                _execute(self)();","              }, 10);","","              break;","            }","          }","","          // Don't execute operation until we have a full pool","          if(totalConnections < self.options.size) {","            // Connection has work items, then put it back on the queue","            // and create a new connection","            if(connection.workItems.length > 0) {","              // Lets put the workItem back on the list","              self.queue.unshift(workItem);","              // Create a new connection","              _createConnection(self);","              // Break from the loop","              break;","            }","          }","","          // Get actual binary commands","          var buffer = workItem.buffer;","","          // Set current status of authentication process","          workItem.authenticating = self.authenticating;","          workItem.authenticatingTimestamp = self.authenticatingTimestamp;","","          // If we are monitoring take the connection of the availableConnections","          if (workItem.monitoring) {","            moveConnectionBetween(connection, self.availableConnections, self.inUseConnections);","          }","","          // Track the executing commands on the mongo server","          // as long as there is an expected response","          if (! workItem.noResponse) {","            connection.workItems.push(workItem);","          }","","          // We have a custom socketTimeout","          if(!workItem.immediateRelease && typeof workItem.socketTimeout == 'number') {","            connection.setSocketTimeout(workItem.socketTimeout);","          }","","          // Put operation on the wire","          if(Array.isArray(buffer)) {","            for(var i = 0; i < buffer.length; i++) {","              connection.write(buffer[i])","            }","          } else {","            connection.write(buffer);","          }","","          if(workItem.immediateRelease && self.authenticating) {","            self.nonAuthenticatedConnections.push(connection);","          }","        } else {","          // Remove the disconnected connection","          removeConnection(self, connection);","          // Flush any monitoring operations in the queue, failing fast","          flushMonitoringOperations(self.queue);","        }","      }","    });","","    self.executing = false;","  }","}","","// Make execution loop available for testing","Pool._execute = _execute;","","/**"," * A server connect event, used to verify that the connection is up and running"," *"," * @event Pool#connect"," * @type {Pool}"," */","","/**"," * A server reconnect event, used to verify that pool reconnected."," *"," * @event Pool#reconnect"," * @type {Pool}"," */","","/**"," * The server connection closed, all pool connections closed"," *"," * @event Pool#close"," * @type {Pool}"," */","","/**"," * The server connection caused an error, all pool connections closed"," *"," * @event Pool#error"," * @type {Pool}"," */","","/**"," * The server connection timed out, all pool connections closed"," *"," * @event Pool#timeout"," * @type {Pool}"," */","","/**"," * The driver experienced an invalid message, all pool connections closed"," *"," * @event Pool#parseError"," * @type {Pool}"," */","","/**"," * The driver attempted to reconnect"," *"," * @event Pool#attemptReconnect"," * @type {Pool}"," */","","/**"," * The driver exhausted all reconnect attempts"," *"," * @event Pool#reconnectFailed"," * @type {Pool}"," */","","module.exports = Pool;",""],"l":{"3":1,"13":1,"20":1,"21":1,"22":1,"23":1,"24":1,"26":1,"62":1,"64":2,"66":2,"94":2,"96":2,"97":2,"99":2,"102":0,"106":2,"108":2,"110":2,"111":2,"112":2,"114":2,"116":2,"119":2,"126":2,"129":2,"130":2,"131":2,"132":2,"134":2,"136":2,"139":1,"141":1,"143":4,"146":1,"148":4,"151":1,"153":4,"156":1,"157":4,"166":4,"167":4,"168":4,"170":0,"175":1,"176":0,"178":0,"179":0,"181":0,"182":0,"186":0,"189":0,"193":1,"194":0,"197":0,"198":0,"202":0,"207":0,"212":1,"214":1,"216":0,"218":0,"221":0,"223":0,"225":0,"230":0,"233":1,"234":8,"235":2,"236":2,"238":2,"241":2,"244":2,"245":0,"247":0,"251":2,"252":0,"256":0,"257":0,"259":0,"261":0,"266":2,"267":2,"268":2,"273":2,"274":2,"278":0,"279":0,"284":1,"285":0,"286":0,"287":0,"290":0,"291":0,"292":0,"296":1,"297":0,"298":0,"299":0,"301":0,"303":0,"305":0,"307":0,"309":0,"312":0,"318":1,"319":0,"321":0,"324":0,"325":0,"329":0,"330":0,"334":0,"337":0,"338":0,"339":0,"340":0,"343":0,"345":0,"347":0,"349":0,"351":0,"353":0,"359":0,"361":0,"362":0,"363":0,"364":0,"366":0,"368":0,"372":1,"373":0,"375":0,"376":0,"377":0,"381":1,"382":2,"384":0,"387":0,"388":0,"390":0,"392":0,"398":0,"402":0,"403":0,"407":0,"408":0,"413":1,"415":0,"416":0,"417":0,"423":0,"427":0,"431":0,"433":0,"435":0,"439":0,"441":0,"442":0,"443":0,"445":0,"447":0,"449":0,"451":0,"457":1,"459":0,"460":0,"461":0,"466":0,"469":0,"471":0,"472":0,"473":0,"478":0,"479":0,"481":0,"483":0,"487":0,"489":0,"493":0,"496":0,"507":1,"508":2,"518":1,"519":0,"529":1,"530":0,"538":1,"540":0,"541":0,"545":0,"549":0,"550":0,"554":0,"555":0,"559":0,"567":1,"568":0,"576":1,"577":0,"584":1,"585":2,"586":0,"589":2,"591":2,"593":2,"595":2,"597":2,"599":2,"600":0,"605":0,"607":0,"610":0,"613":0,"617":0,"618":0,"621":0,"623":0,"625":0,"629":0,"630":0,"633":0,"635":0,"637":0,"640":0,"643":0,"646":0,"652":2,"653":2,"654":2,"655":2,"657":2,"658":2,"661":0,"662":0,"675":1,"676":0,"677":0,"678":0,"681":0,"682":0,"686":0,"687":0,"690":1,"692":0,"694":0,"696":0,"697":0,"699":0,"700":0,"701":0,"705":0,"706":0,"707":0,"710":0,"713":0,"715":0,"717":0,"719":0,"721":0,"722":0,"726":0,"728":0,"735":1,"736":0,"737":0,"738":0,"743":0,"745":0,"748":0,"750":0,"761":1,"762":0,"763":0,"764":0,"767":0,"768":0,"772":0,"775":0,"776":0,"778":0,"781":0,"782":0,"785":0,"786":0,"788":0,"789":0,"790":0,"800":1,"802":0,"805":0,"806":0,"811":1,"814":1,"816":0,"818":0,"819":0,"822":0,"826":0,"827":0,"828":0,"829":0,"832":0,"839":1,"840":0,"842":0,"844":0,"847":0,"849":0,"853":0,"857":0,"858":0,"863":0,"864":0,"868":1,"869":0,"871":0,"873":0,"879":0,"882":0,"883":0,"887":0,"892":0,"894":0,"899":0,"907":1,"908":0,"910":0,"911":0,"915":0,"918":0,"920":0,"921":0,"922":0,"924":0,"925":0,"930":0,"933":0,"936":0,"937":0,"939":0,"941":0,"942":0,"948":0,"952":0,"954":0,"955":0,"957":0,"958":0,"962":0,"964":0,"965":0,"969":0,"972":0,"973":0,"974":0,"975":0,"976":0,"977":0,"978":0,"979":0,"980":0,"984":0,"985":0,"987":0,"988":0,"992":0,"993":0,"998":0,"999":0,"1001":0,"1005":0,"1006":0,"1007":0,"1013":1,"1014":6,"1015":2,"1016":2,"1017":2,"1022":1,"1023":2,"1024":2,"1025":2,"1026":0,"1030":1,"1032":1,"1033":0,"1034":0,"1036":0,"1039":0,"1042":0,"1043":0,"1045":0,"1047":0,"1049":0,"1050":0,"1056":0,"1057":0,"1059":0,"1061":0,"1062":0,"1066":0,"1067":0,"1071":0,"1072":0,"1073":0,"1074":0,"1077":0,"1078":0,"1079":0,"1082":0,"1085":0,"1086":0,"1092":0,"1093":0,"1096":0,"1098":0,"1105":0,"1106":0,"1107":0,"1108":0,"1109":0,"1112":0,"1115":1,"1116":0,"1117":0,"1118":0,"1119":0,"1120":0,"1125":1,"1126":0,"1127":0,"1129":0,"1131":0,"1134":1,"1135":0,"1137":0,"1138":0,"1143":0,"1147":0,"1148":0,"1152":0,"1154":0,"1159":0,"1161":0,"1162":0,"1166":0,"1167":0,"1171":0,"1174":0,"1176":0,"1177":0,"1178":0,"1183":0,"1184":0,"1186":0,"1190":0,"1192":0,"1197":0,"1198":0,"1200":0,"1204":0,"1206":0,"1207":0,"1208":0,"1214":0,"1216":0,"1219":0,"1222":0,"1226":0,"1227":0,"1230":0,"1235":0,"1238":0,"1240":0,"1242":0,"1244":0,"1249":0,"1252":0,"1253":0,"1256":0,"1257":0,"1262":0,"1263":0,"1267":0,"1268":0,"1272":0,"1273":0,"1274":0,"1277":0,"1280":0,"1281":0,"1285":0,"1287":0,"1292":0,"1297":1,"1355":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/connection/command_result.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/connection/command_result.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":1,"8":0,"9":1},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":20},"end":{"line":10,"column":58}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":33},"end":{"line":21,"column":44}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":35},"end":{"line":30,"column":46}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":14,"column":1}},"2":{"start":{"line":11,"column":2},"end":{"line":11,"column":23}},"3":{"start":{"line":12,"column":2},"end":{"line":12,"column":31}},"4":{"start":{"line":13,"column":2},"end":{"line":13,"column":25}},"5":{"start":{"line":21,"column":0},"end":{"line":23,"column":1}},"6":{"start":{"line":22,"column":2},"end":{"line":22,"column":21}},"7":{"start":{"line":30,"column":0},"end":{"line":32,"column":1}},"8":{"start":{"line":31,"column":2},"end":{"line":31,"column":39}},"9":{"start":{"line":34,"column":0},"end":{"line":34,"column":31}}},"branchMap":{},"code":["\"use strict\";","","/**"," * Creates a new CommandResult instance"," * @class"," * @param {object} result CommandResult object"," * @param {Connection} connection A connection instance associated with this result"," * @return {CommandResult} A cursor instance"," */","var CommandResult = function(result, connection, message) {","  this.result = result;","  this.connection = connection;","  this.message = message;","}","","/**"," * Convert CommandResult to JSON"," * @method"," * @return {object}"," */","CommandResult.prototype.toJSON = function() {","  return this.result;","}","","/**"," * Convert CommandResult to String representation"," * @method"," * @return {string}"," */","CommandResult.prototype.toString = function() {","  return JSON.stringify(this.toJSON());","}","","module.exports = CommandResult;",""],"l":{"10":1,"11":0,"12":0,"13":0,"21":1,"22":0,"30":1,"31":0,"34":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/topologies/shared.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/topologies/shared.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":2,"13":2,"14":0,"15":2,"16":2,"17":2,"18":0,"19":0,"20":0,"21":2,"22":1,"23":0,"24":1,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":0,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1},"b":{"1":[0,0],"2":[0,2],"3":[0,2],"4":[2,0],"5":[2,0],"6":[0,2],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[1,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0]},"f":{"1":0,"2":2,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"emitSDAMEvent","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":49}}},"2":{"name":"createClientInfo","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":35}}},"3":{"name":"clone","line":59,"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":23}}},"4":{"name":"(anonymous_4)","line":63,"loc":{"start":{"line":63,"column":29},"end":{"line":63,"column":44}}},"5":{"name":"(anonymous_5)","line":74,"loc":{"start":{"line":74,"column":35},"end":{"line":74,"column":63}}},"6":{"name":"(anonymous_6)","line":87,"loc":{"start":{"line":87,"column":37},"end":{"line":87,"column":52}}},"7":{"name":"(anonymous_7)","line":100,"loc":{"start":{"line":100,"column":37},"end":{"line":100,"column":65}}},"8":{"name":"(anonymous_8)","line":113,"loc":{"start":{"line":113,"column":22},"end":{"line":113,"column":64}}},"9":{"name":"(anonymous_9)","line":120,"loc":{"start":{"line":120,"column":22},"end":{"line":120,"column":47}}},"10":{"name":"(anonymous_10)","line":134,"loc":{"start":{"line":134,"column":25},"end":{"line":134,"column":40}}},"11":{"name":"(anonymous_11)","line":135,"loc":{"start":{"line":135,"column":9},"end":{"line":135,"column":28}}},"12":{"name":"(anonymous_12)","line":144,"loc":{"start":{"line":144,"column":72},"end":{"line":144,"column":89}}},"13":{"name":"assign","line":184,"loc":{"start":{"line":184,"column":45},"end":{"line":184,"column":69}}},"14":{"name":"(anonymous_14)","line":210,"loc":{"start":{"line":210,"column":19},"end":{"line":210,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":29}},"2":{"start":{"line":10,"column":0},"end":{"line":14,"column":1}},"3":{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":34}},"5":{"start":{"line":17,"column":0},"end":{"line":17,"column":58}},"6":{"start":{"line":18,"column":0},"end":{"line":18,"column":74}},"7":{"start":{"line":19,"column":0},"end":{"line":19,"column":21}},"8":{"start":{"line":20,"column":0},"end":{"line":20,"column":28}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":32}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":27}},"11":{"start":{"line":24,"column":0},"end":{"line":57,"column":1}},"12":{"start":{"line":26,"column":2},"end":{"line":37,"column":3}},"13":{"start":{"line":40,"column":2},"end":{"line":44,"column":3}},"14":{"start":{"line":41,"column":4},"end":{"line":41,"column":88}},"15":{"start":{"line":42,"column":9},"end":{"line":44,"column":3}},"16":{"start":{"line":43,"column":4},"end":{"line":43,"column":40}},"17":{"start":{"line":47,"column":2},"end":{"line":54,"column":3}},"18":{"start":{"line":49,"column":4},"end":{"line":49,"column":45}},"19":{"start":{"line":51,"column":4},"end":{"line":51,"column":96}},"20":{"start":{"line":53,"column":4},"end":{"line":53,"column":47}},"21":{"start":{"line":56,"column":2},"end":{"line":56,"column":20}},"22":{"start":{"line":59,"column":0},"end":{"line":61,"column":1}},"23":{"start":{"line":60,"column":2},"end":{"line":60,"column":44}},"24":{"start":{"line":63,"column":0},"end":{"line":72,"column":1}},"25":{"start":{"line":64,"column":2},"end":{"line":69,"column":3}},"26":{"start":{"line":65,"column":4},"end":{"line":68,"column":5}},"27":{"start":{"line":71,"column":2},"end":{"line":71,"column":34}},"28":{"start":{"line":74,"column":0},"end":{"line":85,"column":1}},"29":{"start":{"line":75,"column":2},"end":{"line":84,"column":3}},"30":{"start":{"line":77,"column":4},"end":{"line":81,"column":7}},"31":{"start":{"line":83,"column":4},"end":{"line":83,"column":43}},"32":{"start":{"line":87,"column":0},"end":{"line":98,"column":1}},"33":{"start":{"line":88,"column":2},"end":{"line":95,"column":3}},"34":{"start":{"line":89,"column":4},"end":{"line":94,"column":5}},"35":{"start":{"line":97,"column":2},"end":{"line":97,"column":36}},"36":{"start":{"line":100,"column":0},"end":{"line":111,"column":1}},"37":{"start":{"line":101,"column":2},"end":{"line":110,"column":3}},"38":{"start":{"line":103,"column":4},"end":{"line":107,"column":7}},"39":{"start":{"line":109,"column":4},"end":{"line":109,"column":43}},"40":{"start":{"line":113,"column":0},"end":{"line":118,"column":1}},"41":{"start":{"line":114,"column":2},"end":{"line":114,"column":59}},"42":{"start":{"line":115,"column":2},"end":{"line":115,"column":48}},"43":{"start":{"line":116,"column":2},"end":{"line":116,"column":41}},"44":{"start":{"line":116,"column":29},"end":{"line":116,"column":41}},"45":{"start":{"line":117,"column":2},"end":{"line":117,"column":15}},"46":{"start":{"line":120,"column":0},"end":{"line":132,"column":1}},"47":{"start":{"line":121,"column":2},"end":{"line":123,"column":3}},"48":{"start":{"line":122,"column":4},"end":{"line":122,"column":29}},"49":{"start":{"line":125,"column":2},"end":{"line":125,"column":33}},"50":{"start":{"line":125,"column":16},"end":{"line":125,"column":33}},"51":{"start":{"line":126,"column":2},"end":{"line":126,"column":63}},"52":{"start":{"line":126,"column":43},"end":{"line":126,"column":63}},"53":{"start":{"line":127,"column":2},"end":{"line":127,"column":70}},"54":{"start":{"line":127,"column":54},"end":{"line":127,"column":70}},"55":{"start":{"line":128,"column":2},"end":{"line":128,"column":43}},"56":{"start":{"line":128,"column":24},"end":{"line":128,"column":43}},"57":{"start":{"line":129,"column":2},"end":{"line":129,"column":46}},"58":{"start":{"line":129,"column":25},"end":{"line":129,"column":46}},"59":{"start":{"line":130,"column":2},"end":{"line":130,"column":46}},"60":{"start":{"line":130,"column":27},"end":{"line":130,"column":46}},"61":{"start":{"line":131,"column":2},"end":{"line":131,"column":19}},"62":{"start":{"line":134,"column":0},"end":{"line":181,"column":1}},"63":{"start":{"line":135,"column":2},"end":{"line":180,"column":4}},"64":{"start":{"line":136,"column":4},"end":{"line":136,"column":43}},"65":{"start":{"line":136,"column":36},"end":{"line":136,"column":43}},"66":{"start":{"line":138,"column":4},"end":{"line":138,"column":37}},"67":{"start":{"line":141,"column":4},"end":{"line":141,"column":79}},"68":{"start":{"line":144,"column":4},"end":{"line":179,"column":7}},"69":{"start":{"line":145,"column":6},"end":{"line":170,"column":7}},"70":{"start":{"line":147,"column":8},"end":{"line":147,"column":39}},"71":{"start":{"line":150,"column":8},"end":{"line":150,"column":53}},"72":{"start":{"line":153,"column":8},"end":{"line":153,"column":125}},"73":{"start":{"line":156,"column":8},"end":{"line":161,"column":9}},"74":{"start":{"line":158,"column":10},"end":{"line":160,"column":13}},"75":{"start":{"line":164,"column":8},"end":{"line":164,"column":35}},"76":{"start":{"line":167,"column":8},"end":{"line":167,"column":45}},"77":{"start":{"line":169,"column":8},"end":{"line":169,"column":119}},"78":{"start":{"line":173,"column":6},"end":{"line":175,"column":7}},"79":{"start":{"line":174,"column":8},"end":{"line":174,"column":32}},"80":{"start":{"line":178,"column":6},"end":{"line":178,"column":97}},"81":{"start":{"line":184,"column":0},"end":{"line":206,"column":1}},"82":{"start":{"line":185,"column":2},"end":{"line":187,"column":3}},"83":{"start":{"line":186,"column":4},"end":{"line":186,"column":67}},"84":{"start":{"line":189,"column":2},"end":{"line":189,"column":26}},"85":{"start":{"line":190,"column":2},"end":{"line":204,"column":3}},"86":{"start":{"line":191,"column":4},"end":{"line":191,"column":34}},"87":{"start":{"line":192,"column":4},"end":{"line":194,"column":5}},"88":{"start":{"line":193,"column":6},"end":{"line":193,"column":15}},"89":{"start":{"line":196,"column":4},"end":{"line":196,"column":52}},"90":{"start":{"line":197,"column":4},"end":{"line":203,"column":5}},"91":{"start":{"line":198,"column":6},"end":{"line":198,"column":41}},"92":{"start":{"line":199,"column":6},"end":{"line":199,"column":70}},"93":{"start":{"line":200,"column":6},"end":{"line":202,"column":7}},"94":{"start":{"line":201,"column":8},"end":{"line":201,"column":42}},"95":{"start":{"line":205,"column":2},"end":{"line":205,"column":12}},"96":{"start":{"line":210,"column":0},"end":{"line":216,"column":1}},"97":{"start":{"line":211,"column":2},"end":{"line":211,"column":16}},"98":{"start":{"line":212,"column":2},"end":{"line":214,"column":3}},"99":{"start":{"line":213,"column":4},"end":{"line":213,"column":31}},"100":{"start":{"line":215,"column":2},"end":{"line":215,"column":14}},"101":{"start":{"line":218,"column":0},"end":{"line":218,"column":54}},"102":{"start":{"line":219,"column":0},"end":{"line":219,"column":49}},"103":{"start":{"line":220,"column":0},"end":{"line":220,"column":75}},"104":{"start":{"line":221,"column":0},"end":{"line":221,"column":79}},"105":{"start":{"line":222,"column":0},"end":{"line":222,"column":43}},"106":{"start":{"line":223,"column":0},"end":{"line":223,"column":31}},"107":{"start":{"line":224,"column":0},"end":{"line":224,"column":51}},"108":{"start":{"line":225,"column":0},"end":{"line":225,"column":29}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":2}},{"start":{"line":11,"column":2},"end":{"line":11,"column":2}}]},"2":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":40},"end":{"line":26,"column":65}},{"start":{"line":26,"column":68},"end":{"line":37,"column":3}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"4":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":5},"end":{"line":40,"column":24}},{"start":{"line":40,"column":28},"end":{"line":40,"column":77}}]},"5":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":9},"end":{"line":42,"column":9}},{"start":{"line":42,"column":9},"end":{"line":42,"column":9}}]},"6":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":2}},{"start":{"line":47,"column":2},"end":{"line":47,"column":2}}]},"7":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":40},"end":{"line":51,"column":77}},{"start":{"line":51,"column":80},"end":{"line":51,"column":95}}]},"8":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"9":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":2},"end":{"line":75,"column":2}},{"start":{"line":75,"column":2},"end":{"line":75,"column":2}}]},"10":{"line":78,"type":"cond-expr","locations":[{"start":{"line":78,"column":44},"end":{"line":78,"column":61}},{"start":{"line":78,"column":64},"end":{"line":78,"column":71}}]},"11":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":2},"end":{"line":88,"column":2}},{"start":{"line":88,"column":2},"end":{"line":88,"column":2}}]},"12":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":2},"end":{"line":101,"column":2}},{"start":{"line":101,"column":2},"end":{"line":101,"column":2}}]},"13":{"line":104,"type":"cond-expr","locations":[{"start":{"line":104,"column":44},"end":{"line":104,"column":61}},{"start":{"line":104,"column":64},"end":{"line":104,"column":71}}]},"14":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":2},"end":{"line":116,"column":2}},{"start":{"line":116,"column":2},"end":{"line":116,"column":2}}]},"15":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":2},"end":{"line":121,"column":2}},{"start":{"line":121,"column":2},"end":{"line":121,"column":2}}]},"16":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":2},"end":{"line":125,"column":2}},{"start":{"line":125,"column":2},"end":{"line":125,"column":2}}]},"17":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":2},"end":{"line":126,"column":2}},{"start":{"line":126,"column":2},"end":{"line":126,"column":2}}]},"18":{"line":126,"type":"binary-expr","locations":[{"start":{"line":126,"column":5},"end":{"line":126,"column":22}},{"start":{"line":126,"column":26},"end":{"line":126,"column":41}}]},"19":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":2},"end":{"line":127,"column":2}},{"start":{"line":127,"column":2},"end":{"line":127,"column":2}}]},"20":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":5},"end":{"line":127,"column":22}},{"start":{"line":127,"column":26},"end":{"line":127,"column":52}}]},"21":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":2},"end":{"line":128,"column":2}},{"start":{"line":128,"column":2},"end":{"line":128,"column":2}}]},"22":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":129,"column":2}},{"start":{"line":129,"column":2},"end":{"line":129,"column":2}}]},"23":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":2},"end":{"line":130,"column":2}},{"start":{"line":130,"column":2},"end":{"line":130,"column":2}}]},"24":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":136,"column":4}},{"start":{"line":136,"column":4},"end":{"line":136,"column":4}}]},"25":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":6},"end":{"line":145,"column":6}},{"start":{"line":145,"column":6},"end":{"line":145,"column":6}}]},"26":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":8},"end":{"line":156,"column":8}},{"start":{"line":156,"column":8},"end":{"line":156,"column":8}}]},"27":{"line":159,"type":"cond-expr","locations":[{"start":{"line":159,"column":98},"end":{"line":159,"column":110}},{"start":{"line":159,"column":113},"end":{"line":159,"column":134}}]},"28":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":6},"end":{"line":173,"column":6}},{"start":{"line":173,"column":6},"end":{"line":173,"column":6}}]},"29":{"line":184,"type":"cond-expr","locations":[{"start":{"line":184,"column":29},"end":{"line":184,"column":42}},{"start":{"line":184,"column":45},"end":{"line":206,"column":1}}]},"30":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":2},"end":{"line":185,"column":2}},{"start":{"line":185,"column":2},"end":{"line":185,"column":2}}]},"31":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":6},"end":{"line":185,"column":26}},{"start":{"line":185,"column":30},"end":{"line":185,"column":45}}]},"32":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":4},"end":{"line":192,"column":4}},{"start":{"line":192,"column":4},"end":{"line":192,"column":4}}]},"33":{"line":192,"type":"binary-expr","locations":[{"start":{"line":192,"column":8},"end":{"line":192,"column":32}},{"start":{"line":192,"column":36},"end":{"line":192,"column":55}}]},"34":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":6},"end":{"line":200,"column":6}},{"start":{"line":200,"column":6},"end":{"line":200,"column":6}}]},"35":{"line":200,"type":"binary-expr","locations":[{"start":{"line":200,"column":10},"end":{"line":200,"column":28}},{"start":{"line":200,"column":32},"end":{"line":200,"column":47}}]}},"code":["\"use strict\"","","var os = require('os'),","  f = require('util').format;","","/**"," * Emit event if it exists"," * @method"," */","function emitSDAMEvent(self, event, description) {","  if(self.listeners(event).length > 0) {","    self.emit(event, description);","  }","}","","// Get package.json variable","var driverVersion = require('../../package.json').version;","var nodejsversion = f('Node.js %s, %s', process.version, os.endianness());","var type = os.type();","var name = process.platform;","var architecture = process.arch;","var release = os.release();","","function createClientInfo(options) {","  // Build default client information","  var clientInfo = options.clientInfo ? clone(options.clientInfo) : {","    driver: {","      name: \"nodejs-core\",","      version: driverVersion","    },","    os: {","      type: type,","      name: name,","      architecture: architecture,","      version: release","    }","  }","","  // Is platform specified","  if(clientInfo.platform && clientInfo.platform.indexOf('mongodb-core') == -1) {","    clientInfo.platform = f('%s, mongodb-core: %s', clientInfo.platform, driverVersion);","  } else if(!clientInfo.platform){","    clientInfo.platform = nodejsversion;","  }","","  // Do we have an application specific string","  if(options.appname) {","    // Cut at 128 bytes","    var buffer = new Buffer(options.appname);","    // Return the truncated appname","    var appname = buffer.length > 128 ? buffer.slice(0, 128).toString('utf8') : options.appname;","    // Add to the clientInfo","    clientInfo.application = { name: appname };","  }","","  return clientInfo;","}","","function clone(object) {","  return JSON.parse(JSON.stringify(object));","}","","var getPreviousDescription = function(self) {","  if(!self.s.serverDescription) {","    self.s.serverDescription = {","      address: self.name,","      arbiters: [], hosts: [], passives: [], type: 'Unknown'","    }","  }","","  return self.s.serverDescription;","}","","var emitServerDescriptionChanged = function(self, description) {","  if(self.listeners('serverDescriptionChanged').length > 0) {","    // Emit the server description changed events","    self.emit('serverDescriptionChanged', {","      topologyId: self.s.topologyId != -1 ? self.s.topologyId : self.id, address: self.name,","      previousDescription: getPreviousDescription(self),","      newDescription: description","    });","","    self.s.serverDescription = description;","  }","}","","var getPreviousTopologyDescription = function(self) {","  if(!self.s.topologyDescription) {","    self.s.topologyDescription = {","      topologyType: 'Unknown',","      servers: [{","        address: self.name, arbiters: [], hosts: [], passives: [], type: 'Unknown'","      }]","    }","  }","","  return self.s.topologyDescription;","}","","var emitTopologyDescriptionChanged = function(self, description) {","  if(self.listeners('topologyDescriptionChanged').length > 0) {","    // Emit the server description changed events","    self.emit('topologyDescriptionChanged', {","      topologyId: self.s.topologyId != -1 ? self.s.topologyId : self.id, address: self.name,","      previousDescription: getPreviousTopologyDescription(self),","      newDescription: description","    });","","    self.s.serverDescription = description;","  }","}","","var changedIsMaster = function(self, currentIsmaster, ismaster) {","  var currentType = getTopologyType(self, currentIsmaster);","  var newType = getTopologyType(self, ismaster);","  if(newType != currentType) return true;","  return false;","}","","var getTopologyType = function(self, ismaster) {","  if(!ismaster) {","    ismaster = self.ismaster;","  }","","  if(!ismaster) return 'Unknown';","  if(ismaster.ismaster && !ismaster.hosts) return 'Standalone';","  if(ismaster.ismaster && ismaster.msg == 'isdbgrid') return 'Mongos';","  if(ismaster.ismaster) return 'RSPrimary';","  if(ismaster.secondary) return 'RSSecondary';","  if(ismaster.arbiterOnly) return 'RSArbiter';","  return 'Unknown';","}","","var inquireServerState = function(self) {","  return function(callback) {","    if(self.s.state == 'destroyed') return;","    // Record response time","    var start = new Date().getTime();","","    // emitSDAMEvent","    emitSDAMEvent(self, 'serverHeartbeatStarted', { connectionId: self.name });","","    // Attempt to execute ismaster command","    self.command('admin.$cmd', { ismaster:true },  { monitoring:true }, function(err, r) {","      if(!err) {","        // Legacy event sender","        self.emit('ismaster', r, self);","","        // Calculate latencyMS","        var latencyMS = new Date().getTime() - start;","","        // Server heart beat event","        emitSDAMEvent(self, 'serverHeartbeatSucceeded', { durationMS: latencyMS, reply: r.result, connectionId: self.name });","","        // Did the server change","        if(changedIsMaster(self, self.s.ismaster, r.result)) {","          // Emit server description changed if something listening","          emitServerDescriptionChanged(self, {","            address: self.name, arbiters: [], hosts: [], passives: [], type: !self.s.inTopology ? 'Standalone' : getTopologyType(self)","          });","        }","","        // Updat ismaster view","        self.s.ismaster = r.result;","","        // Set server response time","        self.s.isMasterLatencyMS = latencyMS;","      } else {","        emitSDAMEvent(self, 'serverHeartbeatFailed', { durationMS: latencyMS, failure: err, connectionId: self.name });","      }","","      // Peforming an ismaster monitoring callback operation","      if(typeof callback == 'function') {","        return callback(err, r);","      }","","      // Perform another sweep","      self.s.inquireServerStateTimeout = setTimeout(inquireServerState(self), self.s.haInterval);","    });","  };","}","","// Object.assign method or polyfille","var assign = Object.assign ? Object.assign : function assign(target) {","  if (target === undefined || target === null) {","    throw new TypeError('Cannot convert first argument to object');","  }","","  var to = Object(target);","  for (var i = 1; i < arguments.length; i++) {","    var nextSource = arguments[i];","    if (nextSource === undefined || nextSource === null) {","      continue;","    }","","    var keysArray = Object.keys(Object(nextSource));","    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {","      var nextKey = keysArray[nextIndex];","      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);","      if (desc !== undefined && desc.enumerable) {","        to[nextKey] = nextSource[nextKey];","      }","    }","  }","  return to;","}","","//","// Clone the options","var cloneOptions = function(options) {","  var opts = {};","  for(var name in options) {","    opts[name] = options[name];","  }","  return opts;","}","","module.exports.inquireServerState = inquireServerState","module.exports.getTopologyType = getTopologyType;","module.exports.emitServerDescriptionChanged = emitServerDescriptionChanged;","module.exports.emitTopologyDescriptionChanged = emitTopologyDescriptionChanged;","module.exports.cloneOptions = cloneOptions;","module.exports.assign = assign;","module.exports.createClientInfo = createClientInfo;","module.exports.clone = clone;",""],"l":{"3":1,"10":1,"11":0,"12":0,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"24":1,"26":2,"40":2,"41":0,"42":2,"43":2,"47":2,"49":0,"51":0,"53":0,"56":2,"59":1,"60":0,"63":1,"64":0,"65":0,"71":0,"74":1,"75":0,"77":0,"83":0,"87":1,"88":0,"89":0,"97":0,"100":1,"101":0,"103":0,"109":0,"113":1,"114":0,"115":0,"116":0,"117":0,"120":1,"121":0,"122":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"134":1,"135":0,"136":0,"138":0,"141":0,"144":0,"145":0,"147":0,"150":0,"153":0,"156":0,"158":0,"164":0,"167":0,"169":0,"173":0,"174":0,"178":0,"184":1,"185":0,"186":0,"189":0,"190":0,"191":0,"192":0,"193":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"205":0,"210":1,"211":0,"212":0,"213":0,"215":0,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1,"224":1,"225":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/auth/mongocr.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/auth/mongocr.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":1,"9":2,"10":2,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":2,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":18},"end":{"line":8,"column":51}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":30},"end":{"line":14,"column":48}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":14},"end":{"line":25,"column":29}}},"4":{"name":"(anonymous_4)","line":31,"loc":{"start":{"line":31,"column":21},"end":{"line":31,"column":50}}},"5":{"name":"(anonymous_5)","line":55,"loc":{"start":{"line":55,"column":25},"end":{"line":55,"column":89}}},"6":{"name":"(anonymous_6)","line":68,"loc":{"start":{"line":68,"column":25},"end":{"line":68,"column":46}}},"7":{"name":"(anonymous_7)","line":74,"loc":{"start":{"line":74,"column":10},"end":{"line":74,"column":27}}},"8":{"name":"(anonymous_8)","line":99,"loc":{"start":{"line":99,"column":12},"end":{"line":99,"column":29}}},"9":{"name":"(anonymous_9)","line":127,"loc":{"start":{"line":127,"column":19},"end":{"line":127,"column":41}}},"10":{"name":"(anonymous_10)","line":128,"loc":{"start":{"line":128,"column":23},"end":{"line":128,"column":34}}},"11":{"name":"(anonymous_11)","line":143,"loc":{"start":{"line":143,"column":27},"end":{"line":143,"column":44}}},"12":{"name":"(anonymous_12)","line":144,"loc":{"start":{"line":144,"column":41},"end":{"line":144,"column":53}}},"13":{"name":"(anonymous_13)","line":157,"loc":{"start":{"line":157,"column":35},"end":{"line":157,"column":75}}},"14":{"name":"(anonymous_14)","line":163,"loc":{"start":{"line":163,"column":98},"end":{"line":163,"column":112}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":6,"column":37}},"2":{"start":{"line":8,"column":0},"end":{"line":12,"column":1}},"3":{"start":{"line":9,"column":2},"end":{"line":9,"column":15}},"4":{"start":{"line":10,"column":2},"end":{"line":10,"column":27}},"5":{"start":{"line":11,"column":2},"end":{"line":11,"column":27}},"6":{"start":{"line":14,"column":0},"end":{"line":18,"column":1}},"7":{"start":{"line":15,"column":2},"end":{"line":17,"column":41}},"8":{"start":{"line":25,"column":0},"end":{"line":28,"column":1}},"9":{"start":{"line":26,"column":2},"end":{"line":26,"column":19}},"10":{"start":{"line":27,"column":2},"end":{"line":27,"column":22}},"11":{"start":{"line":31,"column":0},"end":{"line":42,"column":1}},"12":{"start":{"line":32,"column":2},"end":{"line":32,"column":20}},"13":{"start":{"line":34,"column":2},"end":{"line":39,"column":3}},"14":{"start":{"line":35,"column":4},"end":{"line":38,"column":5}},"15":{"start":{"line":36,"column":6},"end":{"line":36,"column":19}},"16":{"start":{"line":37,"column":6},"end":{"line":37,"column":12}},"17":{"start":{"line":41,"column":2},"end":{"line":41,"column":37}},"18":{"start":{"line":41,"column":13},"end":{"line":41,"column":37}},"19":{"start":{"line":55,"column":0},"end":{"line":135,"column":1}},"20":{"start":{"line":56,"column":2},"end":{"line":56,"column":18}},"21":{"start":{"line":58,"column":2},"end":{"line":58,"column":33}},"22":{"start":{"line":59,"column":2},"end":{"line":59,"column":45}},"23":{"start":{"line":59,"column":17},"end":{"line":59,"column":45}},"24":{"start":{"line":62,"column":2},"end":{"line":62,"column":35}},"25":{"start":{"line":63,"column":2},"end":{"line":63,"column":25}},"26":{"start":{"line":66,"column":2},"end":{"line":134,"column":3}},"27":{"start":{"line":68,"column":4},"end":{"line":125,"column":5}},"28":{"start":{"line":70,"column":6},"end":{"line":124,"column":9}},"29":{"start":{"line":75,"column":8},"end":{"line":75,"column":25}},"30":{"start":{"line":76,"column":8},"end":{"line":76,"column":23}},"31":{"start":{"line":80,"column":8},"end":{"line":91,"column":9}},"32":{"start":{"line":81,"column":10},"end":{"line":81,"column":33}},"33":{"start":{"line":83,"column":10},"end":{"line":83,"column":45}},"34":{"start":{"line":85,"column":10},"end":{"line":85,"column":62}},"35":{"start":{"line":86,"column":10},"end":{"line":86,"column":48}},"36":{"start":{"line":88,"column":10},"end":{"line":88,"column":41}},"37":{"start":{"line":89,"column":10},"end":{"line":89,"column":63}},"38":{"start":{"line":90,"column":10},"end":{"line":90,"column":34}},"39":{"start":{"line":95,"column":8},"end":{"line":123,"column":11}},"40":{"start":{"line":100,"column":10},"end":{"line":100,"column":28}},"41":{"start":{"line":103,"column":10},"end":{"line":111,"column":11}},"42":{"start":{"line":104,"column":12},"end":{"line":104,"column":30}},"43":{"start":{"line":105,"column":17},"end":{"line":111,"column":11}},"44":{"start":{"line":106,"column":12},"end":{"line":106,"column":35}},"45":{"start":{"line":107,"column":17},"end":{"line":111,"column":11}},"46":{"start":{"line":108,"column":12},"end":{"line":108,"column":35}},"47":{"start":{"line":110,"column":12},"end":{"line":110,"column":68}},"48":{"start":{"line":114,"column":10},"end":{"line":122,"column":11}},"49":{"start":{"line":116,"column":12},"end":{"line":116,"column":84}},"50":{"start":{"line":118,"column":12},"end":{"line":118,"column":33}},"51":{"start":{"line":119,"column":17},"end":{"line":122,"column":11}},"52":{"start":{"line":120,"column":12},"end":{"line":120,"column":108}},"53":{"start":{"line":120,"column":36},"end":{"line":120,"column":108}},"54":{"start":{"line":121,"column":12},"end":{"line":121,"column":41}},"55":{"start":{"line":127,"column":4},"end":{"line":131,"column":5}},"56":{"start":{"line":128,"column":6},"end":{"line":130,"column":9}},"57":{"start":{"line":129,"column":8},"end":{"line":129,"column":36}},"58":{"start":{"line":133,"column":4},"end":{"line":133,"column":34}},"59":{"start":{"line":143,"column":0},"end":{"line":147,"column":1}},"60":{"start":{"line":144,"column":2},"end":{"line":146,"column":5}},"61":{"start":{"line":145,"column":4},"end":{"line":145,"column":26}},"62":{"start":{"line":157,"column":0},"end":{"line":171,"column":1}},"63":{"start":{"line":158,"column":2},"end":{"line":158,"column":42}},"64":{"start":{"line":159,"column":2},"end":{"line":159,"column":31}},"65":{"start":{"line":160,"column":2},"end":{"line":160,"column":45}},"66":{"start":{"line":160,"column":17},"end":{"line":160,"column":45}},"67":{"start":{"line":162,"column":2},"end":{"line":170,"column":3}},"68":{"start":{"line":163,"column":4},"end":{"line":169,"column":7}},"69":{"start":{"line":164,"column":6},"end":{"line":164,"column":24}},"70":{"start":{"line":166,"column":6},"end":{"line":168,"column":7}},"71":{"start":{"line":167,"column":8},"end":{"line":167,"column":28}},"72":{"start":{"line":181,"column":0},"end":{"line":181,"column":25}}},"branchMap":{"1":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":9},"end":{"line":15,"column":30}},{"start":{"line":16,"column":7},"end":{"line":16,"column":40}},{"start":{"line":17,"column":7},"end":{"line":17,"column":40}}]},"2":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":4}},{"start":{"line":35,"column":4},"end":{"line":35,"column":4}}]},"3":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"4":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"5":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":80,"column":8}},{"start":{"line":80,"column":8},"end":{"line":80,"column":8}}]},"6":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":10},"end":{"line":103,"column":10}},{"start":{"line":103,"column":10},"end":{"line":103,"column":10}}]},"7":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":17},"end":{"line":105,"column":17}},{"start":{"line":105,"column":17},"end":{"line":105,"column":17}}]},"8":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":17},"end":{"line":107,"column":17}},{"start":{"line":107,"column":17},"end":{"line":107,"column":17}}]},"9":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":10},"end":{"line":114,"column":10}},{"start":{"line":114,"column":10},"end":{"line":114,"column":10}}]},"10":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":13},"end":{"line":114,"column":23}},{"start":{"line":114,"column":27},"end":{"line":114,"column":55}}]},"11":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":17},"end":{"line":119,"column":17}},{"start":{"line":119,"column":17},"end":{"line":119,"column":17}}]},"12":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":12},"end":{"line":120,"column":12}},{"start":{"line":120,"column":12},"end":{"line":120,"column":12}}]},"13":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":2},"end":{"line":160,"column":2}},{"start":{"line":160,"column":2},"end":{"line":160,"column":2}}]},"14":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":6},"end":{"line":166,"column":6}},{"start":{"line":166,"column":6},"end":{"line":166,"column":6}}]}},"code":["\"use strict\";","","var f = require('util').format","  , crypto = require('crypto')","  , Query = require('../connection/commands').Query","  , MongoError = require('../error');","","var AuthSession = function(db, username, password) {","  this.db = db;","  this.username = username;","  this.password = password;","}","","AuthSession.prototype.equal = function(session) {","  return session.db == this.db","    && session.username == this.username","    && session.password == this.password;","}","","/**"," * Creates a new MongoCR authentication mechanism"," * @class"," * @return {MongoCR} A cursor instance"," */","var MongoCR = function(bson) {","  this.bson = bson;","  this.authStore = [];","}","","// Add to store only if it does not exist","var addAuthSession = function(authStore, session) {","  var found = false;","","  for(var i = 0; i < authStore.length; i++) {","    if(authStore[i].equal(session)) {","      found = true;","      break;","    }","  }","","  if(!found) authStore.push(session);","}","","/**"," * Authenticate"," * @method"," * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on"," * @param {[]Connections} connections Connections to authenticate using this authenticator"," * @param {string} db Name of the database"," * @param {string} username Username"," * @param {string} password Password"," * @param {authResultCallback} callback The callback to return the result from the authentication"," * @return {object}"," */","MongoCR.prototype.auth = function(server, connections, db, username, password, callback) {","  var self = this;","  // Total connections","  var count = connections.length;","  if(count == 0) return callback(null, null);","","  // Valid connections","  var numberOfValidConnections = 0;","  var errorObject = null;","","  // For each connection we need to authenticate","  while(connections.length > 0) {","    // Execute MongoCR","    var executeMongoCR = function(connection) {","      // Write the commmand on the connection","      server(connection, new Query(self.bson, f(\"%s.$cmd\", db), {","        getnonce:1","      }, {","        numberToSkip: 0, numberToReturn: 1","      }), function(err, r) {","        var nonce = null;","        var key = null;","","        // Adjust the number of connections left","        // Get nonce","        if(err == null) {","          nonce = r.result.nonce;","          // Use node md5 generator","          var md5 = crypto.createHash('md5');","          // Generate keys used for authentication","          md5.update(username + \":mongo:\" + password, 'utf8');","          var hash_password = md5.digest('hex');","          // Final key","          md5 = crypto.createHash('md5');","          md5.update(nonce + username + hash_password, 'utf8');","          key = md5.digest('hex');","        }","","        // Execute command","        // Write the commmand on the connection","        server(connection, new Query(self.bson, f(\"%s.$cmd\", db), {","          authenticate: 1, user: username, nonce: nonce, key:key","        }, {","          numberToSkip: 0, numberToReturn: 1","        }), function(err, r) {","          count = count - 1;","","          // If we have an error","          if(err) {","            errorObject = err;","          } else if(r.result['$err']) {","            errorObject = r.result;","          } else if(r.result['errmsg']) {","            errorObject = r.result;","          } else {","            numberOfValidConnections = numberOfValidConnections + 1;","          }","","          // We have authenticated all connections","          if(count == 0 && numberOfValidConnections > 0) {","            // Store the auth details","            addAuthSession(self.authStore, new AuthSession(db, username, password));","            // Return correct authentication","            callback(null, true);","          } else if(count == 0) {","            if(errorObject == null) errorObject = new MongoError(f(\"failed to authenticate using mongocr\"));","            callback(errorObject, false);","          }","        });","      });","    }","","    var _execute = function(_connection) {","      process.nextTick(function() {","        executeMongoCR(_connection);","      });","    }","","    _execute(connections.shift());","  }","}","","/**"," * Remove authStore credentials"," * @method"," * @param {string} db Name of database we are removing authStore details about"," * @return {object}"," */","MongoCR.prototype.logout = function(dbName) {","  this.authStore = this.authStore.filter(function(x) {","    return x.db != dbName;","  });","}","","/**"," * Re authenticate pool"," * @method"," * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on"," * @param {[]Connections} connections Connections to authenticate using this authenticator"," * @param {authResultCallback} callback The callback to return the result from the authentication"," * @return {object}"," */","MongoCR.prototype.reauthenticate = function(server, connections, callback) {","  var authStore = this.authStore.slice(0);","  var count = authStore.length;","  if(count == 0) return callback(null, null);","  // Iterate over all the auth details stored","  for(var i = 0; i < authStore.length; i++) {","    this.auth(server, connections, authStore[i].db, authStore[i].username, authStore[i].password, function(err) {","      count = count - 1;","      // Done re-authenticating","      if(count == 0) {","        callback(err, null);","      }","    });","  }","}","","/**"," * This is a result from a authentication strategy"," *"," * @callback authResultCallback"," * @param {error} error An error object. Set to null if no error present"," * @param {boolean} result The result of the authentication process"," */","","module.exports = MongoCR;",""],"l":{"3":1,"8":1,"9":0,"10":0,"11":0,"14":1,"15":0,"25":1,"26":2,"27":2,"31":1,"32":0,"34":0,"35":0,"36":0,"37":0,"41":0,"55":1,"56":0,"58":0,"59":0,"62":0,"63":0,"66":0,"68":0,"70":0,"75":0,"76":0,"80":0,"81":0,"83":0,"85":0,"86":0,"88":0,"89":0,"90":0,"95":0,"100":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"110":0,"114":0,"116":0,"118":0,"119":0,"120":0,"121":0,"127":0,"128":0,"129":0,"133":0,"143":1,"144":0,"145":0,"157":1,"158":0,"159":0,"160":0,"162":0,"163":0,"164":0,"166":0,"167":0,"181":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/auth/x509.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/auth/x509.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":1,"9":2,"10":2,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":2,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":51}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":30},"end":{"line":13,"column":48}}},"3":{"name":"(anonymous_3)","line":24,"loc":{"start":{"line":24,"column":11},"end":{"line":24,"column":26}}},"4":{"name":"(anonymous_4)","line":40,"loc":{"start":{"line":40,"column":22},"end":{"line":40,"column":86}}},"5":{"name":"(anonymous_5)","line":53,"loc":{"start":{"line":53,"column":18},"end":{"line":53,"column":39}}},"6":{"name":"(anonymous_6)","line":68,"loc":{"start":{"line":68,"column":10},"end":{"line":68,"column":27}}},"7":{"name":"(anonymous_7)","line":96,"loc":{"start":{"line":96,"column":19},"end":{"line":96,"column":41}}},"8":{"name":"(anonymous_8)","line":97,"loc":{"start":{"line":97,"column":23},"end":{"line":97,"column":34}}},"9":{"name":"(anonymous_9)","line":107,"loc":{"start":{"line":107,"column":21},"end":{"line":107,"column":50}}},"10":{"name":"(anonymous_10)","line":126,"loc":{"start":{"line":126,"column":24},"end":{"line":126,"column":41}}},"11":{"name":"(anonymous_11)","line":127,"loc":{"start":{"line":127,"column":41},"end":{"line":127,"column":53}}},"12":{"name":"(anonymous_12)","line":140,"loc":{"start":{"line":140,"column":32},"end":{"line":140,"column":72}}},"13":{"name":"(anonymous_13)","line":146,"loc":{"start":{"line":146,"column":98},"end":{"line":146,"column":112}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":37}},"2":{"start":{"line":7,"column":0},"end":{"line":11,"column":1}},"3":{"start":{"line":8,"column":2},"end":{"line":8,"column":15}},"4":{"start":{"line":9,"column":2},"end":{"line":9,"column":27}},"5":{"start":{"line":10,"column":2},"end":{"line":10,"column":27}},"6":{"start":{"line":13,"column":0},"end":{"line":17,"column":1}},"7":{"start":{"line":14,"column":2},"end":{"line":16,"column":41}},"8":{"start":{"line":24,"column":0},"end":{"line":27,"column":1}},"9":{"start":{"line":25,"column":2},"end":{"line":25,"column":19}},"10":{"start":{"line":26,"column":2},"end":{"line":26,"column":22}},"11":{"start":{"line":40,"column":0},"end":{"line":104,"column":1}},"12":{"start":{"line":41,"column":2},"end":{"line":41,"column":18}},"13":{"start":{"line":43,"column":2},"end":{"line":43,"column":33}},"14":{"start":{"line":44,"column":2},"end":{"line":44,"column":45}},"15":{"start":{"line":44,"column":17},"end":{"line":44,"column":45}},"16":{"start":{"line":47,"column":2},"end":{"line":47,"column":35}},"17":{"start":{"line":48,"column":2},"end":{"line":48,"column":25}},"18":{"start":{"line":51,"column":2},"end":{"line":103,"column":3}},"19":{"start":{"line":53,"column":4},"end":{"line":94,"column":5}},"20":{"start":{"line":55,"column":6},"end":{"line":58,"column":8}},"21":{"start":{"line":61,"column":6},"end":{"line":63,"column":7}},"22":{"start":{"line":62,"column":8},"end":{"line":62,"column":32}},"23":{"start":{"line":66,"column":6},"end":{"line":93,"column":9}},"24":{"start":{"line":70,"column":8},"end":{"line":70,"column":26}},"25":{"start":{"line":73,"column":8},"end":{"line":81,"column":9}},"26":{"start":{"line":74,"column":10},"end":{"line":74,"column":28}},"27":{"start":{"line":75,"column":15},"end":{"line":81,"column":9}},"28":{"start":{"line":76,"column":10},"end":{"line":76,"column":33}},"29":{"start":{"line":77,"column":15},"end":{"line":81,"column":9}},"30":{"start":{"line":78,"column":10},"end":{"line":78,"column":33}},"31":{"start":{"line":80,"column":10},"end":{"line":80,"column":66}},"32":{"start":{"line":84,"column":8},"end":{"line":92,"column":9}},"33":{"start":{"line":86,"column":10},"end":{"line":86,"column":82}},"34":{"start":{"line":88,"column":10},"end":{"line":88,"column":31}},"35":{"start":{"line":89,"column":15},"end":{"line":92,"column":9}},"36":{"start":{"line":90,"column":10},"end":{"line":90,"column":106}},"37":{"start":{"line":90,"column":34},"end":{"line":90,"column":106}},"38":{"start":{"line":91,"column":10},"end":{"line":91,"column":39}},"39":{"start":{"line":96,"column":4},"end":{"line":100,"column":5}},"40":{"start":{"line":97,"column":6},"end":{"line":99,"column":9}},"41":{"start":{"line":98,"column":8},"end":{"line":98,"column":29}},"42":{"start":{"line":102,"column":4},"end":{"line":102,"column":34}},"43":{"start":{"line":107,"column":0},"end":{"line":118,"column":1}},"44":{"start":{"line":108,"column":2},"end":{"line":108,"column":20}},"45":{"start":{"line":110,"column":2},"end":{"line":115,"column":3}},"46":{"start":{"line":111,"column":4},"end":{"line":114,"column":5}},"47":{"start":{"line":112,"column":6},"end":{"line":112,"column":19}},"48":{"start":{"line":113,"column":6},"end":{"line":113,"column":12}},"49":{"start":{"line":117,"column":2},"end":{"line":117,"column":37}},"50":{"start":{"line":117,"column":13},"end":{"line":117,"column":37}},"51":{"start":{"line":126,"column":0},"end":{"line":130,"column":1}},"52":{"start":{"line":127,"column":2},"end":{"line":129,"column":5}},"53":{"start":{"line":128,"column":4},"end":{"line":128,"column":26}},"54":{"start":{"line":140,"column":0},"end":{"line":154,"column":1}},"55":{"start":{"line":141,"column":2},"end":{"line":141,"column":42}},"56":{"start":{"line":142,"column":2},"end":{"line":142,"column":31}},"57":{"start":{"line":143,"column":2},"end":{"line":143,"column":45}},"58":{"start":{"line":143,"column":17},"end":{"line":143,"column":45}},"59":{"start":{"line":145,"column":2},"end":{"line":153,"column":3}},"60":{"start":{"line":146,"column":4},"end":{"line":152,"column":7}},"61":{"start":{"line":147,"column":6},"end":{"line":147,"column":24}},"62":{"start":{"line":149,"column":6},"end":{"line":151,"column":7}},"63":{"start":{"line":150,"column":8},"end":{"line":150,"column":28}},"64":{"start":{"line":164,"column":0},"end":{"line":164,"column":22}}},"branchMap":{"1":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":9},"end":{"line":14,"column":30}},{"start":{"line":15,"column":7},"end":{"line":15,"column":40}},{"start":{"line":16,"column":7},"end":{"line":16,"column":40}}]},"2":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"3":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":6},"end":{"line":61,"column":6}},{"start":{"line":61,"column":6},"end":{"line":61,"column":6}}]},"4":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":8},"end":{"line":73,"column":8}},{"start":{"line":73,"column":8},"end":{"line":73,"column":8}}]},"5":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":15},"end":{"line":75,"column":15}},{"start":{"line":75,"column":15},"end":{"line":75,"column":15}}]},"6":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":15},"end":{"line":77,"column":15}},{"start":{"line":77,"column":15},"end":{"line":77,"column":15}}]},"7":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":84,"column":8}},{"start":{"line":84,"column":8},"end":{"line":84,"column":8}}]},"8":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":11},"end":{"line":84,"column":21}},{"start":{"line":84,"column":25},"end":{"line":84,"column":53}}]},"9":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":15},"end":{"line":89,"column":15}},{"start":{"line":89,"column":15},"end":{"line":89,"column":15}}]},"10":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":10},"end":{"line":90,"column":10}},{"start":{"line":90,"column":10},"end":{"line":90,"column":10}}]},"11":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"12":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":2},"end":{"line":117,"column":2}},{"start":{"line":117,"column":2},"end":{"line":117,"column":2}}]},"13":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":2},"end":{"line":143,"column":2}},{"start":{"line":143,"column":2},"end":{"line":143,"column":2}}]},"14":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":6},"end":{"line":149,"column":6}},{"start":{"line":149,"column":6},"end":{"line":149,"column":6}}]}},"code":["\"use strict\";","","var f = require('util').format","  , Query = require('../connection/commands').Query","  , MongoError = require('../error');","","var AuthSession = function(db, username, password) {","  this.db = db;","  this.username = username;","  this.password = password;","}","","AuthSession.prototype.equal = function(session) {","  return session.db == this.db","    && session.username == this.username","    && session.password == this.password;","}","","/**"," * Creates a new X509 authentication mechanism"," * @class"," * @return {X509} A cursor instance"," */","var X509 = function(bson) {","  this.bson = bson;","  this.authStore = [];","}","","/**"," * Authenticate"," * @method"," * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on"," * @param {[]Connections} connections Connections to authenticate using this authenticator"," * @param {string} db Name of the database"," * @param {string} username Username"," * @param {string} password Password"," * @param {authResultCallback} callback The callback to return the result from the authentication"," * @return {object}"," */","X509.prototype.auth = function(server, connections, db, username, password, callback) {","  var self = this;","  // Total connections","  var count = connections.length;","  if(count == 0) return callback(null, null);","","  // Valid connections","  var numberOfValidConnections = 0;","  var errorObject = null;","","  // For each connection we need to authenticate","  while(connections.length > 0) {","    // Execute MongoCR","    var execute = function(connection) {","      // Let's start the sasl process","      var command = {","          authenticate: 1","        , mechanism: 'MONGODB-X509'","      };","","      // Add username if specified","      if(username) {","        command.user = username;","      }","","      // Let's start the process","      server(connection, new Query(self.bson, \"$external.$cmd\", command, {","        numberToSkip: 0, numberToReturn: 1","      }), function(err, r) {","        // Adjust count","        count = count - 1;","","        // If we have an error","        if(err) {","          errorObject = err;","        } else if(r.result['$err']) {","          errorObject = r.result;","        } else if(r.result['errmsg']) {","          errorObject = r.result;","        } else {","          numberOfValidConnections = numberOfValidConnections + 1;","        }","","        // We have authenticated all connections","        if(count == 0 && numberOfValidConnections > 0) {","          // Store the auth details","          addAuthSession(self.authStore, new AuthSession(db, username, password));","          // Return correct authentication","          callback(null, true);","        } else if(count == 0) {","          if(errorObject == null) errorObject = new MongoError(f(\"failed to authenticate using mongocr\"));","          callback(errorObject, false);","        }","      });","    }","","    var _execute = function(_connection) {","      process.nextTick(function() {","        execute(_connection);","      });","    }","","    _execute(connections.shift());","  }","}","","// Add to store only if it does not exist","var addAuthSession = function(authStore, session) {","  var found = false;","","  for(var i = 0; i < authStore.length; i++) {","    if(authStore[i].equal(session)) {","      found = true;","      break;","    }","  }","","  if(!found) authStore.push(session);","}","","/**"," * Remove authStore credentials"," * @method"," * @param {string} db Name of database we are removing authStore details about"," * @return {object}"," */","X509.prototype.logout = function(dbName) {","  this.authStore = this.authStore.filter(function(x) {","    return x.db != dbName;","  });","}","","/**"," * Re authenticate pool"," * @method"," * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on"," * @param {[]Connections} connections Connections to authenticate using this authenticator"," * @param {authResultCallback} callback The callback to return the result from the authentication"," * @return {object}"," */","X509.prototype.reauthenticate = function(server, connections, callback) {","  var authStore = this.authStore.slice(0);","  var count = authStore.length;","  if(count == 0) return callback(null, null);","  // Iterate over all the auth details stored","  for(var i = 0; i < authStore.length; i++) {","    this.auth(server, connections, authStore[i].db, authStore[i].username, authStore[i].password, function(err) {","      count = count - 1;","      // Done re-authenticating","      if(count == 0) {","        callback(err, null);","      }","    });","  }","}","","/**"," * This is a result from a authentication strategy"," *"," * @callback authResultCallback"," * @param {error} error An error object. Set to null if no error present"," * @param {boolean} result The result of the authentication process"," */","","module.exports = X509;",""],"l":{"3":1,"7":1,"8":0,"9":0,"10":0,"13":1,"14":0,"24":1,"25":2,"26":2,"40":1,"41":0,"43":0,"44":0,"47":0,"48":0,"51":0,"53":0,"55":0,"61":0,"62":0,"66":0,"70":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"80":0,"84":0,"86":0,"88":0,"89":0,"90":0,"91":0,"96":0,"97":0,"98":0,"102":0,"107":1,"108":0,"110":0,"111":0,"112":0,"113":0,"117":0,"126":1,"127":0,"128":0,"140":1,"141":0,"142":0,"143":0,"145":0,"146":0,"147":0,"149":0,"150":0,"164":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/auth/plain.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/auth/plain.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":0,"10":1,"11":2,"12":2,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":2,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":18},"end":{"line":13,"column":51}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":30},"end":{"line":19,"column":48}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":12},"end":{"line":30,"column":27}}},"4":{"name":"(anonymous_4)","line":46,"loc":{"start":{"line":46,"column":23},"end":{"line":46,"column":87}}},"5":{"name":"(anonymous_5)","line":59,"loc":{"start":{"line":59,"column":18},"end":{"line":59,"column":39}}},"6":{"name":"(anonymous_6)","line":74,"loc":{"start":{"line":74,"column":10},"end":{"line":74,"column":27}}},"7":{"name":"(anonymous_7)","line":102,"loc":{"start":{"line":102,"column":19},"end":{"line":102,"column":41}}},"8":{"name":"(anonymous_8)","line":103,"loc":{"start":{"line":103,"column":23},"end":{"line":103,"column":34}}},"9":{"name":"(anonymous_9)","line":113,"loc":{"start":{"line":113,"column":21},"end":{"line":113,"column":50}}},"10":{"name":"(anonymous_10)","line":132,"loc":{"start":{"line":132,"column":25},"end":{"line":132,"column":42}}},"11":{"name":"(anonymous_11)","line":133,"loc":{"start":{"line":133,"column":41},"end":{"line":133,"column":53}}},"12":{"name":"(anonymous_12)","line":146,"loc":{"start":{"line":146,"column":33},"end":{"line":146,"column":73}}},"13":{"name":"(anonymous_13)","line":152,"loc":{"start":{"line":152,"column":98},"end":{"line":152,"column":112}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":5,"column":0},"end":{"line":9,"column":37}},"3":{"start":{"line":11,"column":0},"end":{"line":11,"column":26}},"4":{"start":{"line":13,"column":0},"end":{"line":17,"column":1}},"5":{"start":{"line":14,"column":2},"end":{"line":14,"column":15}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":27}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":27}},"8":{"start":{"line":19,"column":0},"end":{"line":23,"column":1}},"9":{"start":{"line":20,"column":2},"end":{"line":22,"column":41}},"10":{"start":{"line":30,"column":0},"end":{"line":33,"column":1}},"11":{"start":{"line":31,"column":2},"end":{"line":31,"column":19}},"12":{"start":{"line":32,"column":2},"end":{"line":32,"column":22}},"13":{"start":{"line":46,"column":0},"end":{"line":110,"column":1}},"14":{"start":{"line":47,"column":2},"end":{"line":47,"column":18}},"15":{"start":{"line":49,"column":2},"end":{"line":49,"column":33}},"16":{"start":{"line":50,"column":2},"end":{"line":50,"column":45}},"17":{"start":{"line":50,"column":17},"end":{"line":50,"column":45}},"18":{"start":{"line":53,"column":2},"end":{"line":53,"column":35}},"19":{"start":{"line":54,"column":2},"end":{"line":54,"column":25}},"20":{"start":{"line":57,"column":2},"end":{"line":109,"column":3}},"21":{"start":{"line":59,"column":4},"end":{"line":100,"column":5}},"22":{"start":{"line":61,"column":6},"end":{"line":61,"column":70}},"23":{"start":{"line":64,"column":6},"end":{"line":69,"column":8}},"24":{"start":{"line":72,"column":6},"end":{"line":99,"column":9}},"25":{"start":{"line":76,"column":8},"end":{"line":76,"column":26}},"26":{"start":{"line":79,"column":8},"end":{"line":87,"column":9}},"27":{"start":{"line":80,"column":10},"end":{"line":80,"column":28}},"28":{"start":{"line":81,"column":15},"end":{"line":87,"column":9}},"29":{"start":{"line":82,"column":10},"end":{"line":82,"column":33}},"30":{"start":{"line":83,"column":15},"end":{"line":87,"column":9}},"31":{"start":{"line":84,"column":10},"end":{"line":84,"column":33}},"32":{"start":{"line":86,"column":10},"end":{"line":86,"column":66}},"33":{"start":{"line":90,"column":8},"end":{"line":98,"column":9}},"34":{"start":{"line":92,"column":10},"end":{"line":92,"column":82}},"35":{"start":{"line":94,"column":10},"end":{"line":94,"column":31}},"36":{"start":{"line":95,"column":15},"end":{"line":98,"column":9}},"37":{"start":{"line":96,"column":10},"end":{"line":96,"column":106}},"38":{"start":{"line":96,"column":34},"end":{"line":96,"column":106}},"39":{"start":{"line":97,"column":10},"end":{"line":97,"column":39}},"40":{"start":{"line":102,"column":4},"end":{"line":106,"column":5}},"41":{"start":{"line":103,"column":6},"end":{"line":105,"column":9}},"42":{"start":{"line":104,"column":8},"end":{"line":104,"column":29}},"43":{"start":{"line":108,"column":4},"end":{"line":108,"column":34}},"44":{"start":{"line":113,"column":0},"end":{"line":124,"column":1}},"45":{"start":{"line":114,"column":2},"end":{"line":114,"column":20}},"46":{"start":{"line":116,"column":2},"end":{"line":121,"column":3}},"47":{"start":{"line":117,"column":4},"end":{"line":120,"column":5}},"48":{"start":{"line":118,"column":6},"end":{"line":118,"column":19}},"49":{"start":{"line":119,"column":6},"end":{"line":119,"column":12}},"50":{"start":{"line":123,"column":2},"end":{"line":123,"column":37}},"51":{"start":{"line":123,"column":13},"end":{"line":123,"column":37}},"52":{"start":{"line":132,"column":0},"end":{"line":136,"column":1}},"53":{"start":{"line":133,"column":2},"end":{"line":135,"column":5}},"54":{"start":{"line":134,"column":4},"end":{"line":134,"column":26}},"55":{"start":{"line":146,"column":0},"end":{"line":160,"column":1}},"56":{"start":{"line":147,"column":2},"end":{"line":147,"column":42}},"57":{"start":{"line":148,"column":2},"end":{"line":148,"column":31}},"58":{"start":{"line":149,"column":2},"end":{"line":149,"column":45}},"59":{"start":{"line":149,"column":17},"end":{"line":149,"column":45}},"60":{"start":{"line":151,"column":2},"end":{"line":159,"column":3}},"61":{"start":{"line":152,"column":4},"end":{"line":158,"column":7}},"62":{"start":{"line":153,"column":6},"end":{"line":153,"column":24}},"63":{"start":{"line":155,"column":6},"end":{"line":157,"column":7}},"64":{"start":{"line":156,"column":8},"end":{"line":156,"column":28}},"65":{"start":{"line":170,"column":0},"end":{"line":170,"column":23}}},"branchMap":{"1":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":9},"end":{"line":20,"column":30}},{"start":{"line":21,"column":7},"end":{"line":21,"column":40}},{"start":{"line":22,"column":7},"end":{"line":22,"column":40}}]},"2":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"3":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":79,"column":8}},{"start":{"line":79,"column":8},"end":{"line":79,"column":8}}]},"4":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":15},"end":{"line":81,"column":15}},{"start":{"line":81,"column":15},"end":{"line":81,"column":15}}]},"5":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":15},"end":{"line":83,"column":15}},{"start":{"line":83,"column":15},"end":{"line":83,"column":15}}]},"6":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":8},"end":{"line":90,"column":8}},{"start":{"line":90,"column":8},"end":{"line":90,"column":8}}]},"7":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":11},"end":{"line":90,"column":21}},{"start":{"line":90,"column":25},"end":{"line":90,"column":53}}]},"8":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":15},"end":{"line":95,"column":15}},{"start":{"line":95,"column":15},"end":{"line":95,"column":15}}]},"9":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":10},"end":{"line":96,"column":10}},{"start":{"line":96,"column":10},"end":{"line":96,"column":10}}]},"10":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":4},"end":{"line":117,"column":4}},{"start":{"line":117,"column":4},"end":{"line":117,"column":4}}]},"11":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":2},"end":{"line":123,"column":2}},{"start":{"line":123,"column":2},"end":{"line":123,"column":2}}]},"12":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":2},"end":{"line":149,"column":2}},{"start":{"line":149,"column":2},"end":{"line":149,"column":2}}]},"13":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":6},"end":{"line":155,"column":6}},{"start":{"line":155,"column":6},"end":{"line":155,"column":6}}]}},"code":["\"use strict\";","","var BSON = require('bson');","","var f = require('util').format","  , Binary = BSON.Binary","  , retrieveBSON = require('../connection/utils').retrieveBSON","  , Query = require('../connection/commands').Query","  , MongoError = require('../error');","","var BSON = retrieveBSON();","","var AuthSession = function(db, username, password) {","  this.db = db;","  this.username = username;","  this.password = password;","}","","AuthSession.prototype.equal = function(session) {","  return session.db == this.db","    && session.username == this.username","    && session.password == this.password;","}","","/**"," * Creates a new Plain authentication mechanism"," * @class"," * @return {Plain} A cursor instance"," */","var Plain = function(bson) {","  this.bson = bson;","  this.authStore = [];","}","","/**"," * Authenticate"," * @method"," * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on"," * @param {[]Connections} connections Connections to authenticate using this authenticator"," * @param {string} db Name of the database"," * @param {string} username Username"," * @param {string} password Password"," * @param {authResultCallback} callback The callback to return the result from the authentication"," * @return {object}"," */","Plain.prototype.auth = function(server, connections, db, username, password, callback) {","  var self = this;","  // Total connections","  var count = connections.length;","  if(count == 0) return callback(null, null);","","  // Valid connections","  var numberOfValidConnections = 0;","  var errorObject = null;","","  // For each connection we need to authenticate","  while(connections.length > 0) {","    // Execute MongoCR","    var execute = function(connection) {","      // Create payload","      var payload = new Binary(f(\"\\x00%s\\x00%s\", username, password));","","      // Let's start the sasl process","      var command = {","          saslStart: 1","        , mechanism: 'PLAIN'","        , payload: payload","        , autoAuthorize: 1","      };","","      // Let's start the process","      server(connection, new Query(self.bson, \"$external.$cmd\", command, {","        numberToSkip: 0, numberToReturn: 1","      }), function(err, r) {","        // Adjust count","        count = count - 1;","","        // If we have an error","        if(err) {","          errorObject = err;","        } else if(r.result['$err']) {","          errorObject = r.result;","        } else if(r.result['errmsg']) {","          errorObject = r.result;","        } else {","          numberOfValidConnections = numberOfValidConnections + 1;","        }","","        // We have authenticated all connections","        if(count == 0 && numberOfValidConnections > 0) {","          // Store the auth details","          addAuthSession(self.authStore, new AuthSession(db, username, password));","          // Return correct authentication","          callback(null, true);","        } else if(count == 0) {","          if(errorObject == null) errorObject = new MongoError(f(\"failed to authenticate using mongocr\"));","          callback(errorObject, false);","        }","      });","    }","","    var _execute = function(_connection) {","      process.nextTick(function() {","        execute(_connection);","      });","    }","","    _execute(connections.shift());","  }","}","","// Add to store only if it does not exist","var addAuthSession = function(authStore, session) {","  var found = false;","","  for(var i = 0; i < authStore.length; i++) {","    if(authStore[i].equal(session)) {","      found = true;","      break;","    }","  }","","  if(!found) authStore.push(session);","}","","/**"," * Remove authStore credentials"," * @method"," * @param {string} db Name of database we are removing authStore details about"," * @return {object}"," */","Plain.prototype.logout = function(dbName) {","  this.authStore = this.authStore.filter(function(x) {","    return x.db != dbName;","  });","}","","/**"," * Re authenticate pool"," * @method"," * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on"," * @param {[]Connections} connections Connections to authenticate using this authenticator"," * @param {authResultCallback} callback The callback to return the result from the authentication"," * @return {object}"," */","Plain.prototype.reauthenticate = function(server, connections, callback) {","  var authStore = this.authStore.slice(0);","  var count = authStore.length;","  if(count == 0) return callback(null, null);","  // Iterate over all the auth details stored","  for(var i = 0; i < authStore.length; i++) {","    this.auth(server, connections, authStore[i].db, authStore[i].username, authStore[i].password, function(err) {","      count = count - 1;","      // Done re-authenticating","      if(count == 0) {","        callback(err, null);","      }","    });","  }","}","","/**"," * This is a result from a authentication strategy"," *"," * @callback authResultCallback"," * @param {error} error An error object. Set to null if no error present"," * @param {boolean} result The result of the authentication process"," */","","module.exports = Plain;",""],"l":{"3":1,"5":1,"11":1,"13":1,"14":0,"15":0,"16":0,"19":1,"20":0,"30":1,"31":2,"32":2,"46":1,"47":0,"49":0,"50":0,"53":0,"54":0,"57":0,"59":0,"61":0,"64":0,"72":0,"76":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"86":0,"90":0,"92":0,"94":0,"95":0,"96":0,"97":0,"102":0,"103":0,"104":0,"108":0,"113":1,"114":0,"116":0,"117":0,"118":0,"119":0,"123":0,"132":1,"133":0,"134":0,"146":1,"147":0,"148":0,"149":0,"151":0,"152":0,"153":0,"155":0,"156":0,"170":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/auth/gssapi.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/auth/gssapi.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":1,"10":1,"11":1,"12":1,"13":0,"14":1,"15":2,"16":2,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0]},"f":{"1":0,"2":0,"3":2,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":18},"end":{"line":8,"column":60}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":30},"end":{"line":15,"column":48}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":13},"end":{"line":38,"column":28}}},"4":{"name":"(anonymous_4)","line":54,"loc":{"start":{"line":54,"column":24},"end":{"line":54,"column":97}}},"5":{"name":"(anonymous_5)","line":70,"loc":{"start":{"line":70,"column":18},"end":{"line":70,"column":39}}},"6":{"name":"(anonymous_6)","line":72,"loc":{"start":{"line":72,"column":105},"end":{"line":72,"column":122}}},"7":{"name":"(anonymous_7)","line":100,"loc":{"start":{"line":100,"column":19},"end":{"line":100,"column":41}}},"8":{"name":"(anonymous_8)","line":101,"loc":{"start":{"line":101,"column":23},"end":{"line":101,"column":34}}},"9":{"name":"(anonymous_9)","line":112,"loc":{"start":{"line":112,"column":23},"end":{"line":112,"column":128}}},"10":{"name":"(anonymous_10)","line":117,"loc":{"start":{"line":117,"column":46},"end":{"line":117,"column":60}}},"11":{"name":"(anonymous_11)","line":121,"loc":{"start":{"line":121,"column":38},"end":{"line":121,"column":61}}},"12":{"name":"(anonymous_12)","line":132,"loc":{"start":{"line":132,"column":29},"end":{"line":132,"column":135}}},"13":{"name":"(anonymous_13)","line":144,"loc":{"start":{"line":144,"column":6},"end":{"line":144,"column":23}}},"14":{"name":"(anonymous_14)","line":148,"loc":{"start":{"line":148,"column":52},"end":{"line":148,"column":75}}},"15":{"name":"(anonymous_15)","line":159,"loc":{"start":{"line":159,"column":30},"end":{"line":159,"column":141}}},"16":{"name":"(anonymous_16)","line":171,"loc":{"start":{"line":171,"column":6},"end":{"line":171,"column":23}}},"17":{"name":"(anonymous_17)","line":175,"loc":{"start":{"line":175,"column":47},"end":{"line":175,"column":70}}},"18":{"name":"(anonymous_18)","line":184,"loc":{"start":{"line":184,"column":29},"end":{"line":184,"column":140}}},"19":{"name":"(anonymous_19)","line":195,"loc":{"start":{"line":195,"column":6},"end":{"line":195,"column":23}}},"20":{"name":"(anonymous_20)","line":197,"loc":{"start":{"line":197,"column":40},"end":{"line":197,"column":54}}},"21":{"name":"(anonymous_21)","line":205,"loc":{"start":{"line":205,"column":21},"end":{"line":205,"column":50}}},"22":{"name":"(anonymous_22)","line":224,"loc":{"start":{"line":224,"column":26},"end":{"line":224,"column":43}}},"23":{"name":"(anonymous_23)","line":225,"loc":{"start":{"line":225,"column":41},"end":{"line":225,"column":53}}},"24":{"name":"(anonymous_24)","line":238,"loc":{"start":{"line":238,"column":34},"end":{"line":238,"column":74}}},"25":{"name":"(anonymous_25)","line":244,"loc":{"start":{"line":244,"column":120},"end":{"line":244,"column":134}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":6,"column":37}},"2":{"start":{"line":8,"column":0},"end":{"line":13,"column":1}},"3":{"start":{"line":9,"column":2},"end":{"line":9,"column":15}},"4":{"start":{"line":10,"column":2},"end":{"line":10,"column":27}},"5":{"start":{"line":11,"column":2},"end":{"line":11,"column":27}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":15,"column":0},"end":{"line":19,"column":1}},"8":{"start":{"line":16,"column":2},"end":{"line":18,"column":41}},"9":{"start":{"line":22,"column":0},"end":{"line":22,"column":20}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":28}},"11":{"start":{"line":26,"column":0},"end":{"line":31,"column":1}},"12":{"start":{"line":27,"column":2},"end":{"line":27,"column":51}},"13":{"start":{"line":29,"column":2},"end":{"line":29,"column":77}},"14":{"start":{"line":38,"column":0},"end":{"line":41,"column":1}},"15":{"start":{"line":39,"column":2},"end":{"line":39,"column":19}},"16":{"start":{"line":40,"column":2},"end":{"line":40,"column":22}},"17":{"start":{"line":54,"column":0},"end":{"line":108,"column":1}},"18":{"start":{"line":55,"column":2},"end":{"line":55,"column":18}},"19":{"start":{"line":57,"column":2},"end":{"line":57,"column":87}},"20":{"start":{"line":57,"column":23},"end":{"line":57,"column":87}},"21":{"start":{"line":58,"column":2},"end":{"line":58,"column":68}},"22":{"start":{"line":60,"column":2},"end":{"line":60,"column":33}},"23":{"start":{"line":61,"column":2},"end":{"line":61,"column":45}},"24":{"start":{"line":61,"column":17},"end":{"line":61,"column":45}},"25":{"start":{"line":64,"column":2},"end":{"line":64,"column":35}},"26":{"start":{"line":65,"column":2},"end":{"line":65,"column":25}},"27":{"start":{"line":68,"column":2},"end":{"line":107,"column":3}},"28":{"start":{"line":70,"column":4},"end":{"line":98,"column":5}},"29":{"start":{"line":72,"column":6},"end":{"line":97,"column":9}},"30":{"start":{"line":74,"column":8},"end":{"line":74,"column":26}},"31":{"start":{"line":77,"column":8},"end":{"line":85,"column":9}},"32":{"start":{"line":78,"column":10},"end":{"line":78,"column":28}},"33":{"start":{"line":79,"column":15},"end":{"line":85,"column":9}},"34":{"start":{"line":80,"column":10},"end":{"line":80,"column":33}},"35":{"start":{"line":81,"column":15},"end":{"line":85,"column":9}},"36":{"start":{"line":82,"column":10},"end":{"line":82,"column":33}},"37":{"start":{"line":84,"column":10},"end":{"line":84,"column":66}},"38":{"start":{"line":88,"column":8},"end":{"line":96,"column":9}},"39":{"start":{"line":90,"column":10},"end":{"line":90,"column":91}},"40":{"start":{"line":92,"column":10},"end":{"line":92,"column":31}},"41":{"start":{"line":93,"column":15},"end":{"line":96,"column":9}},"42":{"start":{"line":94,"column":10},"end":{"line":94,"column":106}},"43":{"start":{"line":94,"column":34},"end":{"line":94,"column":106}},"44":{"start":{"line":95,"column":10},"end":{"line":95,"column":39}},"45":{"start":{"line":100,"column":4},"end":{"line":104,"column":5}},"46":{"start":{"line":101,"column":6},"end":{"line":103,"column":9}},"47":{"start":{"line":102,"column":8},"end":{"line":102,"column":29}},"48":{"start":{"line":106,"column":4},"end":{"line":106,"column":34}},"49":{"start":{"line":112,"column":0},"end":{"line":128,"column":1}},"50":{"start":{"line":114,"column":2},"end":{"line":114,"column":110}},"51":{"start":{"line":117,"column":2},"end":{"line":127,"column":5}},"52":{"start":{"line":118,"column":4},"end":{"line":118,"column":40}},"53":{"start":{"line":118,"column":12},"end":{"line":118,"column":40}},"54":{"start":{"line":121,"column":4},"end":{"line":126,"column":7}},"55":{"start":{"line":122,"column":6},"end":{"line":122,"column":42}},"56":{"start":{"line":122,"column":14},"end":{"line":122,"column":42}},"57":{"start":{"line":125,"column":6},"end":{"line":125,"column":126}},"58":{"start":{"line":132,"column":0},"end":{"line":155,"column":1}},"59":{"start":{"line":134,"column":2},"end":{"line":139,"column":4}},"60":{"start":{"line":142,"column":2},"end":{"line":154,"column":5}},"61":{"start":{"line":145,"column":4},"end":{"line":145,"column":40}},"62":{"start":{"line":145,"column":12},"end":{"line":145,"column":40}},"63":{"start":{"line":146,"column":4},"end":{"line":146,"column":23}},"64":{"start":{"line":148,"column":4},"end":{"line":153,"column":7}},"65":{"start":{"line":149,"column":6},"end":{"line":149,"column":42}},"66":{"start":{"line":149,"column":14},"end":{"line":149,"column":42}},"67":{"start":{"line":152,"column":6},"end":{"line":152,"column":132}},"68":{"start":{"line":159,"column":0},"end":{"line":182,"column":1}},"69":{"start":{"line":161,"column":2},"end":{"line":165,"column":4}},"70":{"start":{"line":169,"column":2},"end":{"line":181,"column":5}},"71":{"start":{"line":172,"column":4},"end":{"line":172,"column":40}},"72":{"start":{"line":172,"column":12},"end":{"line":172,"column":40}},"73":{"start":{"line":173,"column":4},"end":{"line":173,"column":23}},"74":{"start":{"line":175,"column":4},"end":{"line":180,"column":7}},"75":{"start":{"line":176,"column":6},"end":{"line":176,"column":42}},"76":{"start":{"line":176,"column":14},"end":{"line":176,"column":42}},"77":{"start":{"line":179,"column":6},"end":{"line":179,"column":131}},"78":{"start":{"line":184,"column":0},"end":{"line":202,"column":1}},"79":{"start":{"line":186,"column":2},"end":{"line":190,"column":4}},"80":{"start":{"line":193,"column":2},"end":{"line":201,"column":5}},"81":{"start":{"line":196,"column":4},"end":{"line":196,"column":40}},"82":{"start":{"line":196,"column":12},"end":{"line":196,"column":40}},"83":{"start":{"line":197,"column":4},"end":{"line":200,"column":7}},"84":{"start":{"line":198,"column":6},"end":{"line":198,"column":41}},"85":{"start":{"line":198,"column":14},"end":{"line":198,"column":41}},"86":{"start":{"line":199,"column":6},"end":{"line":199,"column":24}},"87":{"start":{"line":205,"column":0},"end":{"line":216,"column":1}},"88":{"start":{"line":206,"column":2},"end":{"line":206,"column":20}},"89":{"start":{"line":208,"column":2},"end":{"line":213,"column":3}},"90":{"start":{"line":209,"column":4},"end":{"line":212,"column":5}},"91":{"start":{"line":210,"column":6},"end":{"line":210,"column":19}},"92":{"start":{"line":211,"column":6},"end":{"line":211,"column":12}},"93":{"start":{"line":215,"column":2},"end":{"line":215,"column":37}},"94":{"start":{"line":215,"column":13},"end":{"line":215,"column":37}},"95":{"start":{"line":224,"column":0},"end":{"line":228,"column":1}},"96":{"start":{"line":225,"column":2},"end":{"line":227,"column":5}},"97":{"start":{"line":226,"column":4},"end":{"line":226,"column":26}},"98":{"start":{"line":238,"column":0},"end":{"line":252,"column":1}},"99":{"start":{"line":239,"column":2},"end":{"line":239,"column":42}},"100":{"start":{"line":240,"column":2},"end":{"line":240,"column":31}},"101":{"start":{"line":241,"column":2},"end":{"line":241,"column":45}},"102":{"start":{"line":241,"column":17},"end":{"line":241,"column":45}},"103":{"start":{"line":243,"column":2},"end":{"line":251,"column":3}},"104":{"start":{"line":244,"column":4},"end":{"line":250,"column":7}},"105":{"start":{"line":245,"column":6},"end":{"line":245,"column":24}},"106":{"start":{"line":247,"column":6},"end":{"line":249,"column":7}},"107":{"start":{"line":248,"column":8},"end":{"line":248,"column":28}},"108":{"start":{"line":262,"column":0},"end":{"line":262,"column":24}}},"branchMap":{"1":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":9},"end":{"line":16,"column":30}},{"start":{"line":17,"column":7},"end":{"line":17,"column":40}},{"start":{"line":18,"column":7},"end":{"line":18,"column":40}}]},"2":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]},"3":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":26},"end":{"line":58,"column":54}},{"start":{"line":58,"column":58},"end":{"line":58,"column":67}}]},"4":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"5":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":8},"end":{"line":77,"column":8}},{"start":{"line":77,"column":8},"end":{"line":77,"column":8}}]},"6":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":15},"end":{"line":79,"column":15}},{"start":{"line":79,"column":15},"end":{"line":79,"column":15}}]},"7":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":15},"end":{"line":81,"column":15}},{"start":{"line":81,"column":15},"end":{"line":81,"column":15}}]},"8":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":88,"column":8}},{"start":{"line":88,"column":8},"end":{"line":88,"column":8}}]},"9":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":11},"end":{"line":88,"column":21}},{"start":{"line":88,"column":25},"end":{"line":88,"column":53}}]},"10":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":15},"end":{"line":93,"column":15}},{"start":{"line":93,"column":15},"end":{"line":93,"column":15}}]},"11":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":10},"end":{"line":94,"column":10}},{"start":{"line":94,"column":10},"end":{"line":94,"column":10}}]},"12":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"13":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":6},"end":{"line":122,"column":6}},{"start":{"line":122,"column":6},"end":{"line":122,"column":6}}]},"14":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":145,"column":4}},{"start":{"line":145,"column":4},"end":{"line":145,"column":4}}]},"15":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":6},"end":{"line":149,"column":6}},{"start":{"line":149,"column":6},"end":{"line":149,"column":6}}]},"16":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":4},"end":{"line":172,"column":4}},{"start":{"line":172,"column":4},"end":{"line":172,"column":4}}]},"17":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":6},"end":{"line":176,"column":6}},{"start":{"line":176,"column":6},"end":{"line":176,"column":6}}]},"18":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":4},"end":{"line":196,"column":4}},{"start":{"line":196,"column":4},"end":{"line":196,"column":4}}]},"19":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":6},"end":{"line":198,"column":6}},{"start":{"line":198,"column":6},"end":{"line":198,"column":6}}]},"20":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":4},"end":{"line":209,"column":4}},{"start":{"line":209,"column":4},"end":{"line":209,"column":4}}]},"21":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":2},"end":{"line":215,"column":2}},{"start":{"line":215,"column":2},"end":{"line":215,"column":2}}]},"22":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":2},"end":{"line":241,"column":2}},{"start":{"line":241,"column":2},"end":{"line":241,"column":2}}]},"23":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":6},"end":{"line":247,"column":6}},{"start":{"line":247,"column":6},"end":{"line":247,"column":6}}]}},"code":["\"use strict\";","","var f = require('util').format","  , require_optional = require('require_optional')","  , Query = require('../connection/commands').Query","  , MongoError = require('../error');","","var AuthSession = function(db, username, password, options) {","  this.db = db;","  this.username = username;","  this.password = password;","  this.options = options;","}","","AuthSession.prototype.equal = function(session) {","  return session.db == this.db","    && session.username == this.username","    && session.password == this.password;","}","","// Kerberos class","var Kerberos = null;","var MongoAuthProcess = null;","","// Try to grab the Kerberos class","try {","  Kerberos = require_optional('kerberos').Kerberos;","  // Authentication process for Mongo","  MongoAuthProcess = require_optional('kerberos').processes.MongoAuthProcess;","} catch(err) {  ","}","","/**"," * Creates a new GSSAPI authentication mechanism"," * @class"," * @return {GSSAPI} A cursor instance"," */","var GSSAPI = function(bson) {","  this.bson = bson;","  this.authStore = [];","}","","/**"," * Authenticate"," * @method"," * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on"," * @param {[]Connections} connections Connections to authenticate using this authenticator"," * @param {string} db Name of the database"," * @param {string} username Username"," * @param {string} password Password"," * @param {authResultCallback} callback The callback to return the result from the authentication"," * @return {object}"," */","GSSAPI.prototype.auth = function(server, connections, db, username, password, options, callback) {","  var self = this;","  // We don't have the Kerberos library","  if(Kerberos == null) return callback(new Error(\"Kerberos library is not installed\"));","  var gssapiServiceName = options['gssapiServiceName'] || 'mongodb';","  // Total connections","  var count = connections.length;","  if(count == 0) return callback(null, null);","","  // Valid connections","  var numberOfValidConnections = 0;","  var errorObject = null;","","  // For each connection we need to authenticate","  while(connections.length > 0) {","    // Execute MongoCR","    var execute = function(connection) {","      // Start Auth process for a connection","      GSSAPIInitialize(self, db, username, password, db, gssapiServiceName, server, connection, options, function(err, r) {","        // Adjust count","        count = count - 1;","","        // If we have an error","        if(err) {","          errorObject = err;","        } else if(r.result['$err']) {","          errorObject = r.result;","        } else if(r.result['errmsg']) {","          errorObject = r.result;","        } else {","          numberOfValidConnections = numberOfValidConnections + 1;","        }","","        // We have authenticated all connections","        if(count == 0 && numberOfValidConnections > 0) {","          // Store the auth details","          addAuthSession(self.authStore, new AuthSession(db, username, password, options));","          // Return correct authentication","          callback(null, true);","        } else if(count == 0) {","          if(errorObject == null) errorObject = new MongoError(f(\"failed to authenticate using mongocr\"));","          callback(errorObject, false);","        }","      });","    }","","    var _execute = function(_connection) {","      process.nextTick(function() {","        execute(_connection);","      });","    }","","    _execute(connections.shift());","  }","}","","//","// Initialize step","var GSSAPIInitialize = function(self, db, username, password, authdb, gssapiServiceName, server, connection, options, callback) {","  // Create authenticator","  var mongo_auth_process = new MongoAuthProcess(connection.host, connection.port, gssapiServiceName, options);","","  // Perform initialization","  mongo_auth_process.init(username, password, function(err) {","    if(err) return callback(err, false);","","    // Perform the first step","    mongo_auth_process.transition('', function(err, payload) {","      if(err) return callback(err, false);","","      // Call the next db step","      MongoDBGSSAPIFirstStep(self, mongo_auth_process, payload, db, username, password, authdb, server, connection, callback);","    });","  });","}","","//","// Perform first step against mongodb","var MongoDBGSSAPIFirstStep = function(self, mongo_auth_process, payload, db, username, password, authdb, server, connection, callback) {","  // Build the sasl start command","  var command = {","      saslStart: 1","    , mechanism: 'GSSAPI'","    , payload: payload","    , autoAuthorize: 1","  };","","  // Write the commmand on the connection","  server(connection, new Query(self.bson, \"$external.$cmd\", command, {","    numberToSkip: 0, numberToReturn: 1","  }), function(err, r) {","    if(err) return callback(err, false);","    var doc = r.result;","    // Execute mongodb transition","    mongo_auth_process.transition(r.result.payload, function(err, payload) {","      if(err) return callback(err, false);","","      // MongoDB API Second Step","      MongoDBGSSAPISecondStep(self, mongo_auth_process, payload, doc, db, username, password, authdb, server, connection, callback);","    });","  });","}","","//","// Perform first step against mongodb","var MongoDBGSSAPISecondStep = function(self, mongo_auth_process, payload, doc, db, username, password, authdb, server, connection, callback) {","  // Build Authentication command to send to MongoDB","  var command = {","      saslContinue: 1","    , conversationId: doc.conversationId","    , payload: payload","  };","","  // Execute the command","  // Write the commmand on the connection","  server(connection, new Query(self.bson, \"$external.$cmd\", command, {","    numberToSkip: 0, numberToReturn: 1","  }), function(err, r) {","    if(err) return callback(err, false);","    var doc = r.result;","    // Call next transition for kerberos","    mongo_auth_process.transition(doc.payload, function(err, payload) {","      if(err) return callback(err, false);","","      // Call the last and third step","      MongoDBGSSAPIThirdStep(self, mongo_auth_process, payload, doc, db, username, password, authdb, server, connection, callback);","    });","  });","}","","var MongoDBGSSAPIThirdStep = function(self, mongo_auth_process, payload, doc, db, username, password, authdb, server, connection, callback) {","  // Build final command","  var command = {","      saslContinue: 1","    , conversationId: doc.conversationId","    , payload: payload","  };","","  // Execute the command","  server(connection, new Query(self.bson, \"$external.$cmd\", command, {","    numberToSkip: 0, numberToReturn: 1","  }), function(err, r) {","    if(err) return callback(err, false);","    mongo_auth_process.transition(null, function(err) {","      if(err) return callback(err, null);","      callback(null, r);","    });","  });","}","","// Add to store only if it does not exist","var addAuthSession = function(authStore, session) {","  var found = false;","","  for(var i = 0; i < authStore.length; i++) {","    if(authStore[i].equal(session)) {","      found = true;","      break;","    }","  }","","  if(!found) authStore.push(session);","}","","/**"," * Remove authStore credentials"," * @method"," * @param {string} db Name of database we are removing authStore details about"," * @return {object}"," */","GSSAPI.prototype.logout = function(dbName) {","  this.authStore = this.authStore.filter(function(x) {","    return x.db != dbName;","  });","}","","/**"," * Re authenticate pool"," * @method"," * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on"," * @param {[]Connections} connections Connections to authenticate using this authenticator"," * @param {authResultCallback} callback The callback to return the result from the authentication"," * @return {object}"," */","GSSAPI.prototype.reauthenticate = function(server, connections, callback) {","  var authStore = this.authStore.slice(0);","  var count = authStore.length;","  if(count == 0) return callback(null, null);","  // Iterate over all the auth details stored","  for(var i = 0; i < authStore.length; i++) {","    this.auth(server, connections, authStore[i].db, authStore[i].username, authStore[i].password, authStore[i].options, function(err) {","      count = count - 1;","      // Done re-authenticating","      if(count == 0) {","        callback(err, null);","      }","    });","  }","}","","/**"," * This is a result from a authentication strategy"," *"," * @callback authResultCallback"," * @param {error} error An error object. Set to null if no error present"," * @param {boolean} result The result of the authentication process"," */","","module.exports = GSSAPI;",""],"l":{"3":1,"8":1,"9":0,"10":0,"11":0,"12":0,"15":1,"16":0,"22":1,"23":1,"26":1,"27":1,"29":0,"38":1,"39":2,"40":2,"54":1,"55":0,"57":0,"58":0,"60":0,"61":0,"64":0,"65":0,"68":0,"70":0,"72":0,"74":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"84":0,"88":0,"90":0,"92":0,"93":0,"94":0,"95":0,"100":0,"101":0,"102":0,"106":0,"112":1,"114":0,"117":0,"118":0,"121":0,"122":0,"125":0,"132":1,"134":0,"142":0,"145":0,"146":0,"148":0,"149":0,"152":0,"159":1,"161":0,"169":0,"172":0,"173":0,"175":0,"176":0,"179":0,"184":1,"186":0,"193":0,"196":0,"197":0,"198":0,"199":0,"205":1,"206":0,"208":0,"209":0,"210":0,"211":0,"215":0,"224":1,"225":0,"226":0,"238":1,"239":0,"240":0,"241":0,"243":0,"244":0,"245":0,"247":0,"248":0,"262":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/auth/sspi.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/auth/sspi.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":1,"10":1,"11":1,"12":1,"13":0,"14":1,"15":2,"16":2,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":1},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0]},"f":{"1":0,"2":0,"3":2,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":18},"end":{"line":8,"column":60}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":30},"end":{"line":15,"column":48}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":11},"end":{"line":37,"column":26}}},"4":{"name":"(anonymous_4)","line":53,"loc":{"start":{"line":53,"column":22},"end":{"line":53,"column":95}}},"5":{"name":"(anonymous_5)","line":69,"loc":{"start":{"line":69,"column":18},"end":{"line":69,"column":39}}},"6":{"name":"(anonymous_6)","line":71,"loc":{"start":{"line":71,"column":97},"end":{"line":71,"column":114}}},"7":{"name":"(anonymous_7)","line":99,"loc":{"start":{"line":99,"column":19},"end":{"line":99,"column":41}}},"8":{"name":"(anonymous_8)","line":100,"loc":{"start":{"line":100,"column":23},"end":{"line":100,"column":34}}},"9":{"name":"(anonymous_9)","line":109,"loc":{"start":{"line":109,"column":23},"end":{"line":109,"column":116}}},"10":{"name":"(anonymous_10)","line":124,"loc":{"start":{"line":124,"column":6},"end":{"line":124,"column":23}}},"11":{"name":"(anonymous_11)","line":128,"loc":{"start":{"line":128,"column":48},"end":{"line":128,"column":62}}},"12":{"name":"(anonymous_12)","line":131,"loc":{"start":{"line":131,"column":49},"end":{"line":131,"column":72}}},"13":{"name":"(anonymous_13)","line":144,"loc":{"start":{"line":144,"column":12},"end":{"line":144,"column":29}}},"14":{"name":"(anonymous_14)","line":148,"loc":{"start":{"line":148,"column":53},"end":{"line":148,"column":76}}},"15":{"name":"(anonymous_15)","line":161,"loc":{"start":{"line":161,"column":16},"end":{"line":161,"column":33}}},"16":{"name":"(anonymous_16)","line":165,"loc":{"start":{"line":165,"column":57},"end":{"line":165,"column":80}}},"17":{"name":"(anonymous_17)","line":176,"loc":{"start":{"line":176,"column":20},"end":{"line":176,"column":37}}},"18":{"name":"(anonymous_18)","line":193,"loc":{"start":{"line":193,"column":21},"end":{"line":193,"column":50}}},"19":{"name":"(anonymous_19)","line":212,"loc":{"start":{"line":212,"column":24},"end":{"line":212,"column":41}}},"20":{"name":"(anonymous_20)","line":213,"loc":{"start":{"line":213,"column":41},"end":{"line":213,"column":53}}},"21":{"name":"(anonymous_21)","line":226,"loc":{"start":{"line":226,"column":32},"end":{"line":226,"column":72}}},"22":{"name":"(anonymous_22)","line":232,"loc":{"start":{"line":232,"column":120},"end":{"line":232,"column":134}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":6,"column":37}},"2":{"start":{"line":8,"column":0},"end":{"line":13,"column":1}},"3":{"start":{"line":9,"column":2},"end":{"line":9,"column":15}},"4":{"start":{"line":10,"column":2},"end":{"line":10,"column":27}},"5":{"start":{"line":11,"column":2},"end":{"line":11,"column":27}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":15,"column":0},"end":{"line":19,"column":1}},"8":{"start":{"line":16,"column":2},"end":{"line":18,"column":41}},"9":{"start":{"line":22,"column":0},"end":{"line":22,"column":20}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":28}},"11":{"start":{"line":26,"column":0},"end":{"line":30,"column":15}},"12":{"start":{"line":27,"column":2},"end":{"line":27,"column":50}},"13":{"start":{"line":29,"column":2},"end":{"line":29,"column":76}},"14":{"start":{"line":37,"column":0},"end":{"line":40,"column":1}},"15":{"start":{"line":38,"column":2},"end":{"line":38,"column":19}},"16":{"start":{"line":39,"column":2},"end":{"line":39,"column":22}},"17":{"start":{"line":53,"column":0},"end":{"line":107,"column":1}},"18":{"start":{"line":54,"column":2},"end":{"line":54,"column":18}},"19":{"start":{"line":56,"column":2},"end":{"line":56,"column":87}},"20":{"start":{"line":56,"column":23},"end":{"line":56,"column":87}},"21":{"start":{"line":57,"column":2},"end":{"line":57,"column":68}},"22":{"start":{"line":59,"column":2},"end":{"line":59,"column":33}},"23":{"start":{"line":60,"column":2},"end":{"line":60,"column":45}},"24":{"start":{"line":60,"column":17},"end":{"line":60,"column":45}},"25":{"start":{"line":63,"column":2},"end":{"line":63,"column":35}},"26":{"start":{"line":64,"column":2},"end":{"line":64,"column":25}},"27":{"start":{"line":67,"column":2},"end":{"line":106,"column":3}},"28":{"start":{"line":69,"column":4},"end":{"line":97,"column":5}},"29":{"start":{"line":71,"column":6},"end":{"line":96,"column":9}},"30":{"start":{"line":73,"column":8},"end":{"line":73,"column":26}},"31":{"start":{"line":76,"column":8},"end":{"line":84,"column":9}},"32":{"start":{"line":77,"column":10},"end":{"line":77,"column":28}},"33":{"start":{"line":78,"column":15},"end":{"line":84,"column":9}},"34":{"start":{"line":79,"column":10},"end":{"line":79,"column":33}},"35":{"start":{"line":80,"column":15},"end":{"line":84,"column":9}},"36":{"start":{"line":81,"column":10},"end":{"line":81,"column":33}},"37":{"start":{"line":83,"column":10},"end":{"line":83,"column":66}},"38":{"start":{"line":87,"column":8},"end":{"line":95,"column":9}},"39":{"start":{"line":89,"column":10},"end":{"line":89,"column":91}},"40":{"start":{"line":91,"column":10},"end":{"line":91,"column":31}},"41":{"start":{"line":92,"column":15},"end":{"line":95,"column":9}},"42":{"start":{"line":93,"column":10},"end":{"line":93,"column":106}},"43":{"start":{"line":93,"column":34},"end":{"line":93,"column":106}},"44":{"start":{"line":94,"column":10},"end":{"line":94,"column":39}},"45":{"start":{"line":99,"column":4},"end":{"line":103,"column":5}},"46":{"start":{"line":100,"column":6},"end":{"line":102,"column":9}},"47":{"start":{"line":101,"column":8},"end":{"line":101,"column":29}},"48":{"start":{"line":105,"column":4},"end":{"line":105,"column":34}},"49":{"start":{"line":109,"column":0},"end":{"line":190,"column":1}},"50":{"start":{"line":111,"column":2},"end":{"line":116,"column":4}},"51":{"start":{"line":119,"column":2},"end":{"line":119,"column":110}},"52":{"start":{"line":122,"column":2},"end":{"line":189,"column":5}},"53":{"start":{"line":125,"column":4},"end":{"line":125,"column":40}},"54":{"start":{"line":125,"column":12},"end":{"line":125,"column":40}},"55":{"start":{"line":126,"column":4},"end":{"line":126,"column":23}},"56":{"start":{"line":128,"column":4},"end":{"line":188,"column":7}},"57":{"start":{"line":129,"column":6},"end":{"line":129,"column":35}},"58":{"start":{"line":129,"column":14},"end":{"line":129,"column":35}},"59":{"start":{"line":131,"column":6},"end":{"line":187,"column":9}},"60":{"start":{"line":132,"column":8},"end":{"line":132,"column":37}},"61":{"start":{"line":132,"column":16},"end":{"line":132,"column":37}},"62":{"start":{"line":135,"column":8},"end":{"line":139,"column":10}},"63":{"start":{"line":142,"column":8},"end":{"line":186,"column":11}},"64":{"start":{"line":145,"column":10},"end":{"line":145,"column":46}},"65":{"start":{"line":145,"column":18},"end":{"line":145,"column":46}},"66":{"start":{"line":146,"column":10},"end":{"line":146,"column":29}},"67":{"start":{"line":148,"column":10},"end":{"line":185,"column":13}},"68":{"start":{"line":149,"column":12},"end":{"line":149,"column":41}},"69":{"start":{"line":149,"column":20},"end":{"line":149,"column":41}},"70":{"start":{"line":152,"column":12},"end":{"line":156,"column":14}},"71":{"start":{"line":159,"column":12},"end":{"line":184,"column":15}},"72":{"start":{"line":162,"column":14},"end":{"line":162,"column":50}},"73":{"start":{"line":162,"column":22},"end":{"line":162,"column":50}},"74":{"start":{"line":163,"column":14},"end":{"line":163,"column":33}},"75":{"start":{"line":165,"column":14},"end":{"line":183,"column":17}},"76":{"start":{"line":167,"column":16},"end":{"line":171,"column":18}},"77":{"start":{"line":174,"column":16},"end":{"line":182,"column":19}},"78":{"start":{"line":177,"column":18},"end":{"line":177,"column":54}},"79":{"start":{"line":177,"column":26},"end":{"line":177,"column":54}},"80":{"start":{"line":178,"column":18},"end":{"line":178,"column":37}},"81":{"start":{"line":180,"column":18},"end":{"line":180,"column":59}},"82":{"start":{"line":180,"column":31},"end":{"line":180,"column":59}},"83":{"start":{"line":181,"column":18},"end":{"line":181,"column":70}},"84":{"start":{"line":193,"column":0},"end":{"line":204,"column":1}},"85":{"start":{"line":194,"column":2},"end":{"line":194,"column":20}},"86":{"start":{"line":196,"column":2},"end":{"line":201,"column":3}},"87":{"start":{"line":197,"column":4},"end":{"line":200,"column":5}},"88":{"start":{"line":198,"column":6},"end":{"line":198,"column":19}},"89":{"start":{"line":199,"column":6},"end":{"line":199,"column":12}},"90":{"start":{"line":203,"column":2},"end":{"line":203,"column":37}},"91":{"start":{"line":203,"column":13},"end":{"line":203,"column":37}},"92":{"start":{"line":212,"column":0},"end":{"line":216,"column":1}},"93":{"start":{"line":213,"column":2},"end":{"line":215,"column":5}},"94":{"start":{"line":214,"column":4},"end":{"line":214,"column":26}},"95":{"start":{"line":226,"column":0},"end":{"line":240,"column":1}},"96":{"start":{"line":227,"column":2},"end":{"line":227,"column":42}},"97":{"start":{"line":228,"column":2},"end":{"line":228,"column":31}},"98":{"start":{"line":229,"column":2},"end":{"line":229,"column":45}},"99":{"start":{"line":229,"column":17},"end":{"line":229,"column":45}},"100":{"start":{"line":231,"column":2},"end":{"line":239,"column":3}},"101":{"start":{"line":232,"column":4},"end":{"line":238,"column":7}},"102":{"start":{"line":233,"column":6},"end":{"line":233,"column":24}},"103":{"start":{"line":235,"column":6},"end":{"line":237,"column":7}},"104":{"start":{"line":236,"column":8},"end":{"line":236,"column":28}},"105":{"start":{"line":250,"column":0},"end":{"line":250,"column":22}}},"branchMap":{"1":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":9},"end":{"line":16,"column":30}},{"start":{"line":17,"column":7},"end":{"line":17,"column":40}},{"start":{"line":18,"column":7},"end":{"line":18,"column":40}}]},"2":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"3":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":26},"end":{"line":57,"column":54}},{"start":{"line":57,"column":58},"end":{"line":57,"column":67}}]},"4":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":2},"end":{"line":60,"column":2}},{"start":{"line":60,"column":2},"end":{"line":60,"column":2}}]},"5":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":76,"column":8}},{"start":{"line":76,"column":8},"end":{"line":76,"column":8}}]},"6":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":15},"end":{"line":78,"column":15}},{"start":{"line":78,"column":15},"end":{"line":78,"column":15}}]},"7":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":18},"end":{"line":78,"column":19}},{"start":{"line":78,"column":23},"end":{"line":78,"column":43}},{"start":{"line":78,"column":47},"end":{"line":78,"column":63}}]},"8":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":15},"end":{"line":80,"column":15}},{"start":{"line":80,"column":15},"end":{"line":80,"column":15}}]},"9":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":18},"end":{"line":80,"column":19}},{"start":{"line":80,"column":23},"end":{"line":80,"column":43}},{"start":{"line":80,"column":47},"end":{"line":80,"column":65}}]},"10":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":87,"column":8}},{"start":{"line":87,"column":8},"end":{"line":87,"column":8}}]},"11":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":11},"end":{"line":87,"column":21}},{"start":{"line":87,"column":25},"end":{"line":87,"column":53}}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":15},"end":{"line":92,"column":15}},{"start":{"line":92,"column":15},"end":{"line":92,"column":15}}]},"13":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":10},"end":{"line":93,"column":10}},{"start":{"line":93,"column":10},"end":{"line":93,"column":10}}]},"14":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":4},"end":{"line":125,"column":4}},{"start":{"line":125,"column":4},"end":{"line":125,"column":4}}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":6},"end":{"line":129,"column":6}},{"start":{"line":129,"column":6},"end":{"line":129,"column":6}}]},"16":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":132,"column":8}},{"start":{"line":132,"column":8},"end":{"line":132,"column":8}}]},"17":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":10},"end":{"line":145,"column":10}},{"start":{"line":145,"column":10},"end":{"line":145,"column":10}}]},"18":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":12},"end":{"line":149,"column":12}},{"start":{"line":149,"column":12},"end":{"line":149,"column":12}}]},"19":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":14},"end":{"line":162,"column":14}},{"start":{"line":162,"column":14},"end":{"line":162,"column":14}}]},"20":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":18},"end":{"line":177,"column":18}},{"start":{"line":177,"column":18},"end":{"line":177,"column":18}}]},"21":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":18},"end":{"line":180,"column":18}},{"start":{"line":180,"column":18},"end":{"line":180,"column":18}}]},"22":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":4},"end":{"line":197,"column":4}},{"start":{"line":197,"column":4},"end":{"line":197,"column":4}}]},"23":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":2},"end":{"line":203,"column":2}},{"start":{"line":203,"column":2},"end":{"line":203,"column":2}}]},"24":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":2},"end":{"line":229,"column":2}},{"start":{"line":229,"column":2},"end":{"line":229,"column":2}}]},"25":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":6},"end":{"line":235,"column":6}},{"start":{"line":235,"column":6},"end":{"line":235,"column":6}}]}},"code":["\"use strict\";","","var f = require('util').format","  , require_optional = require('require_optional')","  , Query = require('../connection/commands').Query","  , MongoError = require('../error');","","var AuthSession = function(db, username, password, options) {","  this.db = db;","  this.username = username;","  this.password = password;","  this.options = options;","}","","AuthSession.prototype.equal = function(session) {","  return session.db == this.db","    && session.username == this.username","    && session.password == this.password;","}","","// Kerberos class","var Kerberos = null;","var MongoAuthProcess = null;","","// Try to grab the Kerberos class","try {","  Kerberos = require_optional('kerberos').Kerberos","  // Authentication process for Mongo","  MongoAuthProcess = require_optional('kerberos').processes.MongoAuthProcess","} catch(err) {}","","/**"," * Creates a new SSPI authentication mechanism"," * @class"," * @return {SSPI} A cursor instance"," */","var SSPI = function(bson) {","  this.bson = bson;","  this.authStore = [];","}","","/**"," * Authenticate"," * @method"," * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on"," * @param {[]Connections} connections Connections to authenticate using this authenticator"," * @param {string} db Name of the database"," * @param {string} username Username"," * @param {string} password Password"," * @param {authResultCallback} callback The callback to return the result from the authentication"," * @return {object}"," */","SSPI.prototype.auth = function(server, connections, db, username, password, options, callback) {","  var self = this;","  // We don't have the Kerberos library","  if(Kerberos == null) return callback(new Error(\"Kerberos library is not installed\"));","  var gssapiServiceName = options['gssapiServiceName'] || 'mongodb';","  // Total connections","  var count = connections.length;","  if(count == 0) return callback(null, null);","","  // Valid connections","  var numberOfValidConnections = 0;","  var errorObject = null;","","  // For each connection we need to authenticate","  while(connections.length > 0) {","    // Execute MongoCR","    var execute = function(connection) {","      // Start Auth process for a connection","      SSIPAuthenticate(self, username, password, gssapiServiceName, server, connection, options, function(err, r) {","        // Adjust count","        count = count - 1;","","        // If we have an error","        if(err) {","          errorObject = err;","        } else if(r && typeof r == 'object' && r.result['$err']) {","          errorObject = r.result;","        } else if(r && typeof r == 'object' && r.result['errmsg']) {","          errorObject = r.result;","        } else {","          numberOfValidConnections = numberOfValidConnections + 1;","        }","","        // We have authenticated all connections","        if(count == 0 && numberOfValidConnections > 0) {","          // Store the auth details","          addAuthSession(self.authStore, new AuthSession(db, username, password, options));","          // Return correct authentication","          callback(null, true);","        } else if(count == 0) {","          if(errorObject == null) errorObject = new MongoError(f(\"failed to authenticate using mongocr\"));","          callback(errorObject, false);","        }","      });","    }","","    var _execute = function(_connection) {","      process.nextTick(function() {","        execute(_connection);","      });","    }","","    _execute(connections.shift());","  }","}","","var SSIPAuthenticate = function(self, username, password, gssapiServiceName, server, connection, options, callback) {","  // Build Authentication command to send to MongoDB","  var command = {","      saslStart: 1","    , mechanism: 'GSSAPI'","    , payload: ''","    , autoAuthorize: 1","  };","","  // Create authenticator","  var mongo_auth_process = new MongoAuthProcess(connection.host, connection.port, gssapiServiceName, options);","","  // Execute first sasl step","  server(connection, new Query(self.bson, \"$external.$cmd\", command, {","    numberToSkip: 0, numberToReturn: 1","  }), function(err, r) {","    if(err) return callback(err, false);","    var doc = r.result;","","    mongo_auth_process.init(username, password, function(err) {","      if(err) return callback(err);","","      mongo_auth_process.transition(doc.payload, function(err, payload) {","        if(err) return callback(err);","","        // Perform the next step against mongod","        var command = {","            saslContinue: 1","          , conversationId: doc.conversationId","          , payload: payload","        };","","        // Execute the command","        server(connection, new Query(self.bson, \"$external.$cmd\", command, {","          numberToSkip: 0, numberToReturn: 1","        }), function(err, r) {","          if(err) return callback(err, false);","          var doc = r.result;","","          mongo_auth_process.transition(doc.payload, function(err, payload) {","            if(err) return callback(err);","","            // Perform the next step against mongod","            var command = {","                saslContinue: 1","              , conversationId: doc.conversationId","              , payload: payload","            };","","            // Execute the command","            server(connection, new Query(self.bson, \"$external.$cmd\", command, {","              numberToSkip: 0, numberToReturn: 1","            }), function(err, r) {","              if(err) return callback(err, false);","              var doc = r.result;","","              mongo_auth_process.transition(doc.payload, function(err, payload) {","                // Perform the next step against mongod","                var command = {","                    saslContinue: 1","                  , conversationId: doc.conversationId","                  , payload: payload","                };","","                // Execute the command","                server(connection, new Query(self.bson, \"$external.$cmd\", command, {","                  numberToSkip: 0, numberToReturn: 1","                }), function(err, r) {","                  if(err) return callback(err, false);","                  var doc = r.result;","","                  if(doc.done) return callback(null, true);","                  callback(new Error(\"Authentication failed\"), false);","                });","              });","            });","          });","        });","      });","    });","  });","}","","// Add to store only if it does not exist","var addAuthSession = function(authStore, session) {","  var found = false;","","  for(var i = 0; i < authStore.length; i++) {","    if(authStore[i].equal(session)) {","      found = true;","      break;","    }","  }","","  if(!found) authStore.push(session);","}","","/**"," * Remove authStore credentials"," * @method"," * @param {string} db Name of database we are removing authStore details about"," * @return {object}"," */","SSPI.prototype.logout = function(dbName) {","  this.authStore = this.authStore.filter(function(x) {","    return x.db != dbName;","  });","}","","/**"," * Re authenticate pool"," * @method"," * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on"," * @param {[]Connections} connections Connections to authenticate using this authenticator"," * @param {authResultCallback} callback The callback to return the result from the authentication"," * @return {object}"," */","SSPI.prototype.reauthenticate = function(server, connections, callback) {","  var authStore = this.authStore.slice(0);","  var count = authStore.length;","  if(count == 0) return callback(null, null);","  // Iterate over all the auth details stored","  for(var i = 0; i < authStore.length; i++) {","    this.auth(server, connections, authStore[i].db, authStore[i].username, authStore[i].password, authStore[i].options, function(err) {","      count = count - 1;","      // Done re-authenticating","      if(count == 0) {","        callback(err, null);","      }","    });","  }","}","","/**"," * This is a result from a authentication strategy"," *"," * @callback authResultCallback"," * @param {error} error An error object. Set to null if no error present"," * @param {boolean} result The result of the authentication process"," */","","module.exports = SSPI;",""],"l":{"3":1,"8":1,"9":0,"10":0,"11":0,"12":0,"15":1,"16":0,"22":1,"23":1,"26":1,"27":1,"29":0,"37":1,"38":2,"39":2,"53":1,"54":0,"56":0,"57":0,"59":0,"60":0,"63":0,"64":0,"67":0,"69":0,"71":0,"73":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"83":0,"87":0,"89":0,"91":0,"92":0,"93":0,"94":0,"99":0,"100":0,"101":0,"105":0,"109":1,"111":0,"119":0,"122":0,"125":0,"126":0,"128":0,"129":0,"131":0,"132":0,"135":0,"142":0,"145":0,"146":0,"148":0,"149":0,"152":0,"159":0,"162":0,"163":0,"165":0,"167":0,"174":0,"177":0,"178":0,"180":0,"181":0,"193":1,"194":0,"196":0,"197":0,"198":0,"199":0,"203":0,"212":1,"213":0,"214":0,"226":1,"227":0,"228":0,"229":0,"231":0,"232":0,"233":0,"235":0,"236":0,"250":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/auth/scram.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/auth/scram.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":1,"10":1,"11":2,"12":2,"13":2,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":1,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":1,"148":0,"149":0,"150":1,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":1},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0]},"f":{"1":0,"2":0,"3":2,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":18},"end":{"line":12,"column":51}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":30},"end":{"line":18,"column":48}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":16},"end":{"line":31,"column":31}}},"4":{"name":"(anonymous_4)","line":37,"loc":{"start":{"line":37,"column":19},"end":{"line":37,"column":37}}},"5":{"name":"(anonymous_5)","line":49,"loc":{"start":{"line":49,"column":21},"end":{"line":49,"column":50}}},"6":{"name":"(anonymous_6)","line":61,"loc":{"start":{"line":61,"column":10},"end":{"line":61,"column":25}}},"7":{"name":"(anonymous_7)","line":78,"loc":{"start":{"line":78,"column":9},"end":{"line":78,"column":42}}},"8":{"name":"(anonymous_8)","line":80,"loc":{"start":{"line":80,"column":15},"end":{"line":80,"column":29}}},"9":{"name":"(anonymous_9)","line":110,"loc":{"start":{"line":110,"column":27},"end":{"line":110,"column":91}}},"10":{"name":"(anonymous_10)","line":121,"loc":{"start":{"line":121,"column":21},"end":{"line":121,"column":42}}},"11":{"name":"(anonymous_11)","line":139,"loc":{"start":{"line":139,"column":22},"end":{"line":139,"column":39}}},"12":{"name":"(anonymous_12)","line":155,"loc":{"start":{"line":155,"column":17},"end":{"line":155,"column":61}}},"13":{"name":"(anonymous_13)","line":167,"loc":{"start":{"line":167,"column":20},"end":{"line":167,"column":39}}},"14":{"name":"(anonymous_14)","line":179,"loc":{"start":{"line":179,"column":8},"end":{"line":179,"column":25}}},"15":{"name":"(anonymous_15)","line":258,"loc":{"start":{"line":258,"column":10},"end":{"line":258,"column":27}}},"16":{"name":"(anonymous_16)","line":269,"loc":{"start":{"line":269,"column":14},"end":{"line":269,"column":31}}},"17":{"name":"(anonymous_17)","line":279,"loc":{"start":{"line":279,"column":17},"end":{"line":279,"column":39}}},"18":{"name":"(anonymous_18)","line":280,"loc":{"start":{"line":280,"column":21},"end":{"line":280,"column":32}}},"19":{"name":"(anonymous_19)","line":292,"loc":{"start":{"line":292,"column":21},"end":{"line":292,"column":50}}},"20":{"name":"(anonymous_20)","line":311,"loc":{"start":{"line":311,"column":29},"end":{"line":311,"column":46}}},"21":{"name":"(anonymous_21)","line":312,"loc":{"start":{"line":312,"column":41},"end":{"line":312,"column":53}}},"22":{"name":"(anonymous_22)","line":325,"loc":{"start":{"line":325,"column":37},"end":{"line":325,"column":77}}},"23":{"name":"(anonymous_23)","line":332,"loc":{"start":{"line":332,"column":98},"end":{"line":332,"column":112}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":7,"column":37}},"2":{"start":{"line":9,"column":0},"end":{"line":10,"column":23}},"3":{"start":{"line":12,"column":0},"end":{"line":16,"column":1}},"4":{"start":{"line":13,"column":2},"end":{"line":13,"column":15}},"5":{"start":{"line":14,"column":2},"end":{"line":14,"column":27}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":27}},"7":{"start":{"line":18,"column":0},"end":{"line":22,"column":1}},"8":{"start":{"line":19,"column":2},"end":{"line":21,"column":41}},"9":{"start":{"line":24,"column":0},"end":{"line":24,"column":11}},"10":{"start":{"line":31,"column":0},"end":{"line":35,"column":1}},"11":{"start":{"line":32,"column":2},"end":{"line":32,"column":19}},"12":{"start":{"line":33,"column":2},"end":{"line":33,"column":22}},"13":{"start":{"line":34,"column":2},"end":{"line":34,"column":17}},"14":{"start":{"line":37,"column":0},"end":{"line":47,"column":1}},"15":{"start":{"line":38,"column":2},"end":{"line":38,"column":16}},"16":{"start":{"line":39,"column":2},"end":{"line":39,"column":33}},"17":{"start":{"line":41,"column":2},"end":{"line":44,"column":3}},"18":{"start":{"line":42,"column":4},"end":{"line":42,"column":41}},"19":{"start":{"line":43,"column":4},"end":{"line":43,"column":40}},"20":{"start":{"line":46,"column":2},"end":{"line":46,"column":14}},"21":{"start":{"line":49,"column":0},"end":{"line":58,"column":1}},"22":{"start":{"line":50,"column":2},"end":{"line":50,"column":84}},"23":{"start":{"line":50,"column":34},"end":{"line":50,"column":84}},"24":{"start":{"line":51,"column":2},"end":{"line":51,"column":84}},"25":{"start":{"line":51,"column":34},"end":{"line":51,"column":84}},"26":{"start":{"line":52,"column":2},"end":{"line":52,"column":76}},"27":{"start":{"line":52,"column":27},"end":{"line":52,"column":76}},"28":{"start":{"line":54,"column":2},"end":{"line":54,"column":37}},"29":{"start":{"line":56,"column":2},"end":{"line":56,"column":54}},"30":{"start":{"line":57,"column":2},"end":{"line":57,"column":27}},"31":{"start":{"line":61,"column":0},"end":{"line":75,"column":1}},"32":{"start":{"line":62,"column":2},"end":{"line":62,"column":44}},"33":{"start":{"line":62,"column":27},"end":{"line":62,"column":44}},"34":{"start":{"line":63,"column":2},"end":{"line":63,"column":44}},"35":{"start":{"line":63,"column":27},"end":{"line":63,"column":44}},"36":{"start":{"line":64,"column":2},"end":{"line":64,"column":14}},"37":{"start":{"line":65,"column":2},"end":{"line":73,"column":3}},"38":{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},"39":{"start":{"line":67,"column":6},"end":{"line":67,"column":27}},"40":{"start":{"line":70,"column":4},"end":{"line":72,"column":5}},"41":{"start":{"line":71,"column":6},"end":{"line":71,"column":27}},"42":{"start":{"line":74,"column":2},"end":{"line":74,"column":25}},"43":{"start":{"line":78,"column":0},"end":{"line":97,"column":1}},"44":{"start":{"line":80,"column":2},"end":{"line":84,"column":3}},"45":{"start":{"line":81,"column":4},"end":{"line":81,"column":47}},"46":{"start":{"line":82,"column":4},"end":{"line":82,"column":21}},"47":{"start":{"line":83,"column":4},"end":{"line":83,"column":55}},"48":{"start":{"line":87,"column":2},"end":{"line":87,"column":62}},"49":{"start":{"line":88,"column":2},"end":{"line":88,"column":24}},"50":{"start":{"line":89,"column":2},"end":{"line":89,"column":14}},"51":{"start":{"line":91,"column":2},"end":{"line":94,"column":3}},"52":{"start":{"line":92,"column":4},"end":{"line":92,"column":20}},"53":{"start":{"line":93,"column":4},"end":{"line":93,"column":21}},"54":{"start":{"line":96,"column":2},"end":{"line":96,"column":12}},"55":{"start":{"line":110,"column":0},"end":{"line":289,"column":1}},"56":{"start":{"line":111,"column":2},"end":{"line":111,"column":18}},"57":{"start":{"line":113,"column":2},"end":{"line":113,"column":33}},"58":{"start":{"line":114,"column":2},"end":{"line":114,"column":45}},"59":{"start":{"line":114,"column":17},"end":{"line":114,"column":45}},"60":{"start":{"line":117,"column":2},"end":{"line":117,"column":35}},"61":{"start":{"line":118,"column":2},"end":{"line":118,"column":25}},"62":{"start":{"line":121,"column":2},"end":{"line":277,"column":3}},"63":{"start":{"line":123,"column":4},"end":{"line":123,"column":64}},"64":{"start":{"line":126,"column":4},"end":{"line":126,"column":58}},"65":{"start":{"line":128,"column":4},"end":{"line":128,"column":52}},"66":{"start":{"line":131,"column":4},"end":{"line":136,"column":5}},"67":{"start":{"line":139,"column":4},"end":{"line":152,"column":5}},"68":{"start":{"line":140,"column":6},"end":{"line":149,"column":7}},"69":{"start":{"line":141,"column":8},"end":{"line":141,"column":64}},"70":{"start":{"line":142,"column":8},"end":{"line":142,"column":26}},"71":{"start":{"line":142,"column":27},"end":{"line":142,"column":40}},"72":{"start":{"line":143,"column":13},"end":{"line":149,"column":7}},"73":{"start":{"line":144,"column":8},"end":{"line":144,"column":31}},"74":{"start":{"line":144,"column":32},"end":{"line":144,"column":45}},"75":{"start":{"line":145,"column":13},"end":{"line":149,"column":7}},"76":{"start":{"line":146,"column":8},"end":{"line":146,"column":31}},"77":{"start":{"line":146,"column":32},"end":{"line":146,"column":45}},"78":{"start":{"line":148,"column":8},"end":{"line":148,"column":64}},"79":{"start":{"line":151,"column":6},"end":{"line":151,"column":17}},"80":{"start":{"line":155,"column":4},"end":{"line":165,"column":5}},"81":{"start":{"line":156,"column":6},"end":{"line":164,"column":7}},"82":{"start":{"line":158,"column":8},"end":{"line":158,"column":80}},"83":{"start":{"line":160,"column":8},"end":{"line":160,"column":36}},"84":{"start":{"line":161,"column":13},"end":{"line":164,"column":7}},"85":{"start":{"line":162,"column":8},"end":{"line":162,"column":102}},"86":{"start":{"line":162,"column":32},"end":{"line":162,"column":102}},"87":{"start":{"line":163,"column":8},"end":{"line":163,"column":44}},"88":{"start":{"line":167,"column":4},"end":{"line":174,"column":5}},"89":{"start":{"line":169,"column":6},"end":{"line":169,"column":27}},"90":{"start":{"line":171,"column":6},"end":{"line":171,"column":24}},"91":{"start":{"line":173,"column":6},"end":{"line":173,"column":46}},"92":{"start":{"line":177,"column":4},"end":{"line":276,"column":7}},"93":{"start":{"line":181,"column":6},"end":{"line":195,"column":7}},"94":{"start":{"line":182,"column":8},"end":{"line":182,"column":26}},"95":{"start":{"line":184,"column":8},"end":{"line":192,"column":9}},"96":{"start":{"line":186,"column":10},"end":{"line":186,"column":82}},"97":{"start":{"line":188,"column":10},"end":{"line":188,"column":38}},"98":{"start":{"line":189,"column":15},"end":{"line":192,"column":9}},"99":{"start":{"line":190,"column":10},"end":{"line":190,"column":104}},"100":{"start":{"line":190,"column":34},"end":{"line":190,"column":104}},"101":{"start":{"line":191,"column":10},"end":{"line":191,"column":46}},"102":{"start":{"line":194,"column":8},"end":{"line":194,"column":15}},"103":{"start":{"line":198,"column":6},"end":{"line":198,"column":55}},"104":{"start":{"line":201,"column":6},"end":{"line":201,"column":44}},"105":{"start":{"line":202,"column":6},"end":{"line":202,"column":24}},"106":{"start":{"line":203,"column":6},"end":{"line":203,"column":26}},"107":{"start":{"line":206,"column":6},"end":{"line":206,"column":50}},"108":{"start":{"line":207,"column":6},"end":{"line":207,"column":59}},"109":{"start":{"line":208,"column":6},"end":{"line":210,"column":24}},"110":{"start":{"line":213,"column":6},"end":{"line":213,"column":59}},"111":{"start":{"line":214,"column":6},"end":{"line":214,"column":44}},"112":{"start":{"line":215,"column":6},"end":{"line":215,"column":66}},"113":{"start":{"line":218,"column":6},"end":{"line":218,"column":43}},"114":{"start":{"line":219,"column":6},"end":{"line":219,"column":29}},"115":{"start":{"line":220,"column":6},"end":{"line":220,"column":66}},"116":{"start":{"line":223,"column":6},"end":{"line":223,"column":101}},"117":{"start":{"line":226,"column":6},"end":{"line":226,"column":50}},"118":{"start":{"line":227,"column":6},"end":{"line":227,"column":39}},"119":{"start":{"line":228,"column":6},"end":{"line":228,"column":66}},"120":{"start":{"line":231,"column":6},"end":{"line":231,"column":92}},"121":{"start":{"line":234,"column":6},"end":{"line":234,"column":62}},"122":{"start":{"line":237,"column":6},"end":{"line":237,"column":55}},"123":{"start":{"line":238,"column":6},"end":{"line":238,"column":43}},"124":{"start":{"line":239,"column":6},"end":{"line":239,"column":66}},"125":{"start":{"line":242,"column":6},"end":{"line":242,"column":50}},"126":{"start":{"line":243,"column":6},"end":{"line":243,"column":38}},"127":{"start":{"line":247,"column":6},"end":{"line":251,"column":7}},"128":{"start":{"line":256,"column":6},"end":{"line":275,"column":9}},"129":{"start":{"line":259,"column":8},"end":{"line":274,"column":9}},"130":{"start":{"line":260,"column":10},"end":{"line":264,"column":11}},"131":{"start":{"line":267,"column":10},"end":{"line":271,"column":13}},"132":{"start":{"line":270,"column":12},"end":{"line":270,"column":30}},"133":{"start":{"line":273,"column":10},"end":{"line":273,"column":28}},"134":{"start":{"line":279,"column":2},"end":{"line":283,"column":3}},"135":{"start":{"line":280,"column":4},"end":{"line":282,"column":7}},"136":{"start":{"line":281,"column":6},"end":{"line":281,"column":32}},"137":{"start":{"line":286,"column":2},"end":{"line":288,"column":3}},"138":{"start":{"line":287,"column":4},"end":{"line":287,"column":34}},"139":{"start":{"line":292,"column":0},"end":{"line":303,"column":1}},"140":{"start":{"line":293,"column":2},"end":{"line":293,"column":20}},"141":{"start":{"line":295,"column":2},"end":{"line":300,"column":3}},"142":{"start":{"line":296,"column":4},"end":{"line":299,"column":5}},"143":{"start":{"line":297,"column":6},"end":{"line":297,"column":19}},"144":{"start":{"line":298,"column":6},"end":{"line":298,"column":12}},"145":{"start":{"line":302,"column":2},"end":{"line":302,"column":37}},"146":{"start":{"line":302,"column":13},"end":{"line":302,"column":37}},"147":{"start":{"line":311,"column":0},"end":{"line":315,"column":1}},"148":{"start":{"line":312,"column":2},"end":{"line":314,"column":5}},"149":{"start":{"line":313,"column":4},"end":{"line":313,"column":26}},"150":{"start":{"line":325,"column":0},"end":{"line":340,"column":1}},"151":{"start":{"line":326,"column":2},"end":{"line":326,"column":42}},"152":{"start":{"line":327,"column":2},"end":{"line":327,"column":31}},"153":{"start":{"line":329,"column":2},"end":{"line":329,"column":45}},"154":{"start":{"line":329,"column":17},"end":{"line":329,"column":45}},"155":{"start":{"line":331,"column":2},"end":{"line":339,"column":3}},"156":{"start":{"line":332,"column":4},"end":{"line":338,"column":7}},"157":{"start":{"line":333,"column":6},"end":{"line":333,"column":24}},"158":{"start":{"line":335,"column":6},"end":{"line":337,"column":7}},"159":{"start":{"line":336,"column":8},"end":{"line":336,"column":28}},"160":{"start":{"line":343,"column":0},"end":{"line":343,"column":27}}},"branchMap":{"1":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":9},"end":{"line":19,"column":30}},{"start":{"line":20,"column":7},"end":{"line":20,"column":40}},{"start":{"line":21,"column":7},"end":{"line":21,"column":40}}]},"2":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"3":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]},"4":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"5":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"6":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"7":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":2},"end":{"line":65,"column":2}},{"start":{"line":65,"column":2},"end":{"line":65,"column":2}}]},"8":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":2},"end":{"line":114,"column":2}},{"start":{"line":114,"column":2},"end":{"line":114,"column":2}}]},"9":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":6},"end":{"line":140,"column":6}},{"start":{"line":140,"column":6},"end":{"line":140,"column":6}}]},"10":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":13},"end":{"line":143,"column":13}},{"start":{"line":143,"column":13},"end":{"line":143,"column":13}}]},"11":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":13},"end":{"line":145,"column":13}},{"start":{"line":145,"column":13},"end":{"line":145,"column":13}}]},"12":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":6},"end":{"line":156,"column":6}},{"start":{"line":156,"column":6},"end":{"line":156,"column":6}}]},"13":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":9},"end":{"line":156,"column":20}},{"start":{"line":156,"column":24},"end":{"line":156,"column":53}}]},"14":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":13},"end":{"line":161,"column":13}},{"start":{"line":161,"column":13},"end":{"line":161,"column":13}}]},"15":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":8},"end":{"line":162,"column":8}},{"start":{"line":162,"column":8},"end":{"line":162,"column":8}}]},"16":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":6},"end":{"line":181,"column":6}},{"start":{"line":181,"column":6},"end":{"line":181,"column":6}}]},"17":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":8},"end":{"line":184,"column":8}},{"start":{"line":184,"column":8},"end":{"line":184,"column":8}}]},"18":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":11},"end":{"line":184,"column":21}},{"start":{"line":184,"column":25},"end":{"line":184,"column":53}}]},"19":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":15},"end":{"line":189,"column":15}},{"start":{"line":189,"column":15},"end":{"line":189,"column":15}}]},"20":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":10},"end":{"line":190,"column":10}},{"start":{"line":190,"column":10},"end":{"line":190,"column":10}}]},"21":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":8},"end":{"line":259,"column":8}},{"start":{"line":259,"column":8},"end":{"line":259,"column":8}}]},"22":{"line":259,"type":"binary-expr","locations":[{"start":{"line":259,"column":11},"end":{"line":259,"column":12}},{"start":{"line":259,"column":16},"end":{"line":259,"column":38}}]},"23":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":4},"end":{"line":296,"column":4}},{"start":{"line":296,"column":4},"end":{"line":296,"column":4}}]},"24":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":2},"end":{"line":302,"column":2}},{"start":{"line":302,"column":2},"end":{"line":302,"column":2}}]},"25":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":2},"end":{"line":329,"column":2}},{"start":{"line":329,"column":2},"end":{"line":329,"column":2}}]},"26":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":6},"end":{"line":335,"column":6}},{"start":{"line":335,"column":6},"end":{"line":335,"column":6}}]}},"code":["\"use strict\";","","var f = require('util').format","  , crypto = require('crypto')","  , retrieveBSON = require('../connection/utils').retrieveBSON","  , Query = require('../connection/commands').Query","  , MongoError = require('../error');","","var BSON = retrieveBSON(),","  Binary = BSON.Binary;","","var AuthSession = function(db, username, password) {","  this.db = db;","  this.username = username;","  this.password = password;","}","","AuthSession.prototype.equal = function(session) {","  return session.db == this.db","    && session.username == this.username","    && session.password == this.password;","}","","var id = 0;","","/**"," * Creates a new ScramSHA1 authentication mechanism"," * @class"," * @return {ScramSHA1} A cursor instance"," */","var ScramSHA1 = function(bson) {","  this.bson = bson;","  this.authStore = [];","  this.id = id++;","}","","var parsePayload = function(payload) {","  var dict = {};","  var parts = payload.split(',');","","  for(var i = 0; i < parts.length; i++) {","    var valueParts = parts[i].split('=');","    dict[valueParts[0]] = valueParts[1];","  }","","  return dict;","}","","var passwordDigest = function(username, password) {","  if(typeof username != 'string') throw new MongoError(\"username must be a string\");","  if(typeof password != 'string') throw new MongoError(\"password must be a string\");","  if(password.length == 0) throw new MongoError(\"password cannot be empty\");","  // Use node md5 generator","  var md5 = crypto.createHash('md5');","  // Generate keys used for authentication","  md5.update(username + \":mongo:\" + password, 'utf8');","  return md5.digest('hex');","}","","// XOR two buffers","var xor = function(a, b) {","  if (!Buffer.isBuffer(a)) a = new Buffer(a)","  if (!Buffer.isBuffer(b)) b = new Buffer(b)","  var res = []","  if (a.length > b.length) {","    for (var i = 0; i < b.length; i++) {","      res.push(a[i] ^ b[i])","    }","  } else {","    for (i = 0; i < a.length; i++) {","      res.push(a[i] ^ b[i])","    }","  }","  return new Buffer(res);","}","","// Create a final digest","var hi = function(data, salt, iterations) {","  // Create digest","  var digest = function(msg) {","    var hmac = crypto.createHmac('sha1', data);","    hmac.update(msg);","    return new Buffer(hmac.digest('base64'), 'base64');","  }","","  // Create variables","  salt = Buffer.concat([salt, new Buffer('\\x00\\x00\\x00\\x01')])","  var ui = digest(salt);","  var u1 = ui;","","  for(var i = 0; i < iterations - 1; i++) {","    u1 = digest(u1);","    ui = xor(ui, u1);","  }","","  return ui;","}","","/**"," * Authenticate"," * @method"," * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on"," * @param {[]Connections} connections Connections to authenticate using this authenticator"," * @param {string} db Name of the database"," * @param {string} username Username"," * @param {string} password Password"," * @param {authResultCallback} callback The callback to return the result from the authentication"," * @return {object}"," */","ScramSHA1.prototype.auth = function(server, connections, db, username, password, callback) {","  var self = this;","  // Total connections","  var count = connections.length;","  if(count == 0) return callback(null, null);","","  // Valid connections","  var numberOfValidConnections = 0;","  var errorObject = null;","","  // Execute MongoCR","  var executeScram = function(connection) {","    // Clean up the user","    username = username.replace('=', \"=3D\").replace(',', '=2C');","","    // Create a random nonce","    var nonce = crypto.randomBytes(24).toString('base64');","    // var nonce = 'MsQUY9iw0T9fx2MUEz6LZPwGuhVvWAhc'","    var firstBare = f(\"n=%s,r=%s\", username, nonce);","","    // Build command structure","    var cmd = {","        saslStart: 1","      , mechanism: 'SCRAM-SHA-1'","      , payload: new Binary(f(\"n,,%s\", firstBare))","      , autoAuthorize: 1","    }","","    // Handle the error","    var handleError = function(err, r) {","      if(err) {","        numberOfValidConnections = numberOfValidConnections - 1;","        errorObject = err; return false;","      } else if(r.result['$err']) {","        errorObject = r.result; return false;","      } else if(r.result['errmsg']) {","        errorObject = r.result; return false;","      } else {","        numberOfValidConnections = numberOfValidConnections + 1;","      }","","      return true","    }","","    // Finish up","    var finish = function(_count, _numberOfValidConnections) {","      if(_count == 0 && _numberOfValidConnections > 0) {","        // Store the auth details","        addAuthSession(self.authStore, new AuthSession(db, username, password));","        // Return correct authentication","        return callback(null, true);","      } else if(_count == 0) {","        if(errorObject == null) errorObject = new MongoError(f(\"failed to authenticate using scram\"));","        return callback(errorObject, false);","      }","    }","","    var handleEnd = function(_err, _r) {","      // Handle any error","      handleError(_err, _r)","      // Adjust the number of connections","      count = count - 1;","      // Execute the finish","      finish(count, numberOfValidConnections);","    }","","    // Write the commmand on the connection","    server(connection, new Query(self.bson, f(\"%s.$cmd\", db), cmd, {","      numberToSkip: 0, numberToReturn: 1","    }), function(err, r) {","      // Do we have an error, handle it","      if(handleError(err, r) == false) {","        count = count - 1;","","        if(count == 0 && numberOfValidConnections > 0) {","          // Store the auth details","          addAuthSession(self.authStore, new AuthSession(db, username, password));","          // Return correct authentication","          return callback(null, true);","        } else if(count == 0) {","          if(errorObject == null) errorObject = new MongoError(f(\"failed to authenticate using scram\"));","          return callback(errorObject, false);","        }","","        return;","      }","","      // Get the dictionary","      var dict = parsePayload(r.result.payload.value())","","      // Unpack dictionary","      var iterations = parseInt(dict.i, 10);","      var salt = dict.s;","      var rnonce = dict.r;","","      // Set up start of proof","      var withoutProof = f(\"c=biws,r=%s\", rnonce);","      var passwordDig = passwordDigest(username, password);","      var saltedPassword = hi(passwordDig","          , new Buffer(salt, 'base64')","          , iterations);","","      // Create the client key","      var hmac = crypto.createHmac('sha1', saltedPassword);","      hmac.update(new Buffer(\"Client Key\"));","      var clientKey = new Buffer(hmac.digest('base64'), 'base64');","","      // Create the stored key","      var hash = crypto.createHash('sha1');","      hash.update(clientKey);","      var storedKey = new Buffer(hash.digest('base64'), 'base64');","","      // Create the authentication message","      var authMsg = [firstBare, r.result.payload.value().toString('base64'), withoutProof].join(',');","","      // Create client signature","      hmac = crypto.createHmac('sha1', storedKey);","      hmac.update(new Buffer(authMsg));","      var clientSig = new Buffer(hmac.digest('base64'), 'base64');","","      // Create client proof","      var clientProof = f(\"p=%s\", new Buffer(xor(clientKey, clientSig)).toString('base64'));","","      // Create client final","      var clientFinal = [withoutProof, clientProof].join(',');","","      // Generate server key","      hmac = crypto.createHmac('sha1', saltedPassword);","      hmac.update(new Buffer('Server Key'))","      var serverKey = new Buffer(hmac.digest('base64'), 'base64');","","      // Generate server signature","      hmac = crypto.createHmac('sha1', serverKey);","      hmac.update(new Buffer(authMsg))","","      //","      // Create continue message","      var cmd = {","          saslContinue: 1","        , conversationId: r.result.conversationId","        , payload: new Binary(new Buffer(clientFinal))","      }","","      //","      // Execute sasl continue","      // Write the commmand on the connection","      server(connection, new Query(self.bson, f(\"%s.$cmd\", db), cmd, {","        numberToSkip: 0, numberToReturn: 1","      }), function(err, r) {","        if(r && r.result.done == false) {","          var cmd = {","              saslContinue: 1","            , conversationId: r.result.conversationId","            , payload: new Buffer(0)","          }","","          // Write the commmand on the connection","          server(connection, new Query(self.bson, f(\"%s.$cmd\", db), cmd, {","            numberToSkip: 0, numberToReturn: 1","          }), function(err, r) {","            handleEnd(err, r);","          });","        } else {","          handleEnd(err, r);","        }","      });","    });","  }","","  var _execute = function(_connection) {","    process.nextTick(function() {","      executeScram(_connection);","    });","  }","","  // For each connection we need to authenticate","  while(connections.length > 0) {","    _execute(connections.shift());","  }","}","","// Add to store only if it does not exist","var addAuthSession = function(authStore, session) {","  var found = false;","","  for(var i = 0; i < authStore.length; i++) {","    if(authStore[i].equal(session)) {","      found = true;","      break;","    }","  }","","  if(!found) authStore.push(session);","}","","/**"," * Remove authStore credentials"," * @method"," * @param {string} db Name of database we are removing authStore details about"," * @return {object}"," */","ScramSHA1.prototype.logout = function(dbName) {","  this.authStore = this.authStore.filter(function(x) {","    return x.db != dbName;","  });","}","","/**"," * Re authenticate pool"," * @method"," * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on"," * @param {[]Connections} connections Connections to authenticate using this authenticator"," * @param {authResultCallback} callback The callback to return the result from the authentication"," * @return {object}"," */","ScramSHA1.prototype.reauthenticate = function(server, connections, callback) {","  var authStore = this.authStore.slice(0);","  var count = authStore.length;","  // No connections","  if(count == 0) return callback(null, null);","  // Iterate over all the auth details stored","  for(var i = 0; i < authStore.length; i++) {","    this.auth(server, connections, authStore[i].db, authStore[i].username, authStore[i].password, function(err) {","      count = count - 1;","      // Done re-authenticating","      if(count == 0) {","        callback(err, null);","      }","    });","  }","}","","","module.exports = ScramSHA1;",""],"l":{"3":1,"9":1,"12":1,"13":0,"14":0,"15":0,"18":1,"19":0,"24":1,"31":1,"32":2,"33":2,"34":2,"37":1,"38":0,"39":0,"41":0,"42":0,"43":0,"46":0,"49":1,"50":0,"51":0,"52":0,"54":0,"56":0,"57":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"70":0,"71":0,"74":0,"78":1,"80":0,"81":0,"82":0,"83":0,"87":0,"88":0,"89":0,"91":0,"92":0,"93":0,"96":0,"110":1,"111":0,"113":0,"114":0,"117":0,"118":0,"121":0,"123":0,"126":0,"128":0,"131":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"148":0,"151":0,"155":0,"156":0,"158":0,"160":0,"161":0,"162":0,"163":0,"167":0,"169":0,"171":0,"173":0,"177":0,"181":0,"182":0,"184":0,"186":0,"188":0,"189":0,"190":0,"191":0,"194":0,"198":0,"201":0,"202":0,"203":0,"206":0,"207":0,"208":0,"213":0,"214":0,"215":0,"218":0,"219":0,"220":0,"223":0,"226":0,"227":0,"228":0,"231":0,"234":0,"237":0,"238":0,"239":0,"242":0,"243":0,"247":0,"256":0,"259":0,"260":0,"267":0,"270":0,"273":0,"279":0,"280":0,"281":0,"286":0,"287":0,"292":1,"293":0,"295":0,"296":0,"297":0,"298":0,"302":0,"311":1,"312":0,"313":0,"325":1,"326":0,"327":0,"329":0,"331":0,"332":0,"333":0,"335":0,"336":0,"343":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/wireprotocol/2_4_support.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/wireprotocol/2_4_support.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":1,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":1,"149":0,"150":0,"151":0,"152":1,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":1,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":1,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":1,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0,0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0,0],"72":[0,0],"73":[0,0,0,0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0,0],"81":[0,0],"82":[0,0],"83":[0,0,0],"84":[0,0],"85":[0,0],"86":[0,0,0],"87":[0,0],"88":[0,0,0,0],"89":[0,0],"90":[0,0,0],"91":[0,0],"92":[0,0,0,0,0,0,0,0],"93":[0,0],"94":[0,0,0],"95":[0,0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":19},"end":{"line":22,"column":30}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":32},"end":{"line":28,"column":91}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":32},"end":{"line":48,"column":91}}},"4":{"name":"(anonymous_4)","line":65,"loc":{"start":{"line":65,"column":32},"end":{"line":65,"column":91}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":36},"end":{"line":82,"column":81}}},"6":{"name":"(anonymous_6)","line":96,"loc":{"start":{"line":96,"column":33},"end":{"line":96,"column":112}}},"7":{"name":"(anonymous_7)","line":101,"loc":{"start":{"line":101,"column":22},"end":{"line":101,"column":44}}},"8":{"name":"(anonymous_8)","line":149,"loc":{"start":{"line":149,"column":33},"end":{"line":149,"column":89}}},"9":{"name":"(anonymous_9)","line":164,"loc":{"start":{"line":164,"column":23},"end":{"line":164,"column":79}}},"10":{"name":"(anonymous_10)","line":260,"loc":{"start":{"line":260,"column":19},"end":{"line":260,"column":75}}},"11":{"name":"(anonymous_11)","line":314,"loc":{"start":{"line":314,"column":22},"end":{"line":314,"column":45}}},"12":{"name":"(anonymous_12)","line":325,"loc":{"start":{"line":325,"column":24},"end":{"line":325,"column":47}}},"13":{"name":"(anonymous_13)","line":337,"loc":{"start":{"line":337,"column":37},"end":{"line":337,"column":80}}},"14":{"name":"(anonymous_14)","line":413,"loc":{"start":{"line":413,"column":21},"end":{"line":413,"column":97}}},"15":{"name":"(anonymous_15)","line":418,"loc":{"start":{"line":418,"column":18},"end":{"line":418,"column":44}}},"16":{"name":"(anonymous_16)","line":421,"loc":{"start":{"line":421,"column":30},"end":{"line":421,"column":41}}},"17":{"name":"(anonymous_17)","line":457,"loc":{"start":{"line":457,"column":33},"end":{"line":457,"column":55}}},"18":{"name":"(anonymous_18)","line":480,"loc":{"start":{"line":480,"column":23},"end":{"line":480,"column":34}}},"19":{"name":"(anonymous_19)","line":490,"loc":{"start":{"line":490,"column":23},"end":{"line":490,"column":99}}},"20":{"name":"(anonymous_20)","line":528,"loc":{"start":{"line":528,"column":25},"end":{"line":528,"column":42}}},"21":{"name":"(anonymous_21)","line":529,"loc":{"start":{"line":529,"column":17},"end":{"line":529,"column":39}}},"22":{"name":"(anonymous_22)","line":537,"loc":{"start":{"line":537,"column":31},"end":{"line":537,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":14,"column":62}},"2":{"start":{"line":16,"column":0},"end":{"line":17,"column":19}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":57}},"4":{"start":{"line":22,"column":0},"end":{"line":22,"column":32}},"5":{"start":{"line":28,"column":0},"end":{"line":46,"column":1}},"6":{"start":{"line":29,"column":2},"end":{"line":29,"column":26}},"7":{"start":{"line":31,"column":2},"end":{"line":31,"column":77}},"8":{"start":{"line":32,"column":2},"end":{"line":32,"column":40}},"9":{"start":{"line":35,"column":2},"end":{"line":35,"column":101}},"10":{"start":{"line":35,"column":24},"end":{"line":35,"column":101}},"11":{"start":{"line":38,"column":2},"end":{"line":38,"column":51}},"12":{"start":{"line":41,"column":2},"end":{"line":43,"column":3}},"13":{"start":{"line":42,"column":4},"end":{"line":42,"column":96}},"14":{"start":{"line":45,"column":2},"end":{"line":45,"column":92}},"15":{"start":{"line":48,"column":0},"end":{"line":63,"column":1}},"16":{"start":{"line":49,"column":2},"end":{"line":49,"column":26}},"17":{"start":{"line":51,"column":2},"end":{"line":51,"column":77}},"18":{"start":{"line":52,"column":2},"end":{"line":52,"column":40}},"19":{"start":{"line":55,"column":2},"end":{"line":55,"column":51}},"20":{"start":{"line":58,"column":2},"end":{"line":60,"column":3}},"21":{"start":{"line":59,"column":4},"end":{"line":59,"column":96}},"22":{"start":{"line":62,"column":2},"end":{"line":62,"column":92}},"23":{"start":{"line":65,"column":0},"end":{"line":80,"column":1}},"24":{"start":{"line":66,"column":2},"end":{"line":66,"column":26}},"25":{"start":{"line":68,"column":2},"end":{"line":68,"column":77}},"26":{"start":{"line":69,"column":2},"end":{"line":69,"column":40}},"27":{"start":{"line":72,"column":2},"end":{"line":72,"column":51}},"28":{"start":{"line":75,"column":2},"end":{"line":77,"column":3}},"29":{"start":{"line":76,"column":4},"end":{"line":76,"column":96}},"30":{"start":{"line":79,"column":2},"end":{"line":79,"column":92}},"31":{"start":{"line":82,"column":0},"end":{"line":94,"column":1}},"32":{"start":{"line":84,"column":2},"end":{"line":84,"column":52}},"33":{"start":{"line":86,"column":2},"end":{"line":90,"column":3}},"34":{"start":{"line":87,"column":4},"end":{"line":89,"column":7}},"35":{"start":{"line":93,"column":2},"end":{"line":93,"column":57}},"36":{"start":{"line":93,"column":36},"end":{"line":93,"column":57}},"37":{"start":{"line":96,"column":0},"end":{"line":147,"column":1}},"38":{"start":{"line":98,"column":2},"end":{"line":98,"column":89}},"39":{"start":{"line":101,"column":2},"end":{"line":122,"column":3}},"40":{"start":{"line":102,"column":4},"end":{"line":102,"column":33}},"41":{"start":{"line":102,"column":12},"end":{"line":102,"column":33}},"42":{"start":{"line":104,"column":4},"end":{"line":104,"column":27}},"43":{"start":{"line":107,"column":4},"end":{"line":109,"column":5}},"44":{"start":{"line":108,"column":6},"end":{"line":108,"column":94}},"45":{"start":{"line":112,"column":4},"end":{"line":114,"column":19}},"46":{"start":{"line":117,"column":4},"end":{"line":117,"column":40}},"47":{"start":{"line":118,"column":4},"end":{"line":118,"column":36}},"48":{"start":{"line":121,"column":4},"end":{"line":121,"column":39}},"49":{"start":{"line":125,"column":2},"end":{"line":125,"column":24}},"50":{"start":{"line":128,"column":2},"end":{"line":130,"column":3}},"51":{"start":{"line":129,"column":4},"end":{"line":129,"column":27}},"52":{"start":{"line":133,"column":2},"end":{"line":135,"column":3}},"53":{"start":{"line":134,"column":4},"end":{"line":134,"column":57}},"54":{"start":{"line":137,"column":2},"end":{"line":139,"column":3}},"55":{"start":{"line":138,"column":4},"end":{"line":138,"column":59}},"56":{"start":{"line":141,"column":2},"end":{"line":143,"column":3}},"57":{"start":{"line":142,"column":4},"end":{"line":142,"column":61}},"58":{"start":{"line":146,"column":2},"end":{"line":146,"column":57}},"59":{"start":{"line":149,"column":0},"end":{"line":160,"column":1}},"60":{"start":{"line":151,"column":2},"end":{"line":159,"column":3}},"61":{"start":{"line":152,"column":4},"end":{"line":152,"column":74}},"62":{"start":{"line":153,"column":9},"end":{"line":159,"column":3}},"63":{"start":{"line":154,"column":4},"end":{"line":154,"column":11}},"64":{"start":{"line":155,"column":9},"end":{"line":159,"column":3}},"65":{"start":{"line":156,"column":4},"end":{"line":156,"column":71}},"66":{"start":{"line":158,"column":4},"end":{"line":158,"column":88}},"67":{"start":{"line":164,"column":0},"end":{"line":256,"column":1}},"68":{"start":{"line":166,"column":2},"end":{"line":166,"column":26}},"69":{"start":{"line":168,"column":2},"end":{"line":168,"column":55}},"70":{"start":{"line":170,"column":2},"end":{"line":170,"column":65}},"71":{"start":{"line":171,"column":2},"end":{"line":171,"column":25}},"72":{"start":{"line":174,"column":2},"end":{"line":180,"column":3}},"73":{"start":{"line":175,"column":4},"end":{"line":175,"column":43}},"74":{"start":{"line":176,"column":9},"end":{"line":180,"column":3}},"75":{"start":{"line":177,"column":4},"end":{"line":177,"column":39}},"76":{"start":{"line":179,"column":4},"end":{"line":179,"column":43}},"77":{"start":{"line":182,"column":2},"end":{"line":182,"column":43}},"78":{"start":{"line":184,"column":2},"end":{"line":184,"column":19}},"79":{"start":{"line":186,"column":2},"end":{"line":186,"column":34}},"80":{"start":{"line":189,"column":2},"end":{"line":192,"column":3}},"81":{"start":{"line":190,"column":4},"end":{"line":190,"column":57}},"82":{"start":{"line":191,"column":4},"end":{"line":191,"column":31}},"83":{"start":{"line":195,"column":2},"end":{"line":195,"column":73}},"84":{"start":{"line":195,"column":15},"end":{"line":195,"column":73}},"85":{"start":{"line":196,"column":2},"end":{"line":196,"column":71}},"86":{"start":{"line":196,"column":15},"end":{"line":196,"column":71}},"87":{"start":{"line":197,"column":2},"end":{"line":197,"column":83}},"88":{"start":{"line":197,"column":19},"end":{"line":197,"column":83}},"89":{"start":{"line":198,"column":2},"end":{"line":198,"column":86}},"90":{"start":{"line":198,"column":20},"end":{"line":198,"column":86}},"91":{"start":{"line":199,"column":2},"end":{"line":199,"column":80}},"92":{"start":{"line":199,"column":18},"end":{"line":199,"column":80}},"93":{"start":{"line":200,"column":2},"end":{"line":200,"column":68}},"94":{"start":{"line":200,"column":14},"end":{"line":200,"column":68}},"95":{"start":{"line":201,"column":2},"end":{"line":201,"column":68}},"96":{"start":{"line":201,"column":14},"end":{"line":201,"column":68}},"97":{"start":{"line":202,"column":2},"end":{"line":202,"column":92}},"98":{"start":{"line":202,"column":22},"end":{"line":202,"column":92}},"99":{"start":{"line":203,"column":2},"end":{"line":203,"column":80}},"100":{"start":{"line":203,"column":18},"end":{"line":203,"column":80}},"101":{"start":{"line":204,"column":2},"end":{"line":204,"column":86}},"102":{"start":{"line":204,"column":20},"end":{"line":204,"column":86}},"103":{"start":{"line":206,"column":2},"end":{"line":212,"column":3}},"104":{"start":{"line":209,"column":4},"end":{"line":209,"column":47}},"105":{"start":{"line":210,"column":4},"end":{"line":210,"column":31}},"106":{"start":{"line":211,"column":4},"end":{"line":211,"column":31}},"107":{"start":{"line":215,"column":2},"end":{"line":219,"column":3}},"108":{"start":{"line":216,"column":4},"end":{"line":216,"column":34}},"109":{"start":{"line":218,"column":4},"end":{"line":218,"column":24}},"110":{"start":{"line":222,"column":2},"end":{"line":224,"column":3}},"111":{"start":{"line":223,"column":4},"end":{"line":223,"column":117}},"112":{"start":{"line":227,"column":2},"end":{"line":230,"column":3}},"113":{"start":{"line":228,"column":4},"end":{"line":228,"column":20}},"114":{"start":{"line":229,"column":4},"end":{"line":229,"column":30}},"115":{"start":{"line":233,"column":2},"end":{"line":234,"column":41}},"116":{"start":{"line":235,"column":2},"end":{"line":236,"column":38}},"117":{"start":{"line":239,"column":2},"end":{"line":243,"column":5}},"118":{"start":{"line":246,"column":2},"end":{"line":246,"column":43}},"119":{"start":{"line":249,"column":2},"end":{"line":249,"column":69}},"120":{"start":{"line":249,"column":39},"end":{"line":249,"column":69}},"121":{"start":{"line":250,"column":2},"end":{"line":250,"column":78}},"122":{"start":{"line":250,"column":42},"end":{"line":250,"column":78}},"123":{"start":{"line":251,"column":2},"end":{"line":251,"column":90}},"124":{"start":{"line":251,"column":46},"end":{"line":251,"column":90}},"125":{"start":{"line":252,"column":2},"end":{"line":252,"column":72}},"126":{"start":{"line":252,"column":40},"end":{"line":252,"column":72}},"127":{"start":{"line":253,"column":2},"end":{"line":253,"column":66}},"128":{"start":{"line":253,"column":38},"end":{"line":253,"column":66}},"129":{"start":{"line":255,"column":2},"end":{"line":255,"column":15}},"130":{"start":{"line":260,"column":0},"end":{"line":312,"column":1}},"131":{"start":{"line":262,"column":2},"end":{"line":262,"column":25}},"132":{"start":{"line":264,"column":2},"end":{"line":264,"column":55}},"133":{"start":{"line":266,"column":2},"end":{"line":266,"column":20}},"134":{"start":{"line":267,"column":2},"end":{"line":269,"column":3}},"135":{"start":{"line":268,"column":4},"end":{"line":268,"column":31}},"136":{"start":{"line":272,"column":2},"end":{"line":272,"column":29}},"137":{"start":{"line":275,"column":2},"end":{"line":277,"column":3}},"138":{"start":{"line":276,"column":4},"end":{"line":276,"column":136}},"139":{"start":{"line":280,"column":2},"end":{"line":280,"column":48}},"140":{"start":{"line":280,"column":22},"end":{"line":280,"column":48}},"141":{"start":{"line":283,"column":2},"end":{"line":284,"column":41}},"142":{"start":{"line":287,"column":2},"end":{"line":288,"column":38}},"143":{"start":{"line":291,"column":2},"end":{"line":298,"column":3}},"144":{"start":{"line":294,"column":4},"end":{"line":297,"column":6}},"145":{"start":{"line":301,"column":2},"end":{"line":305,"column":5}},"146":{"start":{"line":308,"column":2},"end":{"line":308,"column":43}},"147":{"start":{"line":311,"column":2},"end":{"line":311,"column":15}},"148":{"start":{"line":314,"column":0},"end":{"line":323,"column":1}},"149":{"start":{"line":315,"column":2},"end":{"line":321,"column":3}},"150":{"start":{"line":320,"column":4},"end":{"line":320,"column":16}},"151":{"start":{"line":322,"column":2},"end":{"line":322,"column":15}},"152":{"start":{"line":325,"column":0},"end":{"line":332,"column":1}},"153":{"start":{"line":326,"column":2},"end":{"line":326,"column":14}},"154":{"start":{"line":327,"column":2},"end":{"line":327,"column":51}},"155":{"start":{"line":327,"column":29},"end":{"line":327,"column":51}},"156":{"start":{"line":328,"column":2},"end":{"line":328,"column":72}},"157":{"start":{"line":328,"column":36},"end":{"line":328,"column":72}},"158":{"start":{"line":329,"column":2},"end":{"line":329,"column":51}},"159":{"start":{"line":329,"column":29},"end":{"line":329,"column":51}},"160":{"start":{"line":330,"column":2},"end":{"line":330,"column":63}},"161":{"start":{"line":330,"column":33},"end":{"line":330,"column":63}},"162":{"start":{"line":331,"column":2},"end":{"line":331,"column":12}},"163":{"start":{"line":337,"column":0},"end":{"line":408,"column":1}},"164":{"start":{"line":338,"column":2},"end":{"line":338,"column":35}},"165":{"start":{"line":339,"column":2},"end":{"line":341,"column":3}},"166":{"start":{"line":340,"column":4},"end":{"line":340,"column":30}},"167":{"start":{"line":344,"column":2},"end":{"line":404,"column":3}},"168":{"start":{"line":345,"column":4},"end":{"line":345,"column":28}},"169":{"start":{"line":346,"column":4},"end":{"line":346,"column":20}},"170":{"start":{"line":348,"column":4},"end":{"line":350,"column":5}},"171":{"start":{"line":349,"column":6},"end":{"line":349,"column":32}},"172":{"start":{"line":353,"column":4},"end":{"line":355,"column":5}},"173":{"start":{"line":354,"column":6},"end":{"line":354,"column":66}},"174":{"start":{"line":358,"column":4},"end":{"line":362,"column":5}},"175":{"start":{"line":359,"column":6},"end":{"line":359,"column":59}},"176":{"start":{"line":360,"column":11},"end":{"line":362,"column":5}},"177":{"start":{"line":361,"column":6},"end":{"line":361,"column":40}},"178":{"start":{"line":365,"column":4},"end":{"line":367,"column":5}},"179":{"start":{"line":366,"column":6},"end":{"line":366,"column":40}},"180":{"start":{"line":370,"column":4},"end":{"line":400,"column":5}},"181":{"start":{"line":371,"column":6},"end":{"line":371,"column":44}},"182":{"start":{"line":371,"column":25},"end":{"line":371,"column":44}},"183":{"start":{"line":372,"column":6},"end":{"line":372,"column":37}},"184":{"start":{"line":373,"column":6},"end":{"line":373,"column":72}},"185":{"start":{"line":376,"column":6},"end":{"line":395,"column":7}},"186":{"start":{"line":384,"column":8},"end":{"line":384,"column":73}},"187":{"start":{"line":384,"column":44},"end":{"line":384,"column":73}},"188":{"start":{"line":385,"column":8},"end":{"line":389,"column":11}},"189":{"start":{"line":391,"column":8},"end":{"line":394,"column":9}},"190":{"start":{"line":396,"column":11},"end":{"line":400,"column":5}},"191":{"start":{"line":397,"column":6},"end":{"line":397,"column":32}},"192":{"start":{"line":399,"column":6},"end":{"line":399,"column":25}},"193":{"start":{"line":403,"column":4},"end":{"line":403,"column":75}},"194":{"start":{"line":403,"column":40},"end":{"line":403,"column":75}},"195":{"start":{"line":407,"column":2},"end":{"line":407,"column":52}},"196":{"start":{"line":413,"column":0},"end":{"line":488,"column":1}},"197":{"start":{"line":414,"column":2},"end":{"line":414,"column":26}},"198":{"start":{"line":416,"column":2},"end":{"line":416,"column":25}},"199":{"start":{"line":418,"column":2},"end":{"line":484,"column":3}},"200":{"start":{"line":420,"column":4},"end":{"line":424,"column":5}},"201":{"start":{"line":421,"column":6},"end":{"line":423,"column":9}},"202":{"start":{"line":422,"column":8},"end":{"line":422,"column":90}},"203":{"start":{"line":427,"column":4},"end":{"line":427,"column":27}},"204":{"start":{"line":429,"column":4},"end":{"line":429,"column":83}},"205":{"start":{"line":431,"column":4},"end":{"line":431,"column":59}},"206":{"start":{"line":433,"column":4},"end":{"line":433,"column":61}},"207":{"start":{"line":436,"column":4},"end":{"line":436,"column":35}},"208":{"start":{"line":438,"column":4},"end":{"line":483,"column":5}},"209":{"start":{"line":440,"column":6},"end":{"line":440,"column":26}},"210":{"start":{"line":443,"column":6},"end":{"line":443,"column":46}},"211":{"start":{"line":445,"column":6},"end":{"line":449,"column":7}},"212":{"start":{"line":446,"column":8},"end":{"line":448,"column":9}},"213":{"start":{"line":447,"column":10},"end":{"line":447,"column":87}},"214":{"start":{"line":452,"column":6},"end":{"line":452,"column":100}},"215":{"start":{"line":454,"column":6},"end":{"line":454,"column":36}},"216":{"start":{"line":457,"column":6},"end":{"line":471,"column":7}},"217":{"start":{"line":458,"column":8},"end":{"line":458,"column":37}},"218":{"start":{"line":458,"column":16},"end":{"line":458,"column":37}},"219":{"start":{"line":460,"column":8},"end":{"line":460,"column":32}},"220":{"start":{"line":462,"column":8},"end":{"line":462,"column":32}},"221":{"start":{"line":465,"column":8},"end":{"line":467,"column":9}},"222":{"start":{"line":466,"column":10},"end":{"line":466,"column":111}},"223":{"start":{"line":470,"column":8},"end":{"line":470,"column":34}},"224":{"start":{"line":474,"column":6},"end":{"line":474,"column":49}},"225":{"start":{"line":478,"column":6},"end":{"line":478,"column":98}},"226":{"start":{"line":480,"column":6},"end":{"line":482,"column":9}},"227":{"start":{"line":481,"column":8},"end":{"line":481,"column":90}},"228":{"start":{"line":487,"column":2},"end":{"line":487,"column":28}},"229":{"start":{"line":490,"column":0},"end":{"line":568,"column":1}},"230":{"start":{"line":492,"column":2},"end":{"line":492,"column":28}},"231":{"start":{"line":494,"column":2},"end":{"line":494,"column":25}},"232":{"start":{"line":496,"column":2},"end":{"line":496,"column":57}},"233":{"start":{"line":498,"column":2},"end":{"line":498,"column":59}},"234":{"start":{"line":500,"column":2},"end":{"line":500,"column":12}},"235":{"start":{"line":503,"column":2},"end":{"line":561,"column":3}},"236":{"start":{"line":505,"column":4},"end":{"line":505,"column":86}},"237":{"start":{"line":507,"column":4},"end":{"line":507,"column":35}},"238":{"start":{"line":509,"column":4},"end":{"line":560,"column":5}},"239":{"start":{"line":511,"column":6},"end":{"line":511,"column":26}},"240":{"start":{"line":514,"column":6},"end":{"line":549,"column":7}},"241":{"start":{"line":515,"column":8},"end":{"line":515,"column":48}},"242":{"start":{"line":517,"column":8},"end":{"line":520,"column":9}},"243":{"start":{"line":518,"column":10},"end":{"line":519,"column":89}},"244":{"start":{"line":519,"column":12},"end":{"line":519,"column":89}},"245":{"start":{"line":523,"column":8},"end":{"line":523,"column":102}},"246":{"start":{"line":525,"column":8},"end":{"line":525,"column":38}},"247":{"start":{"line":528,"column":8},"end":{"line":543,"column":9}},"248":{"start":{"line":529,"column":10},"end":{"line":542,"column":11}},"249":{"start":{"line":530,"column":12},"end":{"line":530,"column":32}},"250":{"start":{"line":530,"column":20},"end":{"line":530,"column":32}},"251":{"start":{"line":532,"column":12},"end":{"line":532,"column":36}},"252":{"start":{"line":534,"column":12},"end":{"line":534,"column":59}},"253":{"start":{"line":534,"column":21},"end":{"line":534,"column":59}},"254":{"start":{"line":536,"column":12},"end":{"line":541,"column":13}},"255":{"start":{"line":537,"column":14},"end":{"line":540,"column":17}},"256":{"start":{"line":538,"column":16},"end":{"line":538,"column":49}},"257":{"start":{"line":538,"column":26},"end":{"line":538,"column":49}},"258":{"start":{"line":539,"column":16},"end":{"line":539,"column":110}},"259":{"start":{"line":546,"column":8},"end":{"line":546,"column":44}},"260":{"start":{"line":548,"column":8},"end":{"line":548,"column":71}},"261":{"start":{"line":552,"column":6},"end":{"line":552,"column":30}},"262":{"start":{"line":555,"column":6},"end":{"line":555,"column":97}},"263":{"start":{"line":557,"column":6},"end":{"line":559,"column":7}},"264":{"start":{"line":558,"column":8},"end":{"line":558,"column":89}},"265":{"start":{"line":564,"column":2},"end":{"line":567,"column":3}},"266":{"start":{"line":566,"column":4},"end":{"line":566,"column":52}},"267":{"start":{"line":570,"column":0},"end":{"line":570,"column":30}}},"branchMap":{"1":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":12},"end":{"line":29,"column":19}},{"start":{"line":29,"column":23},"end":{"line":29,"column":25}}]},"2":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":54},"end":{"line":31,"column":69}},{"start":{"line":31,"column":72},"end":{"line":31,"column":76}}]},"3":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":29},"end":{"line":32,"column":32}},{"start":{"line":32,"column":34},"end":{"line":32,"column":39}}]},"4":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"5":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":21},"end":{"line":38,"column":41}},{"start":{"line":38,"column":45},"end":{"line":38,"column":50}}]},"6":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"7":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":5},"end":{"line":41,"column":13}},{"start":{"line":41,"column":17},"end":{"line":41,"column":36}}]},"8":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":12},"end":{"line":49,"column":19}},{"start":{"line":49,"column":23},"end":{"line":49,"column":25}}]},"9":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":54},"end":{"line":51,"column":69}},{"start":{"line":51,"column":72},"end":{"line":51,"column":76}}]},"10":{"line":52,"type":"cond-expr","locations":[{"start":{"line":52,"column":29},"end":{"line":52,"column":32}},{"start":{"line":52,"column":34},"end":{"line":52,"column":39}}]},"11":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":21},"end":{"line":55,"column":41}},{"start":{"line":55,"column":45},"end":{"line":55,"column":50}}]},"12":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"13":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":5},"end":{"line":58,"column":13}},{"start":{"line":58,"column":17},"end":{"line":58,"column":36}}]},"14":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":12},"end":{"line":66,"column":19}},{"start":{"line":66,"column":23},"end":{"line":66,"column":25}}]},"15":{"line":68,"type":"cond-expr","locations":[{"start":{"line":68,"column":54},"end":{"line":68,"column":69}},{"start":{"line":68,"column":72},"end":{"line":68,"column":76}}]},"16":{"line":69,"type":"cond-expr","locations":[{"start":{"line":69,"column":29},"end":{"line":69,"column":32}},{"start":{"line":69,"column":34},"end":{"line":69,"column":39}}]},"17":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":21},"end":{"line":72,"column":41}},{"start":{"line":72,"column":45},"end":{"line":72,"column":50}}]},"18":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":2},"end":{"line":75,"column":2}},{"start":{"line":75,"column":2},"end":{"line":75,"column":2}}]},"19":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":5},"end":{"line":75,"column":13}},{"start":{"line":75,"column":17},"end":{"line":75,"column":36}}]},"20":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"21":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":5},"end":{"line":86,"column":9}},{"start":{"line":86,"column":13},"end":{"line":86,"column":31}}]},"22":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":2},"end":{"line":93,"column":2}},{"start":{"line":93,"column":2},"end":{"line":93,"column":2}}]},"23":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":102,"column":4}},{"start":{"line":102,"column":4},"end":{"line":102,"column":4}}]},"24":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":107,"column":4}},{"start":{"line":107,"column":4},"end":{"line":107,"column":4}}]},"25":{"line":112,"type":"cond-expr","locations":[{"start":{"line":113,"column":8},"end":{"line":113,"column":35}},{"start":{"line":114,"column":8},"end":{"line":114,"column":18}}]},"26":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":2},"end":{"line":128,"column":2}},{"start":{"line":128,"column":2},"end":{"line":128,"column":2}}]},"27":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":2},"end":{"line":133,"column":2}},{"start":{"line":133,"column":2},"end":{"line":133,"column":2}}]},"28":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":2},"end":{"line":137,"column":2}},{"start":{"line":137,"column":2},"end":{"line":137,"column":2}}]},"29":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":2},"end":{"line":141,"column":2}},{"start":{"line":141,"column":2},"end":{"line":141,"column":2}}]},"30":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":2},"end":{"line":151,"column":2}},{"start":{"line":151,"column":2},"end":{"line":151,"column":2}}]},"31":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":9},"end":{"line":153,"column":9}},{"start":{"line":153,"column":9},"end":{"line":153,"column":9}}]},"32":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":9},"end":{"line":155,"column":9}},{"start":{"line":155,"column":9},"end":{"line":155,"column":9}}]},"33":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":12},"end":{"line":166,"column":19}},{"start":{"line":166,"column":23},"end":{"line":166,"column":25}}]},"34":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":26},"end":{"line":170,"column":39}},{"start":{"line":170,"column":43},"end":{"line":170,"column":64}}]},"35":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":2},"end":{"line":174,"column":2}},{"start":{"line":174,"column":2},"end":{"line":174,"column":2}}]},"36":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":9},"end":{"line":176,"column":9}},{"start":{"line":176,"column":9},"end":{"line":176,"column":9}}]},"37":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":12},"end":{"line":176,"column":33}},{"start":{"line":176,"column":37},"end":{"line":176,"column":78}},{"start":{"line":176,"column":83},"end":{"line":176,"column":104}},{"start":{"line":176,"column":108},"end":{"line":176,"column":134}}]},"38":{"line":182,"type":"binary-expr","locations":[{"start":{"line":182,"column":21},"end":{"line":182,"column":37}},{"start":{"line":182,"column":41},"end":{"line":182,"column":42}}]},"39":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":2},"end":{"line":189,"column":2}},{"start":{"line":189,"column":2},"end":{"line":189,"column":2}}]},"40":{"line":189,"type":"binary-expr","locations":[{"start":{"line":189,"column":5},"end":{"line":189,"column":30}},{"start":{"line":189,"column":34},"end":{"line":189,"column":48}}]},"41":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":2},"end":{"line":195,"column":2}},{"start":{"line":195,"column":2},"end":{"line":195,"column":2}}]},"42":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":2},"end":{"line":196,"column":2}},{"start":{"line":196,"column":2},"end":{"line":196,"column":2}}]},"43":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":2},"end":{"line":197,"column":2}},{"start":{"line":197,"column":2},"end":{"line":197,"column":2}}]},"44":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":2},"end":{"line":198,"column":2}},{"start":{"line":198,"column":2},"end":{"line":198,"column":2}}]},"45":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":2},"end":{"line":199,"column":2}},{"start":{"line":199,"column":2},"end":{"line":199,"column":2}}]},"46":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":2},"end":{"line":200,"column":2}},{"start":{"line":200,"column":2},"end":{"line":200,"column":2}}]},"47":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":2},"end":{"line":201,"column":2}},{"start":{"line":201,"column":2},"end":{"line":201,"column":2}}]},"48":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":2},"end":{"line":202,"column":2}},{"start":{"line":202,"column":2},"end":{"line":202,"column":2}}]},"49":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":2},"end":{"line":203,"column":2}},{"start":{"line":203,"column":2},"end":{"line":203,"column":2}}]},"50":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":2},"end":{"line":204,"column":2}},{"start":{"line":204,"column":2},"end":{"line":204,"column":2}}]},"51":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":2},"end":{"line":206,"column":2}},{"start":{"line":206,"column":2},"end":{"line":206,"column":2}}]},"52":{"line":209,"type":"binary-expr","locations":[{"start":{"line":209,"column":31},"end":{"line":209,"column":40}},{"start":{"line":209,"column":44},"end":{"line":209,"column":45}}]},"53":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":2},"end":{"line":215,"column":2}},{"start":{"line":215,"column":2},"end":{"line":215,"column":2}}]},"54":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":2},"end":{"line":222,"column":2}},{"start":{"line":222,"column":2},"end":{"line":222,"column":2}}]},"55":{"line":222,"type":"binary-expr","locations":[{"start":{"line":222,"column":5},"end":{"line":222,"column":20}},{"start":{"line":222,"column":24},"end":{"line":222,"column":56}}]},"56":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":2},"end":{"line":227,"column":2}},{"start":{"line":227,"column":2},"end":{"line":227,"column":2}}]},"57":{"line":233,"type":"cond-expr","locations":[{"start":{"line":234,"column":6},"end":{"line":234,"column":32}},{"start":{"line":234,"column":35},"end":{"line":234,"column":40}}]},"58":{"line":235,"type":"cond-expr","locations":[{"start":{"line":236,"column":6},"end":{"line":236,"column":29}},{"start":{"line":236,"column":32},"end":{"line":236,"column":37}}]},"59":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":2},"end":{"line":249,"column":2}},{"start":{"line":249,"column":2},"end":{"line":249,"column":2}}]},"60":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":2},"end":{"line":250,"column":2}},{"start":{"line":250,"column":2},"end":{"line":250,"column":2}}]},"61":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":2},"end":{"line":251,"column":2}},{"start":{"line":251,"column":2},"end":{"line":251,"column":2}}]},"62":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":2},"end":{"line":252,"column":2}},{"start":{"line":252,"column":2},"end":{"line":252,"column":2}}]},"63":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":2},"end":{"line":253,"column":2}},{"start":{"line":253,"column":2},"end":{"line":253,"column":2}}]},"64":{"line":262,"type":"binary-expr","locations":[{"start":{"line":262,"column":12},"end":{"line":262,"column":19}},{"start":{"line":262,"column":23},"end":{"line":262,"column":25}}]},"65":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":2},"end":{"line":275,"column":2}},{"start":{"line":275,"column":2},"end":{"line":275,"column":2}}]},"66":{"line":275,"type":"binary-expr","locations":[{"start":{"line":275,"column":5},"end":{"line":275,"column":20}},{"start":{"line":275,"column":24},"end":{"line":275,"column":56}}]},"67":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":2},"end":{"line":280,"column":2}},{"start":{"line":280,"column":2},"end":{"line":280,"column":2}}]},"68":{"line":283,"type":"cond-expr","locations":[{"start":{"line":284,"column":6},"end":{"line":284,"column":32}},{"start":{"line":284,"column":35},"end":{"line":284,"column":40}}]},"69":{"line":287,"type":"cond-expr","locations":[{"start":{"line":288,"column":6},"end":{"line":288,"column":29}},{"start":{"line":288,"column":32},"end":{"line":288,"column":37}}]},"70":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":2},"end":{"line":291,"column":2}},{"start":{"line":291,"column":2},"end":{"line":291,"column":2}}]},"71":{"line":291,"type":"binary-expr","locations":[{"start":{"line":291,"column":5},"end":{"line":291,"column":30}},{"start":{"line":292,"column":7},"end":{"line":292,"column":21}},{"start":{"line":293,"column":7},"end":{"line":293,"column":45}}]},"72":{"line":315,"type":"if","locations":[{"start":{"line":315,"column":2},"end":{"line":315,"column":2}},{"start":{"line":315,"column":2},"end":{"line":315,"column":2}}]},"73":{"line":315,"type":"binary-expr","locations":[{"start":{"line":315,"column":5},"end":{"line":315,"column":19}},{"start":{"line":316,"column":7},"end":{"line":316,"column":28}},{"start":{"line":317,"column":7},"end":{"line":317,"column":29}},{"start":{"line":318,"column":7},"end":{"line":318,"column":33}},{"start":{"line":319,"column":7},"end":{"line":319,"column":44}}]},"74":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":2},"end":{"line":327,"column":2}},{"start":{"line":327,"column":2},"end":{"line":327,"column":2}}]},"75":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":2},"end":{"line":328,"column":2}},{"start":{"line":328,"column":2},"end":{"line":328,"column":2}}]},"76":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":2},"end":{"line":329,"column":2}},{"start":{"line":329,"column":2},"end":{"line":329,"column":2}}]},"77":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":2},"end":{"line":330,"column":2}},{"start":{"line":330,"column":2},"end":{"line":330,"column":2}}]},"78":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":2},"end":{"line":339,"column":2}},{"start":{"line":339,"column":2},"end":{"line":339,"column":2}}]},"79":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":4},"end":{"line":348,"column":4}},{"start":{"line":348,"column":4},"end":{"line":348,"column":4}}]},"80":{"line":348,"type":"binary-expr","locations":[{"start":{"line":348,"column":8},"end":{"line":348,"column":23}},{"start":{"line":348,"column":28},"end":{"line":348,"column":59}},{"start":{"line":348,"column":65},"end":{"line":348,"column":93}}]},"81":{"line":353,"type":"if","locations":[{"start":{"line":353,"column":4},"end":{"line":353,"column":4}},{"start":{"line":353,"column":4},"end":{"line":353,"column":4}}]},"82":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":4},"end":{"line":358,"column":4}},{"start":{"line":358,"column":4},"end":{"line":358,"column":4}}]},"83":{"line":358,"type":"binary-expr","locations":[{"start":{"line":358,"column":7},"end":{"line":358,"column":38}},{"start":{"line":358,"column":42},"end":{"line":358,"column":55}},{"start":{"line":358,"column":59},"end":{"line":358,"column":82}}]},"84":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":11},"end":{"line":360,"column":11}},{"start":{"line":360,"column":11},"end":{"line":360,"column":11}}]},"85":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":4},"end":{"line":365,"column":4}},{"start":{"line":365,"column":4},"end":{"line":365,"column":4}}]},"86":{"line":365,"type":"binary-expr","locations":[{"start":{"line":365,"column":7},"end":{"line":365,"column":21}},{"start":{"line":365,"column":25},"end":{"line":365,"column":43}},{"start":{"line":365,"column":47},"end":{"line":365,"column":65}}]},"87":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":4},"end":{"line":370,"column":4}},{"start":{"line":370,"column":4},"end":{"line":370,"column":4}}]},"88":{"line":370,"type":"binary-expr","locations":[{"start":{"line":370,"column":7},"end":{"line":370,"column":21}},{"start":{"line":370,"column":25},"end":{"line":370,"column":39}},{"start":{"line":370,"column":43},"end":{"line":370,"column":53}},{"start":{"line":370,"column":57},"end":{"line":370,"column":70}}]},"89":{"line":371,"type":"if","locations":[{"start":{"line":371,"column":6},"end":{"line":371,"column":6}},{"start":{"line":371,"column":6},"end":{"line":371,"column":6}}]},"90":{"line":373,"type":"binary-expr","locations":[{"start":{"line":373,"column":27},"end":{"line":373,"column":40}},{"start":{"line":373,"column":44},"end":{"line":373,"column":54}},{"start":{"line":373,"column":58},"end":{"line":373,"column":71}}]},"91":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":6},"end":{"line":376,"column":6}},{"start":{"line":376,"column":6},"end":{"line":376,"column":6}}]},"92":{"line":376,"type":"binary-expr","locations":[{"start":{"line":376,"column":9},"end":{"line":376,"column":29}},{"start":{"line":377,"column":11},"end":{"line":377,"column":31}},{"start":{"line":378,"column":11},"end":{"line":378,"column":31}},{"start":{"line":379,"column":11},"end":{"line":379,"column":31}},{"start":{"line":380,"column":11},"end":{"line":380,"column":31}},{"start":{"line":381,"column":11},"end":{"line":381,"column":31}},{"start":{"line":382,"column":11},"end":{"line":382,"column":28}},{"start":{"line":383,"column":11},"end":{"line":383,"column":31}}]},"93":{"line":384,"type":"if","locations":[{"start":{"line":384,"column":8},"end":{"line":384,"column":8}},{"start":{"line":384,"column":8},"end":{"line":384,"column":8}}]},"94":{"line":388,"type":"binary-expr","locations":[{"start":{"line":388,"column":20},"end":{"line":388,"column":33}},{"start":{"line":388,"column":37},"end":{"line":388,"column":47}},{"start":{"line":388,"column":51},"end":{"line":388,"column":64}}]},"95":{"line":393,"type":"binary-expr","locations":[{"start":{"line":393,"column":20},"end":{"line":393,"column":33}},{"start":{"line":393,"column":37},"end":{"line":393,"column":47}},{"start":{"line":393,"column":51},"end":{"line":393,"column":64}}]},"96":{"line":396,"type":"if","locations":[{"start":{"line":396,"column":11},"end":{"line":396,"column":11}},{"start":{"line":396,"column":11},"end":{"line":396,"column":11}}]},"97":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":4},"end":{"line":403,"column":4}},{"start":{"line":403,"column":4},"end":{"line":403,"column":4}}]},"98":{"line":403,"type":"binary-expr","locations":[{"start":{"line":403,"column":7},"end":{"line":403,"column":21}},{"start":{"line":403,"column":25},"end":{"line":403,"column":38}}]},"99":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":4},"end":{"line":420,"column":4}},{"start":{"line":420,"column":4},"end":{"line":420,"column":4}}]},"100":{"line":431,"type":"binary-expr","locations":[{"start":{"line":431,"column":29},"end":{"line":431,"column":49}},{"start":{"line":431,"column":53},"end":{"line":431,"column":58}}]},"101":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":8},"end":{"line":446,"column":8}},{"start":{"line":446,"column":8},"end":{"line":446,"column":8}}]},"102":{"line":458,"type":"if","locations":[{"start":{"line":458,"column":8},"end":{"line":458,"column":8}},{"start":{"line":458,"column":8},"end":{"line":458,"column":8}}]},"103":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":8},"end":{"line":465,"column":8}},{"start":{"line":465,"column":8},"end":{"line":465,"column":8}}]},"104":{"line":465,"type":"binary-expr","locations":[{"start":{"line":465,"column":11},"end":{"line":465,"column":22}},{"start":{"line":465,"column":26},"end":{"line":465,"column":33}},{"start":{"line":465,"column":37},"end":{"line":465,"column":47}}]},"105":{"line":478,"type":"cond-expr","locations":[{"start":{"line":478,"column":67},"end":{"line":478,"column":70}},{"start":{"line":478,"column":73},"end":{"line":478,"column":84}}]},"106":{"line":496,"type":"binary-expr","locations":[{"start":{"line":496,"column":27},"end":{"line":496,"column":47}},{"start":{"line":496,"column":51},"end":{"line":496,"column":56}}]},"107":{"line":514,"type":"if","locations":[{"start":{"line":514,"column":6},"end":{"line":514,"column":6}},{"start":{"line":514,"column":6},"end":{"line":514,"column":6}}]},"108":{"line":518,"type":"if","locations":[{"start":{"line":518,"column":10},"end":{"line":518,"column":10}},{"start":{"line":518,"column":10},"end":{"line":518,"column":10}}]},"109":{"line":530,"type":"if","locations":[{"start":{"line":530,"column":12},"end":{"line":530,"column":12}},{"start":{"line":530,"column":12},"end":{"line":530,"column":12}}]},"110":{"line":534,"type":"if","locations":[{"start":{"line":534,"column":12},"end":{"line":534,"column":12}},{"start":{"line":534,"column":12},"end":{"line":534,"column":12}}]},"111":{"line":536,"type":"if","locations":[{"start":{"line":536,"column":12},"end":{"line":536,"column":12}},{"start":{"line":536,"column":12},"end":{"line":536,"column":12}}]},"112":{"line":538,"type":"if","locations":[{"start":{"line":538,"column":16},"end":{"line":538,"column":16}},{"start":{"line":538,"column":16},"end":{"line":538,"column":16}}]},"113":{"line":555,"type":"cond-expr","locations":[{"start":{"line":555,"column":67},"end":{"line":555,"column":70}},{"start":{"line":555,"column":73},"end":{"line":555,"column":84}}]},"114":{"line":557,"type":"if","locations":[{"start":{"line":557,"column":6},"end":{"line":557,"column":6}},{"start":{"line":557,"column":6},"end":{"line":557,"column":6}}]},"115":{"line":564,"type":"if","locations":[{"start":{"line":564,"column":2},"end":{"line":564,"column":2}},{"start":{"line":564,"column":2},"end":{"line":564,"column":2}}]},"116":{"line":564,"type":"binary-expr","locations":[{"start":{"line":564,"column":5},"end":{"line":564,"column":17}},{"start":{"line":565,"column":7},"end":{"line":565,"column":26}},{"start":{"line":565,"column":30},"end":{"line":565,"column":38}}]}},"code":["\"use strict\";","","var Insert = require('./commands').Insert","  , Update = require('./commands').Update","  , Remove = require('./commands').Remove","  , copy = require('../connection/utils').copy","  , retrieveBSON = require('../connection/utils').retrieveBSON","  , KillCursor = require('../connection/commands').KillCursor","  , GetMore = require('../connection/commands').GetMore","  , Query = require('../connection/commands').Query","  , f = require('util').format","  , CommandResult = require('../connection/command_result')","  , MongoError = require('../error')","  , getReadPreference = require('./shared').getReadPreference;","","var BSON = retrieveBSON(),","  Long = BSON.Long;","","// Write concern fields","var writeConcernFields = ['w', 'wtimeout', 'j', 'fsync'];","","var WireProtocol = function() {}","","//","// Needs to support legacy mass insert as well as ordered/unordered legacy","// emulation","//","WireProtocol.prototype.insert = function(pool, ismaster, ns, bson, ops, options, callback) {","  options = options || {};","  // Default is ordered execution","  var ordered = typeof options.ordered == 'boolean' ? options.ordered : true;","  ops = Array.isArray(ops) ? ops :[ops];","","  // If we have more than a 1000 ops fails","  if(ops.length > 1000) return callback(new MongoError(\"exceeded maximum write batch size of 1000\"));","","  // Write concern","  var writeConcern = options.writeConcern || {w:1};","","  // We are unordered","  if(!ordered || writeConcern.w == 0) {","    return executeUnordered('insert', Insert, ismaster, ns, bson, pool, ops, options, callback);","  }","","  return executeOrdered('insert', Insert, ismaster, ns, bson, pool, ops, options, callback);","}","","WireProtocol.prototype.update = function(pool, ismaster, ns, bson, ops, options, callback) {","  options = options || {};","  // Default is ordered execution","  var ordered = typeof options.ordered == 'boolean' ? options.ordered : true;","  ops = Array.isArray(ops) ? ops :[ops];","","  // Write concern","  var writeConcern = options.writeConcern || {w:1};","","  // We are unordered","  if(!ordered || writeConcern.w == 0) {","    return executeUnordered('update', Update, ismaster, ns, bson, pool, ops, options, callback);","  }","","  return executeOrdered('update', Update, ismaster, ns, bson, pool, ops, options, callback);","}","","WireProtocol.prototype.remove = function(pool, ismaster, ns, bson, ops, options, callback) {","  options = options || {};","  // Default is ordered execution","  var ordered = typeof options.ordered == 'boolean' ? options.ordered : true;","  ops = Array.isArray(ops) ? ops :[ops];","","  // Write concern","  var writeConcern = options.writeConcern || {w:1};","","  // We are unordered","  if(!ordered || writeConcern.w == 0) {","    return executeUnordered('remove', Remove, ismaster, ns, bson, pool, ops, options, callback);","  }","","  return executeOrdered('remove', Remove, ismaster, ns, bson, pool, ops, options, callback);","}","","WireProtocol.prototype.killCursor = function(bson, ns, cursorId, pool, callback) {","  // Create a kill cursor command","  var killCursor = new KillCursor(bson, [cursorId]);","  // Execute the kill cursor command","  if(pool && pool.isConnected()) {","    pool.write(killCursor, {","      immediateRelease:true, noResponse: true","    });","  }","","  // Callback","  if(typeof callback == 'function') callback(null, null);","}","","WireProtocol.prototype.getMore = function(bson, ns, cursorState, batchSize, raw, connection, options, callback) {","  // Create getMore command","  var getMore = new GetMore(bson, ns, cursorState.cursorId, {numberToReturn: batchSize});","","  // Query callback","  var queryCallback = function(err, result) {","    if(err) return callback(err);","    // Get the raw message","    var r = result.message;","","    // If we have a timed out query or a cursor that was killed","    if((r.responseFlags & (1 << 0)) != 0) {","      return callback(new MongoError(\"cursor does not exist, was killed or timed out\"), null);","    }","","    // Ensure we have a Long valie cursor id","    var cursorId = typeof r.cursorId == 'number'","      ? Long.fromNumber(r.cursorId)","      : r.cursorId;","","    // Set all the values","    cursorState.documents = r.documents;","    cursorState.cursorId = cursorId;","","    // Return","    callback(null, null, r.connection);","  }","","  // Contains any query options","  var queryOptions = {};","","  // If we have a raw query decorate the function","  if(raw) {","    queryOptions.raw = raw;","  }","","  // Check if we need to promote longs","  if(typeof cursorState.promoteLongs == 'boolean') {","    queryOptions.promoteLongs = cursorState.promoteLongs;","  }","","  if(typeof cursorState.promoteValues == 'boolean') {","    queryOptions.promoteValues = cursorState.promoteValues;","  }","","  if(typeof cursorState.promoteBuffers == 'boolean') {","    queryOptions.promoteBuffers = cursorState.promoteBuffers;","  }","","  // Write out the getMore command","  connection.write(getMore, queryOptions, queryCallback);","}","","WireProtocol.prototype.command = function(bson, ns, cmd, cursorState, topology, options) {","  // Establish type of command","  if(cmd.find) {","    return setupClassicFind(bson, ns, cmd, cursorState, topology, options)","  } else if(cursorState.cursorId != null) {","    return;","  } else if(cmd) {","    return setupCommand(bson, ns, cmd, cursorState, topology, options);","  } else {","    throw new MongoError(f(\"command %s does not return a cursor\", JSON.stringify(cmd)));","  }","}","","//","// Execute a find command","var setupClassicFind = function(bson, ns, cmd, cursorState, topology, options) {","  // Ensure we have at least some options","  options = options || {};","  // Get the readPreference","  var readPreference = getReadPreference(cmd, options);","  // Set the optional batchSize","  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;","  var numberToReturn = 0;","","  // Unpack the limit and batchSize values","  if(cursorState.limit == 0) {","    numberToReturn = cursorState.batchSize;","  } else if(cursorState.limit < 0 || cursorState.limit < cursorState.batchSize || (cursorState.limit > 0 && cursorState.batchSize == 0)) {","    numberToReturn = cursorState.limit;","  } else {","    numberToReturn = cursorState.batchSize;","  }","","  var numberToSkip = cursorState.skip || 0;","  // Build actual find command","  var findCmd = {};","  // Using special modifier","  var usesSpecialModifier = false;","","  // We have a Mongos topology, check if we need to add a readPreference","  if(topology.type == 'mongos' && readPreference) {","    findCmd['$readPreference'] = readPreference.toJSON();","    usesSpecialModifier = true;","  }","","  // Add special modifiers to the query","  if(cmd.sort) findCmd['orderby'] = cmd.sort, usesSpecialModifier = true;","  if(cmd.hint) findCmd['$hint'] = cmd.hint, usesSpecialModifier = true;","  if(cmd.snapshot) findCmd['$snapshot'] = cmd.snapshot, usesSpecialModifier = true;","  if(cmd.returnKey) findCmd['$returnKey'] = cmd.returnKey, usesSpecialModifier = true;","  if(cmd.maxScan) findCmd['$maxScan'] = cmd.maxScan, usesSpecialModifier = true;","  if(cmd.min) findCmd['$min'] = cmd.min, usesSpecialModifier = true;","  if(cmd.max) findCmd['$max'] = cmd.max, usesSpecialModifier = true;","  if(cmd.showDiskLoc) findCmd['$showDiskLoc'] = cmd.showDiskLoc, usesSpecialModifier = true;","  if(cmd.comment) findCmd['$comment'] = cmd.comment, usesSpecialModifier = true;","  if(cmd.maxTimeMS) findCmd['$maxTimeMS'] = cmd.maxTimeMS, usesSpecialModifier = true;","","  if(cmd.explain) {","\t// nToReturn must be 0 (match all) or negative (match N and close cursor)","\t// nToReturn > 0 will give explain results equivalent to limit(0)","    numberToReturn = -Math.abs(cmd.limit || 0);","    usesSpecialModifier = true;","    findCmd['$explain'] = true;","  }","","  // If we have a special modifier","  if(usesSpecialModifier) {","    findCmd['$query'] = cmd.query;","  } else {","    findCmd = cmd.query;","  }","","  // Throw on majority readConcern passed in","  if(cmd.readConcern && cmd.readConcern.level != 'local') {","    throw new MongoError(f('server find command does not support a readConcern level of %s', cmd.readConcern.level));","  }","","  // Remove readConcern, ensure no failing commands","  if(cmd.readConcern) {","    cmd = copy(cmd);","    delete cmd['readConcern'];","  }","","  // Set up the serialize and ignoreUndefined fields","  var serializeFunctions = typeof options.serializeFunctions == 'boolean'","    ? options.serializeFunctions : false;","  var ignoreUndefined = typeof options.ignoreUndefined == 'boolean'","    ? options.ignoreUndefined : false;","","  // Build Query object","  var query = new Query(bson, ns, findCmd, {","      numberToSkip: numberToSkip, numberToReturn: numberToReturn","    , checkKeys: false, returnFieldSelector: cmd.fields","    , serializeFunctions: serializeFunctions, ignoreUndefined: ignoreUndefined","  });","","  // Set query flags","  query.slaveOk = readPreference.slaveOk();","","  // Set up the option bits for wire protocol","  if(typeof cmd.tailable == 'boolean') query.tailable = cmd.tailable;","  if(typeof cmd.oplogReplay == 'boolean') query.oplogReplay = cmd.oplogReplay;","  if(typeof cmd.noCursorTimeout == 'boolean') query.noCursorTimeout = cmd.noCursorTimeout;","  if(typeof cmd.awaitData == 'boolean') query.awaitData = cmd.awaitData;","  if(typeof cmd.partial == 'boolean') query.partial = cmd.partial;","  // Return the query","  return query;","}","","//","// Set up a command cursor","var setupCommand = function(bson, ns, cmd, cursorState, topology, options) {","  // Set empty options object","  options = options || {}","  // Get the readPreference","  var readPreference = getReadPreference(cmd, options);","  // Final query","  var finalCmd = {};","  for(var name in cmd) {","    finalCmd[name] = cmd[name];","  }","","  // Build command namespace","  var parts = ns.split(/\\./);","","  // Throw on majority readConcern passed in","  if(cmd.readConcern && cmd.readConcern.level != 'local') {","    throw new MongoError(f('server %s command does not support a readConcern level of %s', JSON.stringify(cmd), cmd.readConcern.level));","  }","","  // Remove readConcern, ensure no failing commands","  if(cmd.readConcern) delete cmd['readConcern'];","","  // Serialize functions","  var serializeFunctions = typeof options.serializeFunctions == 'boolean'","    ? options.serializeFunctions : false;","","  // Set up the serialize and ignoreUndefined fields","  var ignoreUndefined = typeof options.ignoreUndefined == 'boolean'","    ? options.ignoreUndefined : false;","","  // We have a Mongos topology, check if we need to add a readPreference","  if(topology.type == 'mongos'","    && readPreference","    && readPreference.preference != 'primary') {","    finalCmd = {","      '$query': finalCmd,","      '$readPreference': readPreference.toJSON()","    };","  }","","  // Build Query object","  var query = new Query(bson, f('%s.$cmd', parts.shift()), finalCmd, {","      numberToSkip: 0, numberToReturn: -1","    , checkKeys: false, serializeFunctions: serializeFunctions","    , ignoreUndefined: ignoreUndefined","  });","","  // Set query flags","  query.slaveOk = readPreference.slaveOk();","","  // Return the query","  return query;","}","","var hasWriteConcern = function(writeConcern) {","  if(writeConcern.w","    || writeConcern.wtimeout","    || writeConcern.j == true","    || writeConcern.fsync == true","    || Object.keys(writeConcern).length == 0) {","    return true;","  }","  return false;","}","","var cloneWriteConcern = function(writeConcern) {","  var wc = {};","  if(writeConcern.w != null) wc.w = writeConcern.w;","  if(writeConcern.wtimeout != null) wc.wtimeout = writeConcern.wtimeout;","  if(writeConcern.j != null) wc.j = writeConcern.j;","  if(writeConcern.fsync != null) wc.fsync = writeConcern.fsync;","  return wc;","}","","//","// Aggregate up all the results","//","var aggregateWriteOperationResults = function(opType, ops, results, connection) {","  var finalResult = { ok: 1, n: 0 }","  if(opType == 'update') {","    finalResult.nModified = 0;","  }","","  // Map all the results coming back","  for(var i = 0; i < results.length; i++) {","    var result = results[i];","    var op = ops[i];","","    if((result.upserted || (result.updatedExisting == false)) && finalResult.upserted == null) {","      finalResult.upserted = [];","    }","","    // Push the upserted document to the list of upserted values","    if(result.upserted) {","      finalResult.upserted.push({index: i, _id: result.upserted});","    }","","    // We have an upsert where we passed in a _id","    if(result.updatedExisting == false && result.n == 1 && result.upserted == null) {","      finalResult.upserted.push({index: i, _id: op.q._id});","    } else if(result.updatedExisting == true) {","      finalResult.nModified += result.n;","    }","","    // We have an insert command","    if(result.ok == 1 && opType == 'insert' && result.err == null) {","      finalResult.n = finalResult.n + 1;","    }","","    // We have a command error","    if(result != null && result.ok == 0 || result.err || result.errmsg) {","      if(result.ok == 0) finalResult.ok = 0;","      finalResult.code = result.code;","      finalResult.errmsg = result.errmsg || result.err || result.errMsg;","","      // Check if we have a write error","      if(result.code == 11000","        || result.code == 11001","        || result.code == 12582","        || result.code == 16544","        || result.code == 16538","        || result.code == 16542","        || result.code == 14","        || result.code == 13511) {","        if(finalResult.writeErrors == null) finalResult.writeErrors = [];","        finalResult.writeErrors.push({","            index: i","          , code: result.code","          , errmsg: result.errmsg || result.err || result.errMsg","        });","      } else {","        finalResult.writeConcernError = {","            code: result.code","          , errmsg: result.errmsg || result.err || result.errMsg","        }","      }","    } else if(typeof result.n == 'number') {","      finalResult.n += result.n;","    } else {","      finalResult.n += 1;","    }","","    // Result as expected","    if(result != null && result.lastOp) finalResult.lastOp = result.lastOp;","  }","","  // Return finalResult aggregated results","  return new CommandResult(finalResult, connection);","}","","//","// Execute all inserts in an ordered manner","//","var executeOrdered = function(opType ,command, ismaster, ns, bson, pool, ops, options, callback) {","  var _ops = ops.slice(0);","  // Collect all the getLastErrors","  var getLastErrors = [];","  // Execute an operation","  var executeOp = function(list, _callback) {","    // No more items in the list","    if(list.length == 0) {","      return process.nextTick(function() {","        _callback(null, aggregateWriteOperationResults(opType, ops, getLastErrors, null));","      });","    }","","    // Get the first operation","    var doc = list.shift();","    // Create an insert command","    var op = new command(Query.getRequestId(), ismaster, bson, ns, [doc], options);","    // Write concern","    var optionWriteConcern = options.writeConcern || {w:1};","    // Final write concern","    var writeConcern = cloneWriteConcern(optionWriteConcern);","","    // Get the db name","    var db = ns.split('.').shift();","","    try {","      // Add binary message to list of commands to execute","      var commands = [op];","","      // Add getLastOrdered","      var getLastErrorCmd = {getlasterror: 1};","      // Merge all the fields","      for(var i = 0; i < writeConcernFields.length; i++) {","        if(writeConcern[writeConcernFields[i]] != null) {","          getLastErrorCmd[writeConcernFields[i]] = writeConcern[writeConcernFields[i]];","        }","      }","","      // Create a getLastError command","      var getLastErrorOp = new Query(bson, f(\"%s.$cmd\", db), getLastErrorCmd, {numberToReturn: -1});","      // Add getLastError command to list of ops to execute","      commands.push(getLastErrorOp);","","      // getLastError callback","      var getLastErrorCallback = function(err, result) {","        if(err) return callback(err);","        // Get the document","        var doc = result.result;","        // Save the getLastError document","        getLastErrors.push(doc);","","        // If we have an error terminate","        if(doc.ok == 0 || doc.err || doc.errmsg) {","          return callback(null, aggregateWriteOperationResults(opType, ops, getLastErrors, result.connection));","        }","","        // Execute the next op in the list","        executeOp(list, callback);","      }","","      // Write both commands out at the same time","      pool.write(commands, getLastErrorCallback);","    } catch(err) {","      // We have a serialization error, rewrite as a write error to have same behavior as modern","      // write commands","      getLastErrors.push({ ok: 1, errmsg: typeof err == 'string' ? err : err.message, code: 14 });","      // Return due to an error","      process.nextTick(function() {","        _callback(null, aggregateWriteOperationResults(opType, ops, getLastErrors, null));","      });","    }","  }","","  // Execute the operations","  executeOp(_ops, callback);","}","","var executeUnordered = function(opType, command, ismaster, ns, bson, pool, ops, options, callback) {","  // Total operations to write","  var totalOps = ops.length;","  // Collect all the getLastErrors","  var getLastErrors = [];","  // Write concern","  var optionWriteConcern = options.writeConcern || {w:1};","  // Final write concern","  var writeConcern = cloneWriteConcern(optionWriteConcern);","  // Driver level error","  var error;","","  // Execute all the operations","  for(var i = 0; i < ops.length; i++) {","    // Create an insert command","    var op = new command(Query.getRequestId(), ismaster, bson, ns, [ops[i]], options);","    // Get db name","    var db = ns.split('.').shift();","","    try {","      // Add binary message to list of commands to execute","      var commands = [op];","","      // If write concern 0 don't fire getLastError","      if(hasWriteConcern(writeConcern)) {","        var getLastErrorCmd = {getlasterror: 1};","        // Merge all the fields","        for(var j = 0; j < writeConcernFields.length; j++) {","          if(writeConcern[writeConcernFields[j]] != null)","            getLastErrorCmd[writeConcernFields[j]] = writeConcern[writeConcernFields[j]];","        }","","        // Create a getLastError command","        var getLastErrorOp = new Query(bson, f(\"%s.$cmd\", db), getLastErrorCmd, {numberToReturn: -1});","        // Add getLastError command to list of ops to execute","        commands.push(getLastErrorOp);","","        // Give the result from getLastError the right index","        var callbackOp = function(_index) {","          return function(err, result) {","            if(err) error = err;","            // Update the number of operations executed","            totalOps = totalOps - 1;","            // Save the getLastError document","            if(!err) getLastErrors[_index] = result.result;","            // Check if we are done","            if(totalOps == 0) {","              process.nextTick(function() {","                if(error) return callback(error);","                callback(null, aggregateWriteOperationResults(opType, ops, getLastErrors, result.connection));","              });","            }","          }","        }","","        // Write both commands out at the same time","        pool.write(commands, callbackOp(i));","      } else {","        pool.write(commands, {immediateRelease:true, noResponse:true});","      }","    } catch(err) {","      // Update the number of operations executed","      totalOps = totalOps - 1;","      // We have a serialization error, rewrite as a write error to have same behavior as modern","      // write commands","      getLastErrors[i] = { ok: 1, errmsg: typeof err == 'string' ? err : err.message, code: 14 };","      // Check if we are done","      if(totalOps == 0) {","        callback(null, aggregateWriteOperationResults(opType, ops, getLastErrors, null));","      }","    }","  }","","  // Empty w:0 return","  if(writeConcern","    && writeConcern.w == 0 && callback) {","    callback(null, new CommandResult({ok:1}, null));","  }","}","","module.exports = WireProtocol;",""],"l":{"3":1,"16":1,"20":1,"22":1,"28":1,"29":0,"31":0,"32":0,"35":0,"38":0,"41":0,"42":0,"45":0,"48":1,"49":0,"51":0,"52":0,"55":0,"58":0,"59":0,"62":0,"65":1,"66":0,"68":0,"69":0,"72":0,"75":0,"76":0,"79":0,"82":1,"84":0,"86":0,"87":0,"93":0,"96":1,"98":0,"101":0,"102":0,"104":0,"107":0,"108":0,"112":0,"117":0,"118":0,"121":0,"125":0,"128":0,"129":0,"133":0,"134":0,"137":0,"138":0,"141":0,"142":0,"146":0,"149":1,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"158":0,"164":1,"166":0,"168":0,"170":0,"171":0,"174":0,"175":0,"176":0,"177":0,"179":0,"182":0,"184":0,"186":0,"189":0,"190":0,"191":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"206":0,"209":0,"210":0,"211":0,"215":0,"216":0,"218":0,"222":0,"223":0,"227":0,"228":0,"229":0,"233":0,"235":0,"239":0,"246":0,"249":0,"250":0,"251":0,"252":0,"253":0,"255":0,"260":1,"262":0,"264":0,"266":0,"267":0,"268":0,"272":0,"275":0,"276":0,"280":0,"283":0,"287":0,"291":0,"294":0,"301":0,"308":0,"311":0,"314":1,"315":0,"320":0,"322":0,"325":1,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"337":1,"338":0,"339":0,"340":0,"344":0,"345":0,"346":0,"348":0,"349":0,"353":0,"354":0,"358":0,"359":0,"360":0,"361":0,"365":0,"366":0,"370":0,"371":0,"372":0,"373":0,"376":0,"384":0,"385":0,"391":0,"396":0,"397":0,"399":0,"403":0,"407":0,"413":1,"414":0,"416":0,"418":0,"420":0,"421":0,"422":0,"427":0,"429":0,"431":0,"433":0,"436":0,"438":0,"440":0,"443":0,"445":0,"446":0,"447":0,"452":0,"454":0,"457":0,"458":0,"460":0,"462":0,"465":0,"466":0,"470":0,"474":0,"478":0,"480":0,"481":0,"487":0,"490":1,"492":0,"494":0,"496":0,"498":0,"500":0,"503":0,"505":0,"507":0,"509":0,"511":0,"514":0,"515":0,"517":0,"518":0,"519":0,"523":0,"525":0,"528":0,"529":0,"530":0,"532":0,"534":0,"536":0,"537":0,"538":0,"539":0,"546":0,"548":0,"552":0,"555":0,"557":0,"558":0,"564":0,"566":0,"570":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/wireprotocol/commands.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/wireprotocol/commands.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":1,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":13},"end":{"line":10,"column":73}}},"2":{"name":"(anonymous_2)","line":40,"loc":{"start":{"line":40,"column":25},"end":{"line":40,"column":36}}},"3":{"name":"(anonymous_3)","line":127,"loc":{"start":{"line":127,"column":13},"end":{"line":127,"column":70}}},"4":{"name":"(anonymous_4)","line":157,"loc":{"start":{"line":157,"column":25},"end":{"line":157,"column":36}}},"5":{"name":"(anonymous_5)","line":246,"loc":{"start":{"line":246,"column":13},"end":{"line":246,"column":70}}},"6":{"name":"(anonymous_6)","line":273,"loc":{"start":{"line":273,"column":25},"end":{"line":273,"column":36}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":21}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":21}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":21}},"5":{"start":{"line":10,"column":0},"end":{"line":37,"column":1}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":72}},"7":{"start":{"line":12,"column":17},"end":{"line":12,"column":72}},"8":{"start":{"line":13,"column":2},"end":{"line":13,"column":142}},"9":{"start":{"line":13,"column":57},"end":{"line":13,"column":142}},"10":{"start":{"line":16,"column":2},"end":{"line":18,"column":3}},"11":{"start":{"line":17,"column":4},"end":{"line":17,"column":70}},"12":{"start":{"line":21,"column":2},"end":{"line":21,"column":29}},"13":{"start":{"line":22,"column":2},"end":{"line":22,"column":19}},"14":{"start":{"line":23,"column":2},"end":{"line":23,"column":15}},"15":{"start":{"line":24,"column":2},"end":{"line":24,"column":29}},"16":{"start":{"line":25,"column":2},"end":{"line":25,"column":27}},"17":{"start":{"line":28,"column":2},"end":{"line":28,"column":26}},"18":{"start":{"line":31,"column":2},"end":{"line":31,"column":112}},"19":{"start":{"line":32,"column":2},"end":{"line":32,"column":103}},"20":{"start":{"line":33,"column":2},"end":{"line":33,"column":84}},"21":{"start":{"line":34,"column":2},"end":{"line":34,"column":103}},"22":{"start":{"line":36,"column":2},"end":{"line":36,"column":44}},"23":{"start":{"line":40,"column":0},"end":{"line":125,"column":1}},"24":{"start":{"line":42,"column":2},"end":{"line":42,"column":19}},"25":{"start":{"line":45,"column":2},"end":{"line":49,"column":4}},"26":{"start":{"line":52,"column":2},"end":{"line":52,"column":23}},"27":{"start":{"line":55,"column":2},"end":{"line":55,"column":34}},"28":{"start":{"line":58,"column":2},"end":{"line":74,"column":3}},"29":{"start":{"line":59,"column":4},"end":{"line":63,"column":7}},"30":{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},"31":{"start":{"line":67,"column":6},"end":{"line":67,"column":122}},"32":{"start":{"line":71,"column":4},"end":{"line":71,"column":46}},"33":{"start":{"line":73,"column":4},"end":{"line":73,"column":25}},"34":{"start":{"line":77,"column":2},"end":{"line":79,"column":3}},"35":{"start":{"line":78,"column":4},"end":{"line":78,"column":116}},"36":{"start":{"line":82,"column":2},"end":{"line":82,"column":16}},"37":{"start":{"line":85,"column":2},"end":{"line":85,"column":49}},"38":{"start":{"line":86,"column":2},"end":{"line":86,"column":49}},"39":{"start":{"line":87,"column":2},"end":{"line":87,"column":48}},"40":{"start":{"line":88,"column":2},"end":{"line":88,"column":39}},"41":{"start":{"line":89,"column":2},"end":{"line":89,"column":20}},"42":{"start":{"line":92,"column":2},"end":{"line":92,"column":52}},"43":{"start":{"line":93,"column":2},"end":{"line":93,"column":52}},"44":{"start":{"line":94,"column":2},"end":{"line":94,"column":51}},"45":{"start":{"line":95,"column":2},"end":{"line":95,"column":42}},"46":{"start":{"line":96,"column":2},"end":{"line":96,"column":20}},"47":{"start":{"line":99,"column":2},"end":{"line":99,"column":39}},"48":{"start":{"line":100,"column":2},"end":{"line":100,"column":39}},"49":{"start":{"line":101,"column":2},"end":{"line":101,"column":38}},"50":{"start":{"line":102,"column":2},"end":{"line":102,"column":29}},"51":{"start":{"line":103,"column":2},"end":{"line":103,"column":20}},"52":{"start":{"line":106,"column":2},"end":{"line":106,"column":47}},"53":{"start":{"line":107,"column":2},"end":{"line":107,"column":47}},"54":{"start":{"line":108,"column":2},"end":{"line":108,"column":46}},"55":{"start":{"line":109,"column":2},"end":{"line":109,"column":37}},"56":{"start":{"line":110,"column":2},"end":{"line":110,"column":20}},"57":{"start":{"line":113,"column":2},"end":{"line":113,"column":48}},"58":{"start":{"line":114,"column":2},"end":{"line":114,"column":48}},"59":{"start":{"line":115,"column":2},"end":{"line":115,"column":47}},"60":{"start":{"line":116,"column":2},"end":{"line":116,"column":38}},"61":{"start":{"line":117,"column":2},"end":{"line":117,"column":20}},"62":{"start":{"line":120,"column":2},"end":{"line":120,"column":59}},"63":{"start":{"line":121,"column":2},"end":{"line":121,"column":24}},"64":{"start":{"line":124,"column":2},"end":{"line":124,"column":17}},"65":{"start":{"line":127,"column":0},"end":{"line":154,"column":1}},"66":{"start":{"line":129,"column":2},"end":{"line":129,"column":72}},"67":{"start":{"line":129,"column":17},"end":{"line":129,"column":72}},"68":{"start":{"line":132,"column":2},"end":{"line":132,"column":26}},"69":{"start":{"line":135,"column":2},"end":{"line":135,"column":29}},"70":{"start":{"line":136,"column":2},"end":{"line":136,"column":19}},"71":{"start":{"line":137,"column":2},"end":{"line":137,"column":15}},"72":{"start":{"line":138,"column":2},"end":{"line":138,"column":27}},"73":{"start":{"line":141,"column":2},"end":{"line":141,"column":112}},"74":{"start":{"line":142,"column":2},"end":{"line":142,"column":103}},"75":{"start":{"line":143,"column":2},"end":{"line":143,"column":85}},"76":{"start":{"line":146,"column":2},"end":{"line":146,"column":80}},"77":{"start":{"line":147,"column":2},"end":{"line":147,"column":77}},"78":{"start":{"line":148,"column":2},"end":{"line":148,"column":23}},"79":{"start":{"line":149,"column":2},"end":{"line":149,"column":23}},"80":{"start":{"line":152,"column":2},"end":{"line":152,"column":35}},"81":{"start":{"line":153,"column":2},"end":{"line":153,"column":56}},"82":{"start":{"line":157,"column":0},"end":{"line":244,"column":1}},"83":{"start":{"line":159,"column":2},"end":{"line":159,"column":19}},"84":{"start":{"line":162,"column":2},"end":{"line":167,"column":4}},"85":{"start":{"line":170,"column":2},"end":{"line":170,"column":23}},"86":{"start":{"line":173,"column":2},"end":{"line":173,"column":34}},"87":{"start":{"line":176,"column":2},"end":{"line":180,"column":5}},"88":{"start":{"line":181,"column":2},"end":{"line":181,"column":25}},"89":{"start":{"line":182,"column":2},"end":{"line":182,"column":46}},"90":{"start":{"line":185,"column":2},"end":{"line":189,"column":5}},"91":{"start":{"line":190,"column":2},"end":{"line":190,"column":23}},"92":{"start":{"line":191,"column":2},"end":{"line":191,"column":44}},"93":{"start":{"line":194,"column":2},"end":{"line":194,"column":16}},"94":{"start":{"line":197,"column":2},"end":{"line":197,"column":49}},"95":{"start":{"line":198,"column":2},"end":{"line":198,"column":49}},"96":{"start":{"line":199,"column":2},"end":{"line":199,"column":48}},"97":{"start":{"line":200,"column":2},"end":{"line":200,"column":39}},"98":{"start":{"line":201,"column":2},"end":{"line":201,"column":20}},"99":{"start":{"line":204,"column":2},"end":{"line":204,"column":52}},"100":{"start":{"line":205,"column":2},"end":{"line":205,"column":52}},"101":{"start":{"line":206,"column":2},"end":{"line":206,"column":51}},"102":{"start":{"line":207,"column":2},"end":{"line":207,"column":42}},"103":{"start":{"line":208,"column":2},"end":{"line":208,"column":20}},"104":{"start":{"line":211,"column":2},"end":{"line":211,"column":39}},"105":{"start":{"line":212,"column":2},"end":{"line":212,"column":39}},"106":{"start":{"line":213,"column":2},"end":{"line":213,"column":38}},"107":{"start":{"line":214,"column":2},"end":{"line":214,"column":29}},"108":{"start":{"line":215,"column":2},"end":{"line":215,"column":20}},"109":{"start":{"line":218,"column":2},"end":{"line":218,"column":47}},"110":{"start":{"line":219,"column":2},"end":{"line":219,"column":47}},"111":{"start":{"line":220,"column":2},"end":{"line":220,"column":46}},"112":{"start":{"line":221,"column":2},"end":{"line":221,"column":37}},"113":{"start":{"line":222,"column":2},"end":{"line":222,"column":20}},"114":{"start":{"line":225,"column":2},"end":{"line":225,"column":39}},"115":{"start":{"line":226,"column":2},"end":{"line":226,"column":39}},"116":{"start":{"line":227,"column":2},"end":{"line":227,"column":38}},"117":{"start":{"line":228,"column":2},"end":{"line":228,"column":29}},"118":{"start":{"line":229,"column":2},"end":{"line":229,"column":20}},"119":{"start":{"line":232,"column":2},"end":{"line":232,"column":59}},"120":{"start":{"line":233,"column":2},"end":{"line":233,"column":24}},"121":{"start":{"line":236,"column":2},"end":{"line":236,"column":48}},"122":{"start":{"line":237,"column":2},"end":{"line":237,"column":48}},"123":{"start":{"line":238,"column":2},"end":{"line":238,"column":47}},"124":{"start":{"line":239,"column":2},"end":{"line":239,"column":38}},"125":{"start":{"line":240,"column":2},"end":{"line":240,"column":20}},"126":{"start":{"line":243,"column":2},"end":{"line":243,"column":17}},"127":{"start":{"line":246,"column":0},"end":{"line":270,"column":1}},"128":{"start":{"line":248,"column":2},"end":{"line":248,"column":72}},"129":{"start":{"line":248,"column":17},"end":{"line":248,"column":72}},"130":{"start":{"line":251,"column":2},"end":{"line":251,"column":26}},"131":{"start":{"line":254,"column":2},"end":{"line":254,"column":29}},"132":{"start":{"line":255,"column":2},"end":{"line":255,"column":19}},"133":{"start":{"line":256,"column":2},"end":{"line":256,"column":15}},"134":{"start":{"line":257,"column":2},"end":{"line":257,"column":27}},"135":{"start":{"line":260,"column":2},"end":{"line":260,"column":112}},"136":{"start":{"line":261,"column":2},"end":{"line":261,"column":103}},"137":{"start":{"line":262,"column":2},"end":{"line":262,"column":85}},"138":{"start":{"line":265,"column":2},"end":{"line":265,"column":72}},"139":{"start":{"line":266,"column":2},"end":{"line":266,"column":23}},"140":{"start":{"line":269,"column":2},"end":{"line":269,"column":39}},"141":{"start":{"line":273,"column":0},"end":{"line":351,"column":1}},"142":{"start":{"line":275,"column":2},"end":{"line":275,"column":19}},"143":{"start":{"line":278,"column":2},"end":{"line":283,"column":4}},"144":{"start":{"line":286,"column":2},"end":{"line":286,"column":23}},"145":{"start":{"line":289,"column":2},"end":{"line":289,"column":34}},"146":{"start":{"line":292,"column":2},"end":{"line":296,"column":5}},"147":{"start":{"line":297,"column":2},"end":{"line":297,"column":25}},"148":{"start":{"line":298,"column":2},"end":{"line":298,"column":46}},"149":{"start":{"line":301,"column":2},"end":{"line":301,"column":16}},"150":{"start":{"line":304,"column":2},"end":{"line":304,"column":49}},"151":{"start":{"line":305,"column":2},"end":{"line":305,"column":49}},"152":{"start":{"line":306,"column":2},"end":{"line":306,"column":48}},"153":{"start":{"line":307,"column":2},"end":{"line":307,"column":39}},"154":{"start":{"line":308,"column":2},"end":{"line":308,"column":20}},"155":{"start":{"line":311,"column":2},"end":{"line":311,"column":52}},"156":{"start":{"line":312,"column":2},"end":{"line":312,"column":52}},"157":{"start":{"line":313,"column":2},"end":{"line":313,"column":51}},"158":{"start":{"line":314,"column":2},"end":{"line":314,"column":42}},"159":{"start":{"line":315,"column":2},"end":{"line":315,"column":20}},"160":{"start":{"line":318,"column":2},"end":{"line":318,"column":39}},"161":{"start":{"line":319,"column":2},"end":{"line":319,"column":39}},"162":{"start":{"line":320,"column":2},"end":{"line":320,"column":38}},"163":{"start":{"line":321,"column":2},"end":{"line":321,"column":29}},"164":{"start":{"line":322,"column":2},"end":{"line":322,"column":20}},"165":{"start":{"line":325,"column":2},"end":{"line":325,"column":47}},"166":{"start":{"line":326,"column":2},"end":{"line":326,"column":47}},"167":{"start":{"line":327,"column":2},"end":{"line":327,"column":46}},"168":{"start":{"line":328,"column":2},"end":{"line":328,"column":37}},"169":{"start":{"line":329,"column":2},"end":{"line":329,"column":20}},"170":{"start":{"line":332,"column":2},"end":{"line":332,"column":39}},"171":{"start":{"line":333,"column":2},"end":{"line":333,"column":39}},"172":{"start":{"line":334,"column":2},"end":{"line":334,"column":38}},"173":{"start":{"line":335,"column":2},"end":{"line":335,"column":29}},"174":{"start":{"line":336,"column":2},"end":{"line":336,"column":20}},"175":{"start":{"line":339,"column":2},"end":{"line":339,"column":59}},"176":{"start":{"line":340,"column":2},"end":{"line":340,"column":24}},"177":{"start":{"line":343,"column":2},"end":{"line":343,"column":48}},"178":{"start":{"line":344,"column":2},"end":{"line":344,"column":48}},"179":{"start":{"line":345,"column":2},"end":{"line":345,"column":47}},"180":{"start":{"line":346,"column":2},"end":{"line":346,"column":38}},"181":{"start":{"line":347,"column":2},"end":{"line":347,"column":20}},"182":{"start":{"line":350,"column":2},"end":{"line":350,"column":17}},"183":{"start":{"line":353,"column":0},"end":{"line":357,"column":1}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":12,"column":2}},{"start":{"line":12,"column":2},"end":{"line":12,"column":2}}]},"2":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":2},"end":{"line":13,"column":2}},{"start":{"line":13,"column":2},"end":{"line":13,"column":2}}]},"3":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":5},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":55}}]},"4":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":2},"end":{"line":16,"column":2}},{"start":{"line":16,"column":2},"end":{"line":16,"column":2}}]},"5":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":12},"end":{"line":28,"column":19}},{"start":{"line":28,"column":23},"end":{"line":28,"column":25}}]},"6":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":77},"end":{"line":31,"column":103}},{"start":{"line":31,"column":106},"end":{"line":31,"column":111}}]},"7":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":71},"end":{"line":32,"column":94}},{"start":{"line":32,"column":97},"end":{"line":32,"column":102}}]},"8":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":59},"end":{"line":33,"column":76}},{"start":{"line":33,"column":79},"end":{"line":33,"column":83}}]},"9":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":71},"end":{"line":34,"column":94}},{"start":{"line":34,"column":97},"end":{"line":34,"column":102}}]},"10":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":38},"end":{"line":36,"column":39}},{"start":{"line":36,"column":42},"end":{"line":36,"column":43}}]},"11":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":66,"column":4}},{"start":{"line":66,"column":4},"end":{"line":66,"column":4}}]},"12":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]},"13":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":129,"column":2}},{"start":{"line":129,"column":2},"end":{"line":129,"column":2}}]},"14":{"line":132,"type":"binary-expr","locations":[{"start":{"line":132,"column":12},"end":{"line":132,"column":19}},{"start":{"line":132,"column":23},"end":{"line":132,"column":25}}]},"15":{"line":141,"type":"cond-expr","locations":[{"start":{"line":141,"column":77},"end":{"line":141,"column":103}},{"start":{"line":141,"column":106},"end":{"line":141,"column":111}}]},"16":{"line":142,"type":"cond-expr","locations":[{"start":{"line":142,"column":71},"end":{"line":142,"column":94}},{"start":{"line":142,"column":97},"end":{"line":142,"column":102}}]},"17":{"line":143,"type":"cond-expr","locations":[{"start":{"line":143,"column":59},"end":{"line":143,"column":76}},{"start":{"line":143,"column":79},"end":{"line":143,"column":84}}]},"18":{"line":146,"type":"cond-expr","locations":[{"start":{"line":146,"column":55},"end":{"line":146,"column":71}},{"start":{"line":146,"column":74},"end":{"line":146,"column":79}}]},"19":{"line":147,"type":"cond-expr","locations":[{"start":{"line":147,"column":53},"end":{"line":147,"column":68}},{"start":{"line":147,"column":71},"end":{"line":147,"column":76}}]},"20":{"line":152,"type":"cond-expr","locations":[{"start":{"line":152,"column":29},"end":{"line":152,"column":30}},{"start":{"line":152,"column":33},"end":{"line":152,"column":34}}]},"21":{"line":153,"type":"cond-expr","locations":[{"start":{"line":153,"column":28},"end":{"line":153,"column":42}},{"start":{"line":153,"column":45},"end":{"line":153,"column":55}}]},"22":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":2},"end":{"line":248,"column":2}},{"start":{"line":248,"column":2},"end":{"line":248,"column":2}}]},"23":{"line":251,"type":"binary-expr","locations":[{"start":{"line":251,"column":12},"end":{"line":251,"column":19}},{"start":{"line":251,"column":23},"end":{"line":251,"column":25}}]},"24":{"line":260,"type":"cond-expr","locations":[{"start":{"line":260,"column":77},"end":{"line":260,"column":103}},{"start":{"line":260,"column":106},"end":{"line":260,"column":111}}]},"25":{"line":261,"type":"cond-expr","locations":[{"start":{"line":261,"column":71},"end":{"line":261,"column":94}},{"start":{"line":261,"column":97},"end":{"line":261,"column":102}}]},"26":{"line":262,"type":"cond-expr","locations":[{"start":{"line":262,"column":59},"end":{"line":262,"column":76}},{"start":{"line":262,"column":79},"end":{"line":262,"column":84}}]},"27":{"line":265,"type":"cond-expr","locations":[{"start":{"line":265,"column":52},"end":{"line":265,"column":67}},{"start":{"line":265,"column":70},"end":{"line":265,"column":71}}]},"28":{"line":269,"type":"cond-expr","locations":[{"start":{"line":269,"column":33},"end":{"line":269,"column":34}},{"start":{"line":269,"column":37},"end":{"line":269,"column":38}}]}},"code":["\"use strict\";","","var MongoError = require('../error');","","// Wire command operation ids","var OP_UPDATE = 2001;","var OP_INSERT = 2002;","var OP_DELETE = 2006;","","var Insert = function(requestId, ismaster, bson, ns, documents, options) {","  // Basic options needed to be passed in","  if(ns == null) throw new MongoError(\"ns must be specified for query\");","  if(!Array.isArray(documents) || documents.length == 0) throw new MongoError(\"documents array must contain at least one document to insert\");","","  // Validate that we are not passing 0x00 in the collection name","  if(!!~ns.indexOf(\"\\x00\")) {","    throw new MongoError(\"namespace cannot contain a null character\");","  }","","  // Set internal","  this.requestId = requestId;","  this.bson = bson;","  this.ns = ns;","  this.documents = documents;","  this.ismaster = ismaster;","","  // Ensure empty options","  options = options || {};","","  // Unpack options","  this.serializeFunctions = typeof options.serializeFunctions == 'boolean' ? options.serializeFunctions : false;","  this.ignoreUndefined = typeof options.ignoreUndefined == 'boolean' ? options.ignoreUndefined : false;","  this.checkKeys = typeof options.checkKeys == 'boolean' ? options.checkKeys : true;","  this.continueOnError = typeof options.continueOnError == 'boolean' ? options.continueOnError : false;","  // Set flags","  this.flags = this.continueOnError ? 1 : 0;","}","","// To Binary","Insert.prototype.toBin = function() {","  // Contains all the buffers to be written","  var buffers = [];","","  // Header buffer","  var header = new Buffer(","    4 * 4 // Header","    + 4   // Flags","    + Buffer.byteLength(this.ns) + 1 // namespace","  );","","  // Add header to buffers","  buffers.push(header);","","  // Total length of the message","  var totalLength = header.length;","","  // Serialize all the documents","  for(var i = 0; i < this.documents.length; i++) {","    var buffer = this.bson.serialize(this.documents[i], {","      checkKeys: this.checkKeys,","      serializeFunctions: this.serializeFunctions,","      ignoreUndefined: this.ignoreUndefined,","    });","","    // Document is larger than maxBsonObjectSize, terminate serialization","    if(buffer.length > this.ismaster.maxBsonObjectSize) {","      throw new MongoError(\"Document exceeds maximum allowed bson size of \" + this.ismaster.maxBsonObjectSize + \" bytes\");","    }","","    // Add to total length of wire protocol message","    totalLength = totalLength + buffer.length;","    // Add to buffer","    buffers.push(buffer);","  }","","  // Command is larger than maxMessageSizeBytes terminate serialization","  if(totalLength > this.ismaster.maxMessageSizeBytes) {","    throw new MongoError(\"Command exceeds maximum message size of \" + this.ismaster.maxMessageSizeBytes + \" bytes\");","  }","","  // Add all the metadata","  var index = 0;","","  // Write header length","  header[index + 3] = (totalLength >> 24) & 0xff;","  header[index + 2] = (totalLength >> 16) & 0xff;","  header[index + 1] = (totalLength >> 8) & 0xff;","  header[index] = (totalLength) & 0xff;","  index = index + 4;","","  // Write header requestId","  header[index + 3] = (this.requestId >> 24) & 0xff;","  header[index + 2] = (this.requestId >> 16) & 0xff;","  header[index + 1] = (this.requestId >> 8) & 0xff;","  header[index] = (this.requestId) & 0xff;","  index = index + 4;","","  // No flags","  header[index + 3] = (0 >> 24) & 0xff;","  header[index + 2] = (0 >> 16) & 0xff;","  header[index + 1] = (0 >> 8) & 0xff;","  header[index] = (0) & 0xff;","  index = index + 4;","","  // Operation","  header[index + 3] = (OP_INSERT >> 24) & 0xff;","  header[index + 2] = (OP_INSERT >> 16) & 0xff;","  header[index + 1] = (OP_INSERT >> 8) & 0xff;","  header[index] = (OP_INSERT) & 0xff;","  index = index + 4;","","  // Flags","  header[index + 3] = (this.flags >> 24) & 0xff;","  header[index + 2] = (this.flags >> 16) & 0xff;","  header[index + 1] = (this.flags >> 8) & 0xff;","  header[index] = (this.flags) & 0xff;","  index = index + 4;","","  // Write collection name","  index = index + header.write(this.ns, index, 'utf8') + 1;","  header[index - 1] = 0;","","  // Return the buffers","  return buffers;","}","","var Update = function(requestId, ismaster, bson, ns, update, options) {","  // Basic options needed to be passed in","  if(ns == null) throw new MongoError(\"ns must be specified for query\");","","  // Ensure empty options","  options = options || {};","","  // Set internal","  this.requestId = requestId;","  this.bson = bson;","  this.ns = ns;","  this.ismaster = ismaster;","","  // Unpack options","  this.serializeFunctions = typeof options.serializeFunctions == 'boolean' ? options.serializeFunctions : false;","  this.ignoreUndefined = typeof options.ignoreUndefined == 'boolean' ? options.ignoreUndefined : false;","  this.checkKeys = typeof options.checkKeys == 'boolean' ? options.checkKeys : false;","","  // Unpack the update document","  this.upsert = typeof update[0].upsert == 'boolean' ? update[0].upsert : false;","  this.multi = typeof update[0].multi == 'boolean' ? update[0].multi : false;","  this.q = update[0].q;","  this.u = update[0].u;","","  // Create flag value","  this.flags = this.upsert ? 1 : 0;","  this.flags = this.multi ? this.flags | 2 : this.flags;","}","","// To Binary","Update.prototype.toBin = function() {","  // Contains all the buffers to be written","  var buffers = [];","","  // Header buffer","  var header = new Buffer(","    4 * 4 // Header","    + 4   // ZERO","    + Buffer.byteLength(this.ns) + 1 // namespace","    + 4   // Flags","  );","","  // Add header to buffers","  buffers.push(header);","","  // Total length of the message","  var totalLength = header.length;","","  // Serialize the selector","  var selector = this.bson.serialize(this.q, {","    checkKeys: this.checkKeys,","    serializeFunctions: this.serializeFunctions,","    ignoreUndefined: this.ignoreUndefined,","  });","  buffers.push(selector);","  totalLength = totalLength + selector.length;","","  // Serialize the update","  var update = this.bson.serialize(this.u, {","    checkKeys: this.checkKeys,","    serializeFunctions: this.serializeFunctions,","    ignoreUndefined: this.ignoreUndefined,","  });","  buffers.push(update);","  totalLength = totalLength + update.length;","","  // Index in header buffer","  var index = 0;","","  // Write header length","  header[index + 3] = (totalLength >> 24) & 0xff;","  header[index + 2] = (totalLength >> 16) & 0xff;","  header[index + 1] = (totalLength >> 8) & 0xff;","  header[index] = (totalLength) & 0xff;","  index = index + 4;","","  // Write header requestId","  header[index + 3] = (this.requestId >> 24) & 0xff;","  header[index + 2] = (this.requestId >> 16) & 0xff;","  header[index + 1] = (this.requestId >> 8) & 0xff;","  header[index] = (this.requestId) & 0xff;","  index = index + 4;","","  // No flags","  header[index + 3] = (0 >> 24) & 0xff;","  header[index + 2] = (0 >> 16) & 0xff;","  header[index + 1] = (0 >> 8) & 0xff;","  header[index] = (0) & 0xff;","  index = index + 4;","","  // Operation","  header[index + 3] = (OP_UPDATE >> 24) & 0xff;","  header[index + 2] = (OP_UPDATE >> 16) & 0xff;","  header[index + 1] = (OP_UPDATE >> 8) & 0xff;","  header[index] = (OP_UPDATE) & 0xff;","  index = index + 4;","","  // Write ZERO","  header[index + 3] = (0 >> 24) & 0xff;","  header[index + 2] = (0 >> 16) & 0xff;","  header[index + 1] = (0 >> 8) & 0xff;","  header[index] = (0) & 0xff;","  index = index + 4;","","  // Write collection name","  index = index + header.write(this.ns, index, 'utf8') + 1;","  header[index - 1] = 0;","","  // Flags","  header[index + 3] = (this.flags >> 24) & 0xff;","  header[index + 2] = (this.flags >> 16) & 0xff;","  header[index + 1] = (this.flags >> 8) & 0xff;","  header[index] = (this.flags) & 0xff;","  index = index + 4;","","  // Return the buffers","  return buffers;","}","","var Remove = function(requestId, ismaster, bson, ns, remove, options) {","  // Basic options needed to be passed in","  if(ns == null) throw new MongoError(\"ns must be specified for query\");","","  // Ensure empty options","  options = options || {};","","  // Set internal","  this.requestId = requestId;","  this.bson = bson;","  this.ns = ns;","  this.ismaster = ismaster;","","  // Unpack options","  this.serializeFunctions = typeof options.serializeFunctions == 'boolean' ? options.serializeFunctions : false;","  this.ignoreUndefined = typeof options.ignoreUndefined == 'boolean' ? options.ignoreUndefined : false;","  this.checkKeys = typeof options.checkKeys == 'boolean' ? options.checkKeys : false;","","  // Unpack the update document","  this.limit = typeof remove[0].limit == 'number' ? remove[0].limit : 1;","  this.q = remove[0].q;","","  // Create flag value","  this.flags = this.limit == 1 ? 1 : 0;","}","","// To Binary","Remove.prototype.toBin = function() {","  // Contains all the buffers to be written","  var buffers = [];","","  // Header buffer","  var header = new Buffer(","    4 * 4 // Header","    + 4   // ZERO","    + Buffer.byteLength(this.ns) + 1 // namespace","    + 4   // Flags","  );","","  // Add header to buffers","  buffers.push(header);","","  // Total length of the message","  var totalLength = header.length;","","  // Serialize the selector","  var selector = this.bson.serialize(this.q, {","    checkKeys: this.checkKeys,","    serializeFunctions: this.serializeFunctions,","    ignoreUndefined: this.ignoreUndefined,","  });","  buffers.push(selector);","  totalLength = totalLength + selector.length;","","  // Index in header buffer","  var index = 0;","","  // Write header length","  header[index + 3] = (totalLength >> 24) & 0xff;","  header[index + 2] = (totalLength >> 16) & 0xff;","  header[index + 1] = (totalLength >> 8) & 0xff;","  header[index] = (totalLength) & 0xff;","  index = index + 4;","","  // Write header requestId","  header[index + 3] = (this.requestId >> 24) & 0xff;","  header[index + 2] = (this.requestId >> 16) & 0xff;","  header[index + 1] = (this.requestId >> 8) & 0xff;","  header[index] = (this.requestId) & 0xff;","  index = index + 4;","","  // No flags","  header[index + 3] = (0 >> 24) & 0xff;","  header[index + 2] = (0 >> 16) & 0xff;","  header[index + 1] = (0 >> 8) & 0xff;","  header[index] = (0) & 0xff;","  index = index + 4;","","  // Operation","  header[index + 3] = (OP_DELETE >> 24) & 0xff;","  header[index + 2] = (OP_DELETE >> 16) & 0xff;","  header[index + 1] = (OP_DELETE >> 8) & 0xff;","  header[index] = (OP_DELETE) & 0xff;","  index = index + 4;","","  // Write ZERO","  header[index + 3] = (0 >> 24) & 0xff;","  header[index + 2] = (0 >> 16) & 0xff;","  header[index + 1] = (0 >> 8) & 0xff;","  header[index] = (0) & 0xff;","  index = index + 4;","","  // Write collection name","  index = index + header.write(this.ns, index, 'utf8') + 1;","  header[index - 1] = 0;","","  // Write ZERO","  header[index + 3] = (this.flags >> 24) & 0xff;","  header[index + 2] = (this.flags >> 16) & 0xff;","  header[index + 1] = (this.flags >> 8) & 0xff;","  header[index] = (this.flags) & 0xff;","  index = index + 4;","","  // Return the buffers","  return buffers;","}","","module.exports = {","    Insert: Insert","  , Update: Update","  , Remove: Remove","}",""],"l":{"3":1,"6":1,"7":1,"8":1,"10":1,"12":0,"13":0,"16":0,"17":0,"21":0,"22":0,"23":0,"24":0,"25":0,"28":0,"31":0,"32":0,"33":0,"34":0,"36":0,"40":1,"42":0,"45":0,"52":0,"55":0,"58":0,"59":0,"66":0,"67":0,"71":0,"73":0,"77":0,"78":0,"82":0,"85":0,"86":0,"87":0,"88":0,"89":0,"92":0,"93":0,"94":0,"95":0,"96":0,"99":0,"100":0,"101":0,"102":0,"103":0,"106":0,"107":0,"108":0,"109":0,"110":0,"113":0,"114":0,"115":0,"116":0,"117":0,"120":0,"121":0,"124":0,"127":1,"129":0,"132":0,"135":0,"136":0,"137":0,"138":0,"141":0,"142":0,"143":0,"146":0,"147":0,"148":0,"149":0,"152":0,"153":0,"157":1,"159":0,"162":0,"170":0,"173":0,"176":0,"181":0,"182":0,"185":0,"190":0,"191":0,"194":0,"197":0,"198":0,"199":0,"200":0,"201":0,"204":0,"205":0,"206":0,"207":0,"208":0,"211":0,"212":0,"213":0,"214":0,"215":0,"218":0,"219":0,"220":0,"221":0,"222":0,"225":0,"226":0,"227":0,"228":0,"229":0,"232":0,"233":0,"236":0,"237":0,"238":0,"239":0,"240":0,"243":0,"246":1,"248":0,"251":0,"254":0,"255":0,"256":0,"257":0,"260":0,"261":0,"262":0,"265":0,"266":0,"269":0,"273":1,"275":0,"278":0,"286":0,"289":0,"292":0,"297":0,"298":0,"301":0,"304":0,"305":0,"306":0,"307":0,"308":0,"311":0,"312":0,"313":0,"314":0,"315":0,"318":0,"319":0,"320":0,"321":0,"322":0,"325":0,"326":0,"327":0,"328":0,"329":0,"332":0,"333":0,"334":0,"335":0,"336":0,"339":0,"340":0,"343":0,"344":0,"345":0,"346":0,"347":0,"350":0,"353":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/wireprotocol/shared.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/wireprotocol/shared.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":24},"end":{"line":6,"column":47}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":35}},"2":{"start":{"line":6,"column":0},"end":{"line":23,"column":1}},"3":{"start":{"line":8,"column":2},"end":{"line":8,"column":75}},"4":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"5":{"start":{"line":11,"column":4},"end":{"line":11,"column":44}},"6":{"start":{"line":14,"column":2},"end":{"line":16,"column":3}},"7":{"start":{"line":15,"column":4},"end":{"line":15,"column":56}},"8":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"9":{"start":{"line":19,"column":4},"end":{"line":19,"column":77}},"10":{"start":{"line":22,"column":2},"end":{"line":22,"column":24}},"11":{"start":{"line":25,"column":0},"end":{"line":27,"column":1}}},"branchMap":{"1":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":23},"end":{"line":8,"column":41}},{"start":{"line":8,"column":45},"end":{"line":8,"column":74}}]},"2":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":10,"column":2}},{"start":{"line":10,"column":2},"end":{"line":10,"column":2}}]},"3":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":2},"end":{"line":14,"column":2}},{"start":{"line":14,"column":2},"end":{"line":14,"column":2}}]},"4":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]}},"code":["\"use strict\"","","var ReadPreference = require('../topologies/read_preference'),","  MongoError = require('../error');","","var getReadPreference = function(cmd, options) {","  // Default to command version of the readPreference","  var readPreference = cmd.readPreference || new ReadPreference('primary');","  // If we have an option readPreference override the command one","  if(options.readPreference) {","    readPreference = options.readPreference;","  }","","  if(typeof readPreference == 'string') {","    readPreference = new ReadPreference(readPreference);","  }","","  if(!(readPreference instanceof ReadPreference)) {","    throw new MongoError('readPreference must be a ReadPreference instance');","  }","","  return readPreference;","}","","module.exports = {","  getReadPreference: getReadPreference","}",""],"l":{"3":1,"6":1,"8":0,"10":0,"11":0,"14":0,"15":0,"18":0,"19":0,"22":0,"25":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/wireprotocol/2_6_support.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":1,"40":0,"41":1,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":1,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0,0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":19},"end":{"line":15,"column":30}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":19},"end":{"line":19,"column":84}}},"3":{"name":"(anonymous_3)","line":74,"loc":{"start":{"line":74,"column":32},"end":{"line":74,"column":91}}},"4":{"name":"(anonymous_4)","line":78,"loc":{"start":{"line":78,"column":32},"end":{"line":78,"column":91}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":32},"end":{"line":82,"column":91}}},"6":{"name":"(anonymous_6)","line":86,"loc":{"start":{"line":86,"column":36},"end":{"line":86,"column":81}}},"7":{"name":"(anonymous_7)","line":100,"loc":{"start":{"line":100,"column":33},"end":{"line":100,"column":112}}},"8":{"name":"(anonymous_8)","line":105,"loc":{"start":{"line":105,"column":22},"end":{"line":105,"column":44}}},"9":{"name":"(anonymous_9)","line":153,"loc":{"start":{"line":153,"column":33},"end":{"line":153,"column":89}}},"10":{"name":"(anonymous_10)","line":168,"loc":{"start":{"line":168,"column":23},"end":{"line":168,"column":79}}},"11":{"name":"(anonymous_11)","line":280,"loc":{"start":{"line":280,"column":19},"end":{"line":280,"column":75}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":10,"column":62}},"2":{"start":{"line":12,"column":0},"end":{"line":13,"column":19}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":32}},"4":{"start":{"line":19,"column":0},"end":{"line":68,"column":1}},"5":{"start":{"line":20,"column":2},"end":{"line":20,"column":88}},"6":{"start":{"line":20,"column":22},"end":{"line":20,"column":88}},"7":{"start":{"line":21,"column":2},"end":{"line":25,"column":3}},"8":{"start":{"line":22,"column":4},"end":{"line":22,"column":23}},"9":{"start":{"line":23,"column":4},"end":{"line":23,"column":17}},"10":{"start":{"line":24,"column":4},"end":{"line":24,"column":28}},"11":{"start":{"line":28,"column":2},"end":{"line":28,"column":24}},"12":{"start":{"line":29,"column":2},"end":{"line":29,"column":20}},"13":{"start":{"line":31,"column":2},"end":{"line":31,"column":77}},"14":{"start":{"line":32,"column":2},"end":{"line":32,"column":42}},"15":{"start":{"line":35,"column":2},"end":{"line":35,"column":24}},"16":{"start":{"line":36,"column":2},"end":{"line":36,"column":35}},"17":{"start":{"line":37,"column":2},"end":{"line":37,"column":31}},"18":{"start":{"line":38,"column":2},"end":{"line":38,"column":33}},"19":{"start":{"line":41,"column":2},"end":{"line":43,"column":3}},"20":{"start":{"line":42,"column":4},"end":{"line":42,"column":45}},"21":{"start":{"line":46,"column":2},"end":{"line":48,"column":3}},"22":{"start":{"line":47,"column":4},"end":{"line":47,"column":77}},"23":{"start":{"line":51,"column":2},"end":{"line":51,"column":31}},"24":{"start":{"line":52,"column":2},"end":{"line":52,"column":79}},"25":{"start":{"line":53,"column":2},"end":{"line":53,"column":53}},"26":{"start":{"line":53,"column":23},"end":{"line":53,"column":53}},"27":{"start":{"line":54,"column":2},"end":{"line":54,"column":87}},"28":{"start":{"line":54,"column":44},"end":{"line":54,"column":87}},"29":{"start":{"line":56,"column":2},"end":{"line":56,"column":94}},"30":{"start":{"line":56,"column":33},"end":{"line":56,"column":94}},"31":{"start":{"line":58,"column":2},"end":{"line":58,"column":85}},"32":{"start":{"line":58,"column":30},"end":{"line":58,"column":85}},"33":{"start":{"line":60,"column":2},"end":{"line":67,"column":3}},"34":{"start":{"line":62,"column":4},"end":{"line":62,"column":75}},"35":{"start":{"line":64,"column":4},"end":{"line":64,"column":36}},"36":{"start":{"line":66,"column":4},"end":{"line":66,"column":18}},"37":{"start":{"line":74,"column":0},"end":{"line":76,"column":1}},"38":{"start":{"line":75,"column":2},"end":{"line":75,"column":78}},"39":{"start":{"line":78,"column":0},"end":{"line":80,"column":1}},"40":{"start":{"line":79,"column":2},"end":{"line":79,"column":76}},"41":{"start":{"line":82,"column":0},"end":{"line":84,"column":1}},"42":{"start":{"line":83,"column":2},"end":{"line":83,"column":76}},"43":{"start":{"line":86,"column":0},"end":{"line":98,"column":1}},"44":{"start":{"line":88,"column":2},"end":{"line":88,"column":52}},"45":{"start":{"line":90,"column":2},"end":{"line":94,"column":3}},"46":{"start":{"line":91,"column":4},"end":{"line":93,"column":7}},"47":{"start":{"line":97,"column":2},"end":{"line":97,"column":57}},"48":{"start":{"line":97,"column":36},"end":{"line":97,"column":57}},"49":{"start":{"line":100,"column":0},"end":{"line":151,"column":1}},"50":{"start":{"line":102,"column":2},"end":{"line":102,"column":89}},"51":{"start":{"line":105,"column":2},"end":{"line":126,"column":3}},"52":{"start":{"line":106,"column":4},"end":{"line":106,"column":33}},"53":{"start":{"line":106,"column":12},"end":{"line":106,"column":33}},"54":{"start":{"line":108,"column":4},"end":{"line":108,"column":27}},"55":{"start":{"line":111,"column":4},"end":{"line":113,"column":5}},"56":{"start":{"line":112,"column":6},"end":{"line":112,"column":94}},"57":{"start":{"line":116,"column":4},"end":{"line":118,"column":19}},"58":{"start":{"line":121,"column":4},"end":{"line":121,"column":40}},"59":{"start":{"line":122,"column":4},"end":{"line":122,"column":36}},"60":{"start":{"line":125,"column":4},"end":{"line":125,"column":39}},"61":{"start":{"line":129,"column":2},"end":{"line":129,"column":24}},"62":{"start":{"line":132,"column":2},"end":{"line":134,"column":3}},"63":{"start":{"line":133,"column":4},"end":{"line":133,"column":27}},"64":{"start":{"line":137,"column":2},"end":{"line":139,"column":3}},"65":{"start":{"line":138,"column":4},"end":{"line":138,"column":57}},"66":{"start":{"line":141,"column":2},"end":{"line":143,"column":3}},"67":{"start":{"line":142,"column":4},"end":{"line":142,"column":59}},"68":{"start":{"line":145,"column":2},"end":{"line":147,"column":3}},"69":{"start":{"line":146,"column":4},"end":{"line":146,"column":61}},"70":{"start":{"line":150,"column":2},"end":{"line":150,"column":57}},"71":{"start":{"line":153,"column":0},"end":{"line":164,"column":1}},"72":{"start":{"line":155,"column":2},"end":{"line":163,"column":3}},"73":{"start":{"line":156,"column":4},"end":{"line":156,"column":74}},"74":{"start":{"line":157,"column":9},"end":{"line":163,"column":3}},"75":{"start":{"line":158,"column":4},"end":{"line":158,"column":11}},"76":{"start":{"line":159,"column":9},"end":{"line":163,"column":3}},"77":{"start":{"line":160,"column":4},"end":{"line":160,"column":71}},"78":{"start":{"line":162,"column":4},"end":{"line":162,"column":88}},"79":{"start":{"line":168,"column":0},"end":{"line":276,"column":1}},"80":{"start":{"line":170,"column":2},"end":{"line":170,"column":26}},"81":{"start":{"line":172,"column":2},"end":{"line":172,"column":55}},"82":{"start":{"line":174,"column":2},"end":{"line":174,"column":65}},"83":{"start":{"line":175,"column":2},"end":{"line":175,"column":25}},"84":{"start":{"line":178,"column":2},"end":{"line":184,"column":3}},"85":{"start":{"line":179,"column":4},"end":{"line":179,"column":43}},"86":{"start":{"line":180,"column":9},"end":{"line":184,"column":3}},"87":{"start":{"line":181,"column":4},"end":{"line":181,"column":39}},"88":{"start":{"line":183,"column":4},"end":{"line":183,"column":43}},"89":{"start":{"line":186,"column":2},"end":{"line":186,"column":43}},"90":{"start":{"line":188,"column":2},"end":{"line":188,"column":19}},"91":{"start":{"line":190,"column":2},"end":{"line":190,"column":34}},"92":{"start":{"line":193,"column":2},"end":{"line":196,"column":3}},"93":{"start":{"line":194,"column":4},"end":{"line":194,"column":57}},"94":{"start":{"line":195,"column":4},"end":{"line":195,"column":31}},"95":{"start":{"line":199,"column":2},"end":{"line":199,"column":73}},"96":{"start":{"line":199,"column":15},"end":{"line":199,"column":73}},"97":{"start":{"line":200,"column":2},"end":{"line":200,"column":71}},"98":{"start":{"line":200,"column":15},"end":{"line":200,"column":71}},"99":{"start":{"line":201,"column":2},"end":{"line":201,"column":83}},"100":{"start":{"line":201,"column":19},"end":{"line":201,"column":83}},"101":{"start":{"line":202,"column":2},"end":{"line":202,"column":86}},"102":{"start":{"line":202,"column":20},"end":{"line":202,"column":86}},"103":{"start":{"line":203,"column":2},"end":{"line":203,"column":80}},"104":{"start":{"line":203,"column":18},"end":{"line":203,"column":80}},"105":{"start":{"line":204,"column":2},"end":{"line":204,"column":68}},"106":{"start":{"line":204,"column":14},"end":{"line":204,"column":68}},"107":{"start":{"line":205,"column":2},"end":{"line":205,"column":68}},"108":{"start":{"line":205,"column":14},"end":{"line":205,"column":68}},"109":{"start":{"line":206,"column":2},"end":{"line":206,"column":92}},"110":{"start":{"line":206,"column":22},"end":{"line":206,"column":92}},"111":{"start":{"line":207,"column":2},"end":{"line":207,"column":80}},"112":{"start":{"line":207,"column":18},"end":{"line":207,"column":80}},"113":{"start":{"line":208,"column":2},"end":{"line":208,"column":86}},"114":{"start":{"line":208,"column":20},"end":{"line":208,"column":86}},"115":{"start":{"line":210,"column":2},"end":{"line":216,"column":3}},"116":{"start":{"line":213,"column":4},"end":{"line":213,"column":47}},"117":{"start":{"line":214,"column":4},"end":{"line":214,"column":31}},"118":{"start":{"line":215,"column":4},"end":{"line":215,"column":31}},"119":{"start":{"line":219,"column":2},"end":{"line":223,"column":3}},"120":{"start":{"line":220,"column":4},"end":{"line":220,"column":34}},"121":{"start":{"line":222,"column":4},"end":{"line":222,"column":24}},"122":{"start":{"line":226,"column":2},"end":{"line":228,"column":3}},"123":{"start":{"line":227,"column":4},"end":{"line":227,"column":117}},"124":{"start":{"line":231,"column":2},"end":{"line":234,"column":3}},"125":{"start":{"line":232,"column":4},"end":{"line":232,"column":20}},"126":{"start":{"line":233,"column":4},"end":{"line":233,"column":30}},"127":{"start":{"line":237,"column":2},"end":{"line":238,"column":41}},"128":{"start":{"line":239,"column":2},"end":{"line":240,"column":38}},"129":{"start":{"line":243,"column":2},"end":{"line":248,"column":5}},"130":{"start":{"line":251,"column":2},"end":{"line":251,"column":43}},"131":{"start":{"line":254,"column":2},"end":{"line":256,"column":3}},"132":{"start":{"line":255,"column":4},"end":{"line":255,"column":34}},"133":{"start":{"line":258,"column":2},"end":{"line":260,"column":3}},"134":{"start":{"line":259,"column":4},"end":{"line":259,"column":40}},"135":{"start":{"line":262,"column":2},"end":{"line":264,"column":3}},"136":{"start":{"line":263,"column":4},"end":{"line":263,"column":48}},"137":{"start":{"line":266,"column":2},"end":{"line":268,"column":3}},"138":{"start":{"line":267,"column":4},"end":{"line":267,"column":36}},"139":{"start":{"line":270,"column":2},"end":{"line":272,"column":3}},"140":{"start":{"line":271,"column":4},"end":{"line":271,"column":32}},"141":{"start":{"line":275,"column":2},"end":{"line":275,"column":15}},"142":{"start":{"line":280,"column":0},"end":{"line":332,"column":1}},"143":{"start":{"line":282,"column":2},"end":{"line":282,"column":25}},"144":{"start":{"line":284,"column":2},"end":{"line":284,"column":55}},"145":{"start":{"line":287,"column":2},"end":{"line":287,"column":20}},"146":{"start":{"line":288,"column":2},"end":{"line":290,"column":3}},"147":{"start":{"line":289,"column":4},"end":{"line":289,"column":31}},"148":{"start":{"line":293,"column":2},"end":{"line":293,"column":29}},"149":{"start":{"line":296,"column":2},"end":{"line":297,"column":41}},"150":{"start":{"line":299,"column":2},"end":{"line":300,"column":38}},"151":{"start":{"line":303,"column":2},"end":{"line":305,"column":3}},"152":{"start":{"line":304,"column":4},"end":{"line":304,"column":136}},"153":{"start":{"line":308,"column":2},"end":{"line":308,"column":48}},"154":{"start":{"line":308,"column":22},"end":{"line":308,"column":48}},"155":{"start":{"line":311,"column":2},"end":{"line":318,"column":3}},"156":{"start":{"line":314,"column":4},"end":{"line":317,"column":6}},"157":{"start":{"line":321,"column":2},"end":{"line":325,"column":5}},"158":{"start":{"line":328,"column":2},"end":{"line":328,"column":43}},"159":{"start":{"line":331,"column":2},"end":{"line":331,"column":15}},"160":{"start":{"line":334,"column":0},"end":{"line":334,"column":30}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"3":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":14},"end":{"line":24,"column":21}},{"start":{"line":24,"column":25},"end":{"line":24,"column":27}}]},"4":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":54},"end":{"line":31,"column":69}},{"start":{"line":31,"column":72},"end":{"line":31,"column":76}}]},"5":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"6":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":5},"end":{"line":41,"column":17}},{"start":{"line":41,"column":21},"end":{"line":41,"column":57}}]},"7":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"8":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"9":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"10":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"11":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"12":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]},"13":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":5},"end":{"line":90,"column":9}},{"start":{"line":90,"column":13},"end":{"line":90,"column":31}}]},"14":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":2},"end":{"line":97,"column":2}},{"start":{"line":97,"column":2},"end":{"line":97,"column":2}}]},"15":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":106,"column":4}},{"start":{"line":106,"column":4},"end":{"line":106,"column":4}}]},"16":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"17":{"line":116,"type":"cond-expr","locations":[{"start":{"line":117,"column":8},"end":{"line":117,"column":35}},{"start":{"line":118,"column":8},"end":{"line":118,"column":18}}]},"18":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":2},"end":{"line":132,"column":2}},{"start":{"line":132,"column":2},"end":{"line":132,"column":2}}]},"19":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":2},"end":{"line":137,"column":2}},{"start":{"line":137,"column":2},"end":{"line":137,"column":2}}]},"20":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":2},"end":{"line":141,"column":2}},{"start":{"line":141,"column":2},"end":{"line":141,"column":2}}]},"21":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":2},"end":{"line":145,"column":2}},{"start":{"line":145,"column":2},"end":{"line":145,"column":2}}]},"22":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":2},"end":{"line":155,"column":2}},{"start":{"line":155,"column":2},"end":{"line":155,"column":2}}]},"23":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":9},"end":{"line":157,"column":9}},{"start":{"line":157,"column":9},"end":{"line":157,"column":9}}]},"24":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":9},"end":{"line":159,"column":9}},{"start":{"line":159,"column":9},"end":{"line":159,"column":9}}]},"25":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":12},"end":{"line":170,"column":19}},{"start":{"line":170,"column":23},"end":{"line":170,"column":25}}]},"26":{"line":174,"type":"binary-expr","locations":[{"start":{"line":174,"column":26},"end":{"line":174,"column":39}},{"start":{"line":174,"column":43},"end":{"line":174,"column":64}}]},"27":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":2},"end":{"line":178,"column":2}},{"start":{"line":178,"column":2},"end":{"line":178,"column":2}}]},"28":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":9},"end":{"line":180,"column":9}},{"start":{"line":180,"column":9},"end":{"line":180,"column":9}}]},"29":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":12},"end":{"line":180,"column":33}},{"start":{"line":180,"column":37},"end":{"line":180,"column":78}},{"start":{"line":180,"column":83},"end":{"line":180,"column":104}},{"start":{"line":180,"column":108},"end":{"line":180,"column":134}}]},"30":{"line":186,"type":"binary-expr","locations":[{"start":{"line":186,"column":21},"end":{"line":186,"column":37}},{"start":{"line":186,"column":41},"end":{"line":186,"column":42}}]},"31":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":2},"end":{"line":193,"column":2}},{"start":{"line":193,"column":2},"end":{"line":193,"column":2}}]},"32":{"line":193,"type":"binary-expr","locations":[{"start":{"line":193,"column":5},"end":{"line":193,"column":30}},{"start":{"line":193,"column":34},"end":{"line":193,"column":48}}]},"33":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":2},"end":{"line":199,"column":2}},{"start":{"line":199,"column":2},"end":{"line":199,"column":2}}]},"34":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":2},"end":{"line":200,"column":2}},{"start":{"line":200,"column":2},"end":{"line":200,"column":2}}]},"35":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":2},"end":{"line":201,"column":2}},{"start":{"line":201,"column":2},"end":{"line":201,"column":2}}]},"36":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":2},"end":{"line":202,"column":2}},{"start":{"line":202,"column":2},"end":{"line":202,"column":2}}]},"37":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":2},"end":{"line":203,"column":2}},{"start":{"line":203,"column":2},"end":{"line":203,"column":2}}]},"38":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":2},"end":{"line":204,"column":2}},{"start":{"line":204,"column":2},"end":{"line":204,"column":2}}]},"39":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":2},"end":{"line":205,"column":2}},{"start":{"line":205,"column":2},"end":{"line":205,"column":2}}]},"40":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":2},"end":{"line":206,"column":2}},{"start":{"line":206,"column":2},"end":{"line":206,"column":2}}]},"41":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":2},"end":{"line":207,"column":2}},{"start":{"line":207,"column":2},"end":{"line":207,"column":2}}]},"42":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":2},"end":{"line":208,"column":2}},{"start":{"line":208,"column":2},"end":{"line":208,"column":2}}]},"43":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":2},"end":{"line":210,"column":2}},{"start":{"line":210,"column":2},"end":{"line":210,"column":2}}]},"44":{"line":213,"type":"binary-expr","locations":[{"start":{"line":213,"column":31},"end":{"line":213,"column":40}},{"start":{"line":213,"column":44},"end":{"line":213,"column":45}}]},"45":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":2},"end":{"line":219,"column":2}},{"start":{"line":219,"column":2},"end":{"line":219,"column":2}}]},"46":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":2},"end":{"line":226,"column":2}},{"start":{"line":226,"column":2},"end":{"line":226,"column":2}}]},"47":{"line":226,"type":"binary-expr","locations":[{"start":{"line":226,"column":5},"end":{"line":226,"column":20}},{"start":{"line":226,"column":24},"end":{"line":226,"column":56}}]},"48":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":2},"end":{"line":231,"column":2}},{"start":{"line":231,"column":2},"end":{"line":231,"column":2}}]},"49":{"line":237,"type":"cond-expr","locations":[{"start":{"line":238,"column":6},"end":{"line":238,"column":32}},{"start":{"line":238,"column":35},"end":{"line":238,"column":40}}]},"50":{"line":239,"type":"cond-expr","locations":[{"start":{"line":240,"column":6},"end":{"line":240,"column":29}},{"start":{"line":240,"column":32},"end":{"line":240,"column":37}}]},"51":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":2},"end":{"line":254,"column":2}},{"start":{"line":254,"column":2},"end":{"line":254,"column":2}}]},"52":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":2},"end":{"line":258,"column":2}},{"start":{"line":258,"column":2},"end":{"line":258,"column":2}}]},"53":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":2},"end":{"line":262,"column":2}},{"start":{"line":262,"column":2},"end":{"line":262,"column":2}}]},"54":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":2},"end":{"line":266,"column":2}},{"start":{"line":266,"column":2},"end":{"line":266,"column":2}}]},"55":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":2},"end":{"line":270,"column":2}},{"start":{"line":270,"column":2},"end":{"line":270,"column":2}}]},"56":{"line":282,"type":"binary-expr","locations":[{"start":{"line":282,"column":12},"end":{"line":282,"column":19}},{"start":{"line":282,"column":23},"end":{"line":282,"column":25}}]},"57":{"line":296,"type":"cond-expr","locations":[{"start":{"line":297,"column":6},"end":{"line":297,"column":32}},{"start":{"line":297,"column":35},"end":{"line":297,"column":40}}]},"58":{"line":299,"type":"cond-expr","locations":[{"start":{"line":300,"column":6},"end":{"line":300,"column":29}},{"start":{"line":300,"column":32},"end":{"line":300,"column":37}}]},"59":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":2},"end":{"line":303,"column":2}},{"start":{"line":303,"column":2},"end":{"line":303,"column":2}}]},"60":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":5},"end":{"line":303,"column":20}},{"start":{"line":303,"column":24},"end":{"line":303,"column":56}}]},"61":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":2},"end":{"line":308,"column":2}},{"start":{"line":308,"column":2},"end":{"line":308,"column":2}}]},"62":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":2},"end":{"line":311,"column":2}},{"start":{"line":311,"column":2},"end":{"line":311,"column":2}}]},"63":{"line":311,"type":"binary-expr","locations":[{"start":{"line":311,"column":5},"end":{"line":311,"column":30}},{"start":{"line":312,"column":7},"end":{"line":312,"column":21}},{"start":{"line":313,"column":7},"end":{"line":313,"column":45}}]}},"code":["\"use strict\";","","var copy = require('../connection/utils').copy","  , retrieveBSON = require('../connection/utils').retrieveBSON","  , KillCursor = require('../connection/commands').KillCursor","  , GetMore = require('../connection/commands').GetMore","  , Query = require('../connection/commands').Query","  , f = require('util').format","  , MongoError = require('../error')","  , getReadPreference = require('./shared').getReadPreference;","","var BSON = retrieveBSON(),","  Long = BSON.Long;","","var WireProtocol = function() {}","","//","// Execute a write operation","var executeWrite = function(pool, bson, type, opsField, ns, ops, options, callback) {","  if(ops.length == 0) throw new MongoError(\"insert must contain at least one document\");","  if(typeof options == 'function') {","    callback = options;","    options = {};","    options = options || {};","  }","","  // Split the ns up to get db and collection","  var p = ns.split(\".\");","  var d = p.shift();","  // Options","  var ordered = typeof options.ordered == 'boolean' ? options.ordered : true;","  var writeConcern = options.writeConcern;","","  // return skeleton","  var writeCommand = {};","  writeCommand[type] = p.join('.');","  writeCommand[opsField] = ops;","  writeCommand.ordered = ordered;","","  // Did we specify a write concern","  if(writeConcern && Object.keys(writeConcern).length > 0) {","    writeCommand.writeConcern = writeConcern;","  }","","  // Do we have bypassDocumentValidation set, then enable it on the write command","  if(typeof options.bypassDocumentValidation == 'boolean') {","    writeCommand.bypassDocumentValidation = options.bypassDocumentValidation;","  }","","  // Options object","  var opts = { command: true };","  var queryOptions = { checkKeys : false, numberToSkip: 0, numberToReturn: 1 };","  if(type == 'insert') queryOptions.checkKeys = true;","  if(typeof options.checkKeys == 'boolean') queryOptions.checkKeys = options.checkKeys;","  // Ensure we support serialization of functions","  if(options.serializeFunctions) queryOptions.serializeFunctions = options.serializeFunctions;","  // Do not serialize the undefined fields","  if(options.ignoreUndefined) queryOptions.ignoreUndefined = options.ignoreUndefined;","","  try {","    // Create write command","    var cmd = new Query(bson, f(\"%s.$cmd\", d), writeCommand, queryOptions);","    // Execute command","    pool.write(cmd, opts, callback);","  } catch(err) {","    callback(err);","  }","}","","//","// Needs to support legacy mass insert as well as ordered/unordered legacy","// emulation","//","WireProtocol.prototype.insert = function(pool, ismaster, ns, bson, ops, options, callback) {","  executeWrite(pool, bson, 'insert', 'documents', ns, ops, options, callback);","}","","WireProtocol.prototype.update = function(pool, ismaster, ns, bson, ops, options, callback) {","  executeWrite(pool, bson, 'update', 'updates', ns, ops, options, callback);","}","","WireProtocol.prototype.remove = function(pool, ismaster, ns, bson, ops, options, callback) {","  executeWrite(pool, bson, 'delete', 'deletes', ns, ops, options, callback);","}","","WireProtocol.prototype.killCursor = function(bson, ns, cursorId, pool, callback) {","  // Create a kill cursor command","  var killCursor = new KillCursor(bson, [cursorId]);","  // Execute the kill cursor command","  if(pool && pool.isConnected()) {","    pool.write(killCursor, {","      immediateRelease:true, noResponse: true","    });","  }","","  // Callback","  if(typeof callback == 'function') callback(null, null);","}","","WireProtocol.prototype.getMore = function(bson, ns, cursorState, batchSize, raw, connection, options, callback) {","  // Create getMore command","  var getMore = new GetMore(bson, ns, cursorState.cursorId, {numberToReturn: batchSize});","","  // Query callback","  var queryCallback = function(err, result) {","    if(err) return callback(err);","    // Get the raw message","    var r = result.message;","","    // If we have a timed out query or a cursor that was killed","    if((r.responseFlags & (1 << 0)) != 0) {","      return callback(new MongoError(\"cursor does not exist, was killed or timed out\"), null);","    }","","    // Ensure we have a Long valie cursor id","    var cursorId = typeof r.cursorId == 'number'","      ? Long.fromNumber(r.cursorId)","      : r.cursorId;","","    // Set all the values","    cursorState.documents = r.documents;","    cursorState.cursorId = cursorId;","","    // Return","    callback(null, null, r.connection);","  }","","  // Contains any query options","  var queryOptions = {};","","  // If we have a raw query decorate the function","  if(raw) {","    queryOptions.raw = raw;","  }","","  // Check if we need to promote longs","  if(typeof cursorState.promoteLongs == 'boolean') {","    queryOptions.promoteLongs = cursorState.promoteLongs;","  }","","  if(typeof cursorState.promoteValues == 'boolean') {","    queryOptions.promoteValues = cursorState.promoteValues;","  }","","  if(typeof cursorState.promoteBuffers == 'boolean') {","    queryOptions.promoteBuffers = cursorState.promoteBuffers;","  }","","  // Write out the getMore command","  connection.write(getMore, queryOptions, queryCallback);","}","","WireProtocol.prototype.command = function(bson, ns, cmd, cursorState, topology, options) {","  // Establish type of command","  if(cmd.find) {","    return setupClassicFind(bson, ns, cmd, cursorState, topology, options)","  } else if(cursorState.cursorId != null) {","    return;","  } else if(cmd) {","    return setupCommand(bson, ns, cmd, cursorState, topology, options);","  } else {","    throw new MongoError(f(\"command %s does not return a cursor\", JSON.stringify(cmd)));","  }","}","","//","// Execute a find command","var setupClassicFind = function(bson, ns, cmd, cursorState, topology, options) {","  // Ensure we have at least some options","  options = options || {};","  // Get the readPreference","  var readPreference = getReadPreference(cmd, options);","  // Set the optional batchSize","  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;","  var numberToReturn = 0;","","  // Unpack the limit and batchSize values","  if(cursorState.limit == 0) {","    numberToReturn = cursorState.batchSize;","  } else if(cursorState.limit < 0 || cursorState.limit < cursorState.batchSize || (cursorState.limit > 0 && cursorState.batchSize == 0)) {","    numberToReturn = cursorState.limit;","  } else {","    numberToReturn = cursorState.batchSize;","  }","","  var numberToSkip = cursorState.skip || 0;","  // Build actual find command","  var findCmd = {};","  // Using special modifier","  var usesSpecialModifier = false;","","  // We have a Mongos topology, check if we need to add a readPreference","  if(topology.type == 'mongos' && readPreference) {","    findCmd['$readPreference'] = readPreference.toJSON();","    usesSpecialModifier = true;","  }","","  // Add special modifiers to the query","  if(cmd.sort) findCmd['orderby'] = cmd.sort, usesSpecialModifier = true;","  if(cmd.hint) findCmd['$hint'] = cmd.hint, usesSpecialModifier = true;","  if(cmd.snapshot) findCmd['$snapshot'] = cmd.snapshot, usesSpecialModifier = true;","  if(cmd.returnKey) findCmd['$returnKey'] = cmd.returnKey, usesSpecialModifier = true;","  if(cmd.maxScan) findCmd['$maxScan'] = cmd.maxScan, usesSpecialModifier = true;","  if(cmd.min) findCmd['$min'] = cmd.min, usesSpecialModifier = true;","  if(cmd.max) findCmd['$max'] = cmd.max, usesSpecialModifier = true;","  if(cmd.showDiskLoc) findCmd['$showDiskLoc'] = cmd.showDiskLoc, usesSpecialModifier = true;","  if(cmd.comment) findCmd['$comment'] = cmd.comment, usesSpecialModifier = true;","  if(cmd.maxTimeMS) findCmd['$maxTimeMS'] = cmd.maxTimeMS, usesSpecialModifier = true;","","  if(cmd.explain) {","\t// nToReturn must be 0 (match all) or negative (match N and close cursor)","\t// nToReturn > 0 will give explain results equivalent to limit(0)","    numberToReturn = -Math.abs(cmd.limit || 0);","    usesSpecialModifier = true;","    findCmd['$explain'] = true;","  }","","  // If we have a special modifier","  if(usesSpecialModifier) {","    findCmd['$query'] = cmd.query;","  } else {","    findCmd = cmd.query;","  }","","  // Throw on majority readConcern passed in","  if(cmd.readConcern && cmd.readConcern.level != 'local') {","    throw new MongoError(f('server find command does not support a readConcern level of %s', cmd.readConcern.level));","  }","","  // Remove readConcern, ensure no failing commands","  if(cmd.readConcern) {","    cmd = copy(cmd);","    delete cmd['readConcern'];","  }","","  // Serialize functions","  var serializeFunctions = typeof options.serializeFunctions == 'boolean'","    ? options.serializeFunctions : false;","  var ignoreUndefined = typeof options.ignoreUndefined == 'boolean'","    ? options.ignoreUndefined : false;","","  // Build Query object","  var query = new Query(bson, ns, findCmd, {","      numberToSkip: numberToSkip, numberToReturn: numberToReturn","    , checkKeys: false, returnFieldSelector: cmd.fields","    , serializeFunctions: serializeFunctions","    , ignoreUndefined: ignoreUndefined","  });","","  // Set query flags","  query.slaveOk = readPreference.slaveOk();","","  // Set up the option bits for wire protocol","  if(typeof cmd.tailable == 'boolean') {","    query.tailable = cmd.tailable;","  }","","  if(typeof cmd.oplogReplay == 'boolean') {","    query.oplogReplay = cmd.oplogReplay;","  }","","  if(typeof cmd.noCursorTimeout == 'boolean') {","    query.noCursorTimeout = cmd.noCursorTimeout;","  }","","  if(typeof cmd.awaitData == 'boolean') {","    query.awaitData = cmd.awaitData;","  }","","  if(typeof cmd.partial == 'boolean') {","    query.partial = cmd.partial;","  }","","  // Return the query","  return query;","}","","//","// Set up a command cursor","var setupCommand = function(bson, ns, cmd, cursorState, topology, options) {","  // Set empty options object","  options = options || {}","  // Get the readPreference","  var readPreference = getReadPreference(cmd, options);","","  // Final query","  var finalCmd = {};","  for(var name in cmd) {","    finalCmd[name] = cmd[name];","  }","","  // Build command namespace","  var parts = ns.split(/\\./);","","  // Serialize functions","  var serializeFunctions = typeof options.serializeFunctions == 'boolean'","    ? options.serializeFunctions : false;","","  var ignoreUndefined = typeof options.ignoreUndefined == 'boolean'","    ? options.ignoreUndefined : false;","","  // Throw on majority readConcern passed in","  if(cmd.readConcern && cmd.readConcern.level != 'local') {","    throw new MongoError(f('server %s command does not support a readConcern level of %s', JSON.stringify(cmd), cmd.readConcern.level));","  }","","  // Remove readConcern, ensure no failing commands","  if(cmd.readConcern) delete cmd['readConcern'];","","  // We have a Mongos topology, check if we need to add a readPreference","  if(topology.type == 'mongos'","    && readPreference","    && readPreference.preference != 'primary') {","    finalCmd = {","      '$query': finalCmd,","      '$readPreference': readPreference.toJSON()","    };","  }","","  // Build Query object","  var query = new Query(bson, f('%s.$cmd', parts.shift()), finalCmd, {","      numberToSkip: 0, numberToReturn: -1","    , checkKeys: false, serializeFunctions: serializeFunctions","    , ignoreUndefined: ignoreUndefined","  });","","  // Set query flags","  query.slaveOk = readPreference.slaveOk();","","  // Return the query","  return query;","}","","module.exports = WireProtocol;",""],"l":{"3":1,"12":1,"15":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"28":0,"29":0,"31":0,"32":0,"35":0,"36":0,"37":0,"38":0,"41":0,"42":0,"46":0,"47":0,"51":0,"52":0,"53":0,"54":0,"56":0,"58":0,"60":0,"62":0,"64":0,"66":0,"74":1,"75":0,"78":1,"79":0,"82":1,"83":0,"86":1,"88":0,"90":0,"91":0,"97":0,"100":1,"102":0,"105":0,"106":0,"108":0,"111":0,"112":0,"116":0,"121":0,"122":0,"125":0,"129":0,"132":0,"133":0,"137":0,"138":0,"141":0,"142":0,"145":0,"146":0,"150":0,"153":1,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"162":0,"168":1,"170":0,"172":0,"174":0,"175":0,"178":0,"179":0,"180":0,"181":0,"183":0,"186":0,"188":0,"190":0,"193":0,"194":0,"195":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"210":0,"213":0,"214":0,"215":0,"219":0,"220":0,"222":0,"226":0,"227":0,"231":0,"232":0,"233":0,"237":0,"239":0,"243":0,"251":0,"254":0,"255":0,"258":0,"259":0,"262":0,"263":0,"266":0,"267":0,"270":0,"271":0,"275":0,"280":1,"282":0,"284":0,"287":0,"288":0,"289":0,"293":0,"296":0,"299":0,"303":0,"304":0,"308":0,"311":0,"314":0,"321":0,"328":0,"331":0,"334":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/wireprotocol/3_2_support.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":1,"45":0,"46":1,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":1,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":19},"end":{"line":12,"column":48}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":19},"end":{"line":18,"column":84}}},"3":{"name":"(anonymous_3)","line":83,"loc":{"start":{"line":83,"column":32},"end":{"line":83,"column":91}}},"4":{"name":"(anonymous_4)","line":87,"loc":{"start":{"line":87,"column":32},"end":{"line":87,"column":91}}},"5":{"name":"(anonymous_5)","line":91,"loc":{"start":{"line":91,"column":32},"end":{"line":91,"column":91}}},"6":{"name":"(anonymous_6)","line":95,"loc":{"start":{"line":95,"column":36},"end":{"line":95,"column":81}}},"7":{"name":"(anonymous_7)","line":116,"loc":{"start":{"line":116,"column":27},"end":{"line":116,"column":49}}},"8":{"name":"(anonymous_8)","line":149,"loc":{"start":{"line":149,"column":33},"end":{"line":149,"column":112}}},"9":{"name":"(anonymous_9)","line":178,"loc":{"start":{"line":178,"column":22},"end":{"line":178,"column":44}}},"10":{"name":"(anonymous_10)","line":241,"loc":{"start":{"line":241,"column":33},"end":{"line":241,"column":89}}},"11":{"name":"(anonymous_11)","line":322,"loc":{"start":{"line":322,"column":25},"end":{"line":322,"column":81}}},"12":{"name":"(anonymous_12)","line":502,"loc":{"start":{"line":502,"column":19},"end":{"line":502,"column":75}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":7,"column":62}},"2":{"start":{"line":9,"column":0},"end":{"line":10,"column":19}},"3":{"start":{"line":12,"column":0},"end":{"line":14,"column":1}},"4":{"start":{"line":13,"column":2},"end":{"line":13,"column":47}},"5":{"start":{"line":18,"column":0},"end":{"line":77,"column":1}},"6":{"start":{"line":19,"column":2},"end":{"line":19,"column":88}},"7":{"start":{"line":19,"column":22},"end":{"line":19,"column":88}},"8":{"start":{"line":20,"column":2},"end":{"line":24,"column":3}},"9":{"start":{"line":21,"column":4},"end":{"line":21,"column":23}},"10":{"start":{"line":22,"column":4},"end":{"line":22,"column":17}},"11":{"start":{"line":23,"column":4},"end":{"line":23,"column":28}},"12":{"start":{"line":27,"column":2},"end":{"line":27,"column":24}},"13":{"start":{"line":28,"column":2},"end":{"line":28,"column":20}},"14":{"start":{"line":30,"column":2},"end":{"line":30,"column":77}},"15":{"start":{"line":31,"column":2},"end":{"line":31,"column":42}},"16":{"start":{"line":34,"column":2},"end":{"line":34,"column":24}},"17":{"start":{"line":35,"column":2},"end":{"line":35,"column":35}},"18":{"start":{"line":36,"column":2},"end":{"line":36,"column":31}},"19":{"start":{"line":37,"column":2},"end":{"line":37,"column":33}},"20":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"21":{"start":{"line":41,"column":4},"end":{"line":41,"column":45}},"22":{"start":{"line":45,"column":2},"end":{"line":51,"column":3}},"23":{"start":{"line":46,"column":4},"end":{"line":50,"column":5}},"24":{"start":{"line":47,"column":6},"end":{"line":49,"column":7}},"25":{"start":{"line":48,"column":8},"end":{"line":48,"column":64}},"26":{"start":{"line":54,"column":2},"end":{"line":56,"column":3}},"27":{"start":{"line":55,"column":4},"end":{"line":55,"column":77}},"28":{"start":{"line":59,"column":2},"end":{"line":59,"column":31}},"29":{"start":{"line":60,"column":2},"end":{"line":60,"column":79}},"30":{"start":{"line":61,"column":2},"end":{"line":61,"column":53}},"31":{"start":{"line":61,"column":23},"end":{"line":61,"column":53}},"32":{"start":{"line":62,"column":2},"end":{"line":62,"column":87}},"33":{"start":{"line":62,"column":44},"end":{"line":62,"column":87}},"34":{"start":{"line":65,"column":2},"end":{"line":65,"column":94}},"35":{"start":{"line":65,"column":33},"end":{"line":65,"column":94}},"36":{"start":{"line":67,"column":2},"end":{"line":67,"column":85}},"37":{"start":{"line":67,"column":30},"end":{"line":67,"column":85}},"38":{"start":{"line":69,"column":2},"end":{"line":76,"column":3}},"39":{"start":{"line":71,"column":4},"end":{"line":71,"column":75}},"40":{"start":{"line":73,"column":4},"end":{"line":73,"column":36}},"41":{"start":{"line":75,"column":4},"end":{"line":75,"column":18}},"42":{"start":{"line":83,"column":0},"end":{"line":85,"column":1}},"43":{"start":{"line":84,"column":2},"end":{"line":84,"column":78}},"44":{"start":{"line":87,"column":0},"end":{"line":89,"column":1}},"45":{"start":{"line":88,"column":2},"end":{"line":88,"column":76}},"46":{"start":{"line":91,"column":0},"end":{"line":93,"column":1}},"47":{"start":{"line":92,"column":2},"end":{"line":92,"column":76}},"48":{"start":{"line":95,"column":0},"end":{"line":147,"column":1}},"49":{"start":{"line":97,"column":2},"end":{"line":97,"column":29}},"50":{"start":{"line":99,"column":2},"end":{"line":99,"column":46}},"51":{"start":{"line":101,"column":2},"end":{"line":104,"column":3}},"52":{"start":{"line":107,"column":2},"end":{"line":110,"column":5}},"53":{"start":{"line":113,"column":2},"end":{"line":113,"column":23}},"54":{"start":{"line":116,"column":2},"end":{"line":139,"column":3}},"55":{"start":{"line":117,"column":4},"end":{"line":120,"column":5}},"56":{"start":{"line":118,"column":6},"end":{"line":118,"column":47}},"57":{"start":{"line":118,"column":40},"end":{"line":118,"column":47}},"58":{"start":{"line":119,"column":6},"end":{"line":119,"column":27}},"59":{"start":{"line":123,"column":4},"end":{"line":123,"column":27}},"60":{"start":{"line":125,"column":4},"end":{"line":128,"column":5}},"61":{"start":{"line":126,"column":6},"end":{"line":126,"column":47}},"62":{"start":{"line":126,"column":40},"end":{"line":126,"column":47}},"63":{"start":{"line":127,"column":6},"end":{"line":127,"column":74}},"64":{"start":{"line":130,"column":4},"end":{"line":133,"column":5}},"65":{"start":{"line":131,"column":6},"end":{"line":131,"column":47}},"66":{"start":{"line":131,"column":40},"end":{"line":131,"column":47}},"67":{"start":{"line":132,"column":6},"end":{"line":132,"column":107}},"68":{"start":{"line":136,"column":4},"end":{"line":138,"column":5}},"69":{"start":{"line":137,"column":6},"end":{"line":137,"column":37}},"70":{"start":{"line":142,"column":2},"end":{"line":146,"column":3}},"71":{"start":{"line":143,"column":4},"end":{"line":145,"column":27}},"72":{"start":{"line":149,"column":0},"end":{"line":239,"column":1}},"73":{"start":{"line":150,"column":2},"end":{"line":150,"column":26}},"74":{"start":{"line":152,"column":2},"end":{"line":152,"column":29}},"75":{"start":{"line":154,"column":2},"end":{"line":154,"column":46}},"76":{"start":{"line":157,"column":2},"end":{"line":161,"column":3}},"77":{"start":{"line":163,"column":2},"end":{"line":166,"column":3}},"78":{"start":{"line":165,"column":4},"end":{"line":165,"column":58}},"79":{"start":{"line":169,"column":2},"end":{"line":172,"column":5}},"80":{"start":{"line":175,"column":2},"end":{"line":175,"column":23}},"81":{"start":{"line":178,"column":2},"end":{"line":211,"column":3}},"82":{"start":{"line":179,"column":4},"end":{"line":179,"column":33}},"83":{"start":{"line":179,"column":12},"end":{"line":179,"column":33}},"84":{"start":{"line":181,"column":4},"end":{"line":181,"column":27}},"85":{"start":{"line":184,"column":4},"end":{"line":186,"column":5}},"86":{"start":{"line":185,"column":6},"end":{"line":185,"column":74}},"87":{"start":{"line":189,"column":4},"end":{"line":193,"column":5}},"88":{"start":{"line":190,"column":6},"end":{"line":190,"column":42}},"89":{"start":{"line":191,"column":6},"end":{"line":191,"column":40}},"90":{"start":{"line":192,"column":6},"end":{"line":192,"column":41}},"91":{"start":{"line":196,"column":4},"end":{"line":198,"column":5}},"92":{"start":{"line":197,"column":6},"end":{"line":197,"column":57}},"93":{"start":{"line":201,"column":4},"end":{"line":203,"column":33}},"94":{"start":{"line":206,"column":4},"end":{"line":206,"column":60}},"95":{"start":{"line":207,"column":4},"end":{"line":207,"column":36}},"96":{"start":{"line":210,"column":4},"end":{"line":210,"column":49}},"97":{"start":{"line":214,"column":2},"end":{"line":214,"column":39}},"98":{"start":{"line":217,"column":2},"end":{"line":219,"column":3}},"99":{"start":{"line":218,"column":4},"end":{"line":218,"column":27}},"100":{"start":{"line":222,"column":2},"end":{"line":222,"column":49}},"101":{"start":{"line":225,"column":2},"end":{"line":227,"column":3}},"102":{"start":{"line":226,"column":4},"end":{"line":226,"column":57}},"103":{"start":{"line":229,"column":2},"end":{"line":231,"column":3}},"104":{"start":{"line":230,"column":4},"end":{"line":230,"column":59}},"105":{"start":{"line":233,"column":2},"end":{"line":235,"column":3}},"106":{"start":{"line":234,"column":4},"end":{"line":234,"column":61}},"107":{"start":{"line":238,"column":2},"end":{"line":238,"column":55}},"108":{"start":{"line":241,"column":0},"end":{"line":263,"column":1}},"109":{"start":{"line":242,"column":2},"end":{"line":242,"column":25}},"110":{"start":{"line":244,"column":2},"end":{"line":244,"column":113}},"111":{"start":{"line":247,"column":2},"end":{"line":262,"column":3}},"112":{"start":{"line":249,"column":4},"end":{"line":249,"column":81}},"113":{"start":{"line":251,"column":4},"end":{"line":251,"column":24}},"114":{"start":{"line":253,"column":4},"end":{"line":253,"column":45}},"115":{"start":{"line":255,"column":4},"end":{"line":255,"column":17}},"116":{"start":{"line":256,"column":9},"end":{"line":262,"column":3}},"117":{"start":{"line":257,"column":4},"end":{"line":257,"column":11}},"118":{"start":{"line":258,"column":9},"end":{"line":262,"column":3}},"119":{"start":{"line":259,"column":4},"end":{"line":259,"column":71}},"120":{"start":{"line":261,"column":4},"end":{"line":261,"column":88}},"121":{"start":{"line":322,"column":0},"end":{"line":498,"column":1}},"122":{"start":{"line":324,"column":2},"end":{"line":324,"column":26}},"123":{"start":{"line":326,"column":2},"end":{"line":326,"column":55}},"124":{"start":{"line":328,"column":2},"end":{"line":328,"column":65}},"125":{"start":{"line":331,"column":2},"end":{"line":331,"column":29}},"126":{"start":{"line":333,"column":2},"end":{"line":333,"column":46}},"127":{"start":{"line":336,"column":2},"end":{"line":338,"column":4}},"128":{"start":{"line":341,"column":2},"end":{"line":348,"column":3}},"129":{"start":{"line":343,"column":4},"end":{"line":347,"column":5}},"130":{"start":{"line":344,"column":6},"end":{"line":344,"column":43}},"131":{"start":{"line":346,"column":6},"end":{"line":346,"column":33}},"132":{"start":{"line":351,"column":2},"end":{"line":351,"column":27}},"133":{"start":{"line":354,"column":2},"end":{"line":384,"column":3}},"134":{"start":{"line":355,"column":4},"end":{"line":355,"column":24}},"135":{"start":{"line":357,"column":4},"end":{"line":381,"column":5}},"136":{"start":{"line":358,"column":6},"end":{"line":358,"column":39}},"137":{"start":{"line":360,"column":6},"end":{"line":364,"column":7}},"138":{"start":{"line":361,"column":8},"end":{"line":361,"column":26}},"139":{"start":{"line":362,"column":13},"end":{"line":364,"column":7}},"140":{"start":{"line":363,"column":8},"end":{"line":363,"column":27}},"141":{"start":{"line":367,"column":6},"end":{"line":367,"column":47}},"142":{"start":{"line":369,"column":6},"end":{"line":380,"column":7}},"143":{"start":{"line":370,"column":8},"end":{"line":370,"column":40}},"144":{"start":{"line":372,"column":8},"end":{"line":376,"column":9}},"145":{"start":{"line":373,"column":10},"end":{"line":373,"column":28}},"146":{"start":{"line":374,"column":15},"end":{"line":376,"column":9}},"147":{"start":{"line":375,"column":10},"end":{"line":375,"column":29}},"148":{"start":{"line":379,"column":8},"end":{"line":379,"column":52}},"149":{"start":{"line":383,"column":4},"end":{"line":383,"column":27}},"150":{"start":{"line":387,"column":2},"end":{"line":387,"column":40}},"151":{"start":{"line":387,"column":15},"end":{"line":387,"column":40}},"152":{"start":{"line":389,"column":2},"end":{"line":389,"column":49}},"153":{"start":{"line":389,"column":17},"end":{"line":389,"column":49}},"154":{"start":{"line":391,"column":2},"end":{"line":391,"column":39}},"155":{"start":{"line":391,"column":15},"end":{"line":391,"column":39}},"156":{"start":{"line":393,"column":2},"end":{"line":393,"column":39}},"157":{"start":{"line":393,"column":15},"end":{"line":393,"column":39}},"158":{"start":{"line":395,"column":2},"end":{"line":395,"column":42}},"159":{"start":{"line":395,"column":16},"end":{"line":395,"column":42}},"160":{"start":{"line":398,"column":2},"end":{"line":401,"column":3}},"161":{"start":{"line":399,"column":4},"end":{"line":399,"column":40}},"162":{"start":{"line":400,"column":4},"end":{"line":400,"column":31}},"163":{"start":{"line":404,"column":2},"end":{"line":414,"column":3}},"164":{"start":{"line":405,"column":4},"end":{"line":411,"column":5}},"165":{"start":{"line":406,"column":6},"end":{"line":408,"column":7}},"166":{"start":{"line":407,"column":8},"end":{"line":407,"column":48}},"167":{"start":{"line":410,"column":6},"end":{"line":410,"column":33}},"168":{"start":{"line":413,"column":4},"end":{"line":413,"column":48}},"169":{"start":{"line":417,"column":2},"end":{"line":417,"column":48}},"170":{"start":{"line":417,"column":18},"end":{"line":417,"column":48}},"171":{"start":{"line":420,"column":2},"end":{"line":420,"column":48}},"172":{"start":{"line":420,"column":18},"end":{"line":420,"column":48}},"173":{"start":{"line":423,"column":2},"end":{"line":423,"column":54}},"174":{"start":{"line":423,"column":20},"end":{"line":423,"column":54}},"175":{"start":{"line":426,"column":2},"end":{"line":426,"column":36}},"176":{"start":{"line":426,"column":14},"end":{"line":426,"column":36}},"177":{"start":{"line":429,"column":2},"end":{"line":429,"column":36}},"178":{"start":{"line":429,"column":14},"end":{"line":429,"column":36}},"179":{"start":{"line":432,"column":2},"end":{"line":432,"column":54}},"180":{"start":{"line":432,"column":20},"end":{"line":432,"column":54}},"181":{"start":{"line":435,"column":2},"end":{"line":435,"column":61}},"182":{"start":{"line":435,"column":22},"end":{"line":435,"column":61}},"183":{"start":{"line":438,"column":2},"end":{"line":438,"column":51}},"184":{"start":{"line":438,"column":19},"end":{"line":438,"column":51}},"185":{"start":{"line":441,"column":2},"end":{"line":441,"column":51}},"186":{"start":{"line":441,"column":19},"end":{"line":441,"column":51}},"187":{"start":{"line":444,"column":2},"end":{"line":444,"column":60}},"188":{"start":{"line":444,"column":22},"end":{"line":444,"column":60}},"189":{"start":{"line":447,"column":2},"end":{"line":447,"column":72}},"190":{"start":{"line":447,"column":26},"end":{"line":447,"column":72}},"191":{"start":{"line":450,"column":2},"end":{"line":450,"column":54}},"192":{"start":{"line":450,"column":20},"end":{"line":450,"column":54}},"193":{"start":{"line":451,"column":2},"end":{"line":451,"column":54}},"194":{"start":{"line":451,"column":20},"end":{"line":451,"column":54}},"195":{"start":{"line":454,"column":2},"end":{"line":454,"column":48}},"196":{"start":{"line":454,"column":18},"end":{"line":454,"column":48}},"197":{"start":{"line":457,"column":2},"end":{"line":457,"column":54}},"198":{"start":{"line":457,"column":20},"end":{"line":457,"column":54}},"199":{"start":{"line":461,"column":2},"end":{"line":465,"column":3}},"200":{"start":{"line":462,"column":4},"end":{"line":464,"column":5}},"201":{"start":{"line":468,"column":2},"end":{"line":468,"column":60}},"202":{"start":{"line":468,"column":22},"end":{"line":468,"column":60}},"203":{"start":{"line":471,"column":2},"end":{"line":472,"column":41}},"204":{"start":{"line":473,"column":2},"end":{"line":474,"column":38}},"205":{"start":{"line":477,"column":2},"end":{"line":484,"column":3}},"206":{"start":{"line":480,"column":4},"end":{"line":483,"column":6}},"207":{"start":{"line":487,"column":2},"end":{"line":491,"column":5}},"208":{"start":{"line":494,"column":2},"end":{"line":494,"column":43}},"209":{"start":{"line":497,"column":2},"end":{"line":497,"column":15}},"210":{"start":{"line":502,"column":0},"end":{"line":547,"column":1}},"211":{"start":{"line":504,"column":2},"end":{"line":504,"column":25}},"212":{"start":{"line":506,"column":2},"end":{"line":506,"column":55}},"213":{"start":{"line":509,"column":2},"end":{"line":509,"column":20}},"214":{"start":{"line":510,"column":2},"end":{"line":512,"column":3}},"215":{"start":{"line":511,"column":4},"end":{"line":511,"column":31}},"216":{"start":{"line":515,"column":2},"end":{"line":515,"column":29}},"217":{"start":{"line":518,"column":2},"end":{"line":519,"column":41}},"218":{"start":{"line":522,"column":2},"end":{"line":523,"column":38}},"219":{"start":{"line":526,"column":2},"end":{"line":533,"column":3}},"220":{"start":{"line":529,"column":4},"end":{"line":532,"column":6}},"221":{"start":{"line":536,"column":2},"end":{"line":540,"column":5}},"222":{"start":{"line":543,"column":2},"end":{"line":543,"column":43}},"223":{"start":{"line":546,"column":2},"end":{"line":546,"column":15}},"224":{"start":{"line":549,"column":0},"end":{"line":549,"column":30}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"3":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":14},"end":{"line":23,"column":21}},{"start":{"line":23,"column":25},"end":{"line":23,"column":27}}]},"4":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":54},"end":{"line":30,"column":69}},{"start":{"line":30,"column":72},"end":{"line":30,"column":76}}]},"5":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"6":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":5},"end":{"line":40,"column":17}},{"start":{"line":40,"column":21},"end":{"line":40,"column":57}}]},"7":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"8":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":6},"end":{"line":47,"column":6}},{"start":{"line":47,"column":6},"end":{"line":47,"column":6}}]},"9":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"10":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"11":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"12":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":2},"end":{"line":65,"column":2}},{"start":{"line":65,"column":2},"end":{"line":65,"column":2}}]},"13":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":2}},{"start":{"line":67,"column":2},"end":{"line":67,"column":2}}]},"14":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":4},"end":{"line":117,"column":4}},{"start":{"line":117,"column":4},"end":{"line":117,"column":4}}]},"15":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":6},"end":{"line":118,"column":6}},{"start":{"line":118,"column":6},"end":{"line":118,"column":6}}]},"16":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":4},"end":{"line":125,"column":4}},{"start":{"line":125,"column":4},"end":{"line":125,"column":4}}]},"17":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":6},"end":{"line":126,"column":6}},{"start":{"line":126,"column":6},"end":{"line":126,"column":6}}]},"18":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":4},"end":{"line":130,"column":4}},{"start":{"line":130,"column":4},"end":{"line":130,"column":4}}]},"19":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":7},"end":{"line":130,"column":34}},{"start":{"line":130,"column":38},"end":{"line":130,"column":61}}]},"20":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":6},"end":{"line":131,"column":6}},{"start":{"line":131,"column":6},"end":{"line":131,"column":6}}]},"21":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":136,"column":4}},{"start":{"line":136,"column":4},"end":{"line":136,"column":4}}]},"22":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":2},"end":{"line":142,"column":2}},{"start":{"line":142,"column":2},"end":{"line":142,"column":2}}]},"23":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":5},"end":{"line":142,"column":9}},{"start":{"line":142,"column":13},"end":{"line":142,"column":31}}]},"24":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":12},"end":{"line":150,"column":19}},{"start":{"line":150,"column":23},"end":{"line":150,"column":25}}]},"25":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":2},"end":{"line":163,"column":2}},{"start":{"line":163,"column":2},"end":{"line":163,"column":2}}]},"26":{"line":163,"type":"binary-expr","locations":[{"start":{"line":163,"column":5},"end":{"line":163,"column":29}},{"start":{"line":164,"column":7},"end":{"line":164,"column":56}}]},"27":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":4},"end":{"line":179,"column":4}},{"start":{"line":179,"column":4},"end":{"line":179,"column":4}}]},"28":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":4},"end":{"line":184,"column":4}},{"start":{"line":184,"column":4},"end":{"line":184,"column":4}}]},"29":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":4},"end":{"line":189,"column":4}},{"start":{"line":189,"column":4},"end":{"line":189,"column":4}}]},"30":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":4},"end":{"line":196,"column":4}},{"start":{"line":196,"column":4},"end":{"line":196,"column":4}}]},"31":{"line":201,"type":"cond-expr","locations":[{"start":{"line":202,"column":8},"end":{"line":202,"column":49}},{"start":{"line":203,"column":8},"end":{"line":203,"column":32}}]},"32":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":2},"end":{"line":217,"column":2}},{"start":{"line":217,"column":2},"end":{"line":217,"column":2}}]},"33":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":2},"end":{"line":225,"column":2}},{"start":{"line":225,"column":2},"end":{"line":225,"column":2}}]},"34":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":2},"end":{"line":229,"column":2}},{"start":{"line":229,"column":2},"end":{"line":229,"column":2}}]},"35":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":2},"end":{"line":233,"column":2}},{"start":{"line":233,"column":2},"end":{"line":233,"column":2}}]},"36":{"line":242,"type":"binary-expr","locations":[{"start":{"line":242,"column":12},"end":{"line":242,"column":19}},{"start":{"line":242,"column":23},"end":{"line":242,"column":25}}]},"37":{"line":244,"type":"cond-expr","locations":[{"start":{"line":244,"column":78},"end":{"line":244,"column":105}},{"start":{"line":244,"column":108},"end":{"line":244,"column":112}}]},"38":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":2},"end":{"line":247,"column":2}},{"start":{"line":247,"column":2},"end":{"line":247,"column":2}}]},"39":{"line":247,"type":"binary-expr","locations":[{"start":{"line":247,"column":5},"end":{"line":247,"column":13}},{"start":{"line":247,"column":17},"end":{"line":247,"column":36}}]},"40":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":9},"end":{"line":256,"column":9}},{"start":{"line":256,"column":9},"end":{"line":256,"column":9}}]},"41":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":9},"end":{"line":258,"column":9}},{"start":{"line":258,"column":9},"end":{"line":258,"column":9}}]},"42":{"line":324,"type":"binary-expr","locations":[{"start":{"line":324,"column":12},"end":{"line":324,"column":19}},{"start":{"line":324,"column":23},"end":{"line":324,"column":25}}]},"43":{"line":328,"type":"binary-expr","locations":[{"start":{"line":328,"column":26},"end":{"line":328,"column":39}},{"start":{"line":328,"column":43},"end":{"line":328,"column":64}}]},"44":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":2},"end":{"line":341,"column":2}},{"start":{"line":341,"column":2},"end":{"line":341,"column":2}}]},"45":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":4},"end":{"line":343,"column":4}},{"start":{"line":343,"column":4},"end":{"line":343,"column":4}}]},"46":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":2},"end":{"line":354,"column":2}},{"start":{"line":354,"column":2},"end":{"line":354,"column":2}}]},"47":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":4},"end":{"line":357,"column":4}},{"start":{"line":357,"column":4},"end":{"line":357,"column":4}}]},"48":{"line":357,"type":"binary-expr","locations":[{"start":{"line":357,"column":7},"end":{"line":357,"column":27}},{"start":{"line":357,"column":31},"end":{"line":357,"column":59}}]},"49":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":6},"end":{"line":360,"column":6}},{"start":{"line":360,"column":6},"end":{"line":360,"column":6}}]},"50":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":13},"end":{"line":362,"column":13}},{"start":{"line":362,"column":13},"end":{"line":362,"column":13}}]},"51":{"line":372,"type":"if","locations":[{"start":{"line":372,"column":8},"end":{"line":372,"column":8}},{"start":{"line":372,"column":8},"end":{"line":372,"column":8}}]},"52":{"line":374,"type":"if","locations":[{"start":{"line":374,"column":15},"end":{"line":374,"column":15}},{"start":{"line":374,"column":15},"end":{"line":374,"column":15}}]},"53":{"line":387,"type":"if","locations":[{"start":{"line":387,"column":2},"end":{"line":387,"column":2}},{"start":{"line":387,"column":2},"end":{"line":387,"column":2}}]},"54":{"line":389,"type":"if","locations":[{"start":{"line":389,"column":2},"end":{"line":389,"column":2}},{"start":{"line":389,"column":2},"end":{"line":389,"column":2}}]},"55":{"line":391,"type":"if","locations":[{"start":{"line":391,"column":2},"end":{"line":391,"column":2}},{"start":{"line":391,"column":2},"end":{"line":391,"column":2}}]},"56":{"line":393,"type":"if","locations":[{"start":{"line":393,"column":2},"end":{"line":393,"column":2}},{"start":{"line":393,"column":2},"end":{"line":393,"column":2}}]},"57":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":2},"end":{"line":395,"column":2}},{"start":{"line":395,"column":2},"end":{"line":395,"column":2}}]},"58":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":2},"end":{"line":398,"column":2}},{"start":{"line":398,"column":2},"end":{"line":398,"column":2}}]},"59":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":2},"end":{"line":404,"column":2}},{"start":{"line":404,"column":2},"end":{"line":404,"column":2}}]},"60":{"line":405,"type":"if","locations":[{"start":{"line":405,"column":4},"end":{"line":405,"column":4}},{"start":{"line":405,"column":4},"end":{"line":405,"column":4}}]},"61":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":6},"end":{"line":406,"column":6}},{"start":{"line":406,"column":6},"end":{"line":406,"column":6}}]},"62":{"line":406,"type":"binary-expr","locations":[{"start":{"line":406,"column":10},"end":{"line":406,"column":24}},{"start":{"line":406,"column":28},"end":{"line":406,"column":73}}]},"63":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":2},"end":{"line":417,"column":2}},{"start":{"line":417,"column":2},"end":{"line":417,"column":2}}]},"64":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":2},"end":{"line":420,"column":2}},{"start":{"line":420,"column":2},"end":{"line":420,"column":2}}]},"65":{"line":423,"type":"if","locations":[{"start":{"line":423,"column":2},"end":{"line":423,"column":2}},{"start":{"line":423,"column":2},"end":{"line":423,"column":2}}]},"66":{"line":426,"type":"if","locations":[{"start":{"line":426,"column":2},"end":{"line":426,"column":2}},{"start":{"line":426,"column":2},"end":{"line":426,"column":2}}]},"67":{"line":429,"type":"if","locations":[{"start":{"line":429,"column":2},"end":{"line":429,"column":2}},{"start":{"line":429,"column":2},"end":{"line":429,"column":2}}]},"68":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":2},"end":{"line":432,"column":2}},{"start":{"line":432,"column":2},"end":{"line":432,"column":2}}]},"69":{"line":435,"type":"if","locations":[{"start":{"line":435,"column":2},"end":{"line":435,"column":2}},{"start":{"line":435,"column":2},"end":{"line":435,"column":2}}]},"70":{"line":438,"type":"if","locations":[{"start":{"line":438,"column":2},"end":{"line":438,"column":2}},{"start":{"line":438,"column":2},"end":{"line":438,"column":2}}]},"71":{"line":441,"type":"if","locations":[{"start":{"line":441,"column":2},"end":{"line":441,"column":2}},{"start":{"line":441,"column":2},"end":{"line":441,"column":2}}]},"72":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":2},"end":{"line":444,"column":2}},{"start":{"line":444,"column":2},"end":{"line":444,"column":2}}]},"73":{"line":447,"type":"if","locations":[{"start":{"line":447,"column":2},"end":{"line":447,"column":2}},{"start":{"line":447,"column":2},"end":{"line":447,"column":2}}]},"74":{"line":450,"type":"if","locations":[{"start":{"line":450,"column":2},"end":{"line":450,"column":2}},{"start":{"line":450,"column":2},"end":{"line":450,"column":2}}]},"75":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":2},"end":{"line":451,"column":2}},{"start":{"line":451,"column":2},"end":{"line":451,"column":2}}]},"76":{"line":454,"type":"if","locations":[{"start":{"line":454,"column":2},"end":{"line":454,"column":2}},{"start":{"line":454,"column":2},"end":{"line":454,"column":2}}]},"77":{"line":457,"type":"if","locations":[{"start":{"line":457,"column":2},"end":{"line":457,"column":2}},{"start":{"line":457,"column":2},"end":{"line":457,"column":2}}]},"78":{"line":461,"type":"if","locations":[{"start":{"line":461,"column":2},"end":{"line":461,"column":2}},{"start":{"line":461,"column":2},"end":{"line":461,"column":2}}]},"79":{"line":468,"type":"if","locations":[{"start":{"line":468,"column":2},"end":{"line":468,"column":2}},{"start":{"line":468,"column":2},"end":{"line":468,"column":2}}]},"80":{"line":471,"type":"cond-expr","locations":[{"start":{"line":472,"column":6},"end":{"line":472,"column":32}},{"start":{"line":472,"column":35},"end":{"line":472,"column":40}}]},"81":{"line":473,"type":"cond-expr","locations":[{"start":{"line":474,"column":6},"end":{"line":474,"column":29}},{"start":{"line":474,"column":32},"end":{"line":474,"column":37}}]},"82":{"line":477,"type":"if","locations":[{"start":{"line":477,"column":2},"end":{"line":477,"column":2}},{"start":{"line":477,"column":2},"end":{"line":477,"column":2}}]},"83":{"line":477,"type":"binary-expr","locations":[{"start":{"line":477,"column":5},"end":{"line":477,"column":30}},{"start":{"line":478,"column":7},"end":{"line":478,"column":21}},{"start":{"line":479,"column":7},"end":{"line":479,"column":45}}]},"84":{"line":504,"type":"binary-expr","locations":[{"start":{"line":504,"column":12},"end":{"line":504,"column":19}},{"start":{"line":504,"column":23},"end":{"line":504,"column":25}}]},"85":{"line":518,"type":"cond-expr","locations":[{"start":{"line":519,"column":6},"end":{"line":519,"column":32}},{"start":{"line":519,"column":35},"end":{"line":519,"column":40}}]},"86":{"line":522,"type":"cond-expr","locations":[{"start":{"line":523,"column":6},"end":{"line":523,"column":29}},{"start":{"line":523,"column":32},"end":{"line":523,"column":37}}]},"87":{"line":526,"type":"if","locations":[{"start":{"line":526,"column":2},"end":{"line":526,"column":2}},{"start":{"line":526,"column":2},"end":{"line":526,"column":2}}]},"88":{"line":526,"type":"binary-expr","locations":[{"start":{"line":526,"column":5},"end":{"line":526,"column":30}},{"start":{"line":527,"column":7},"end":{"line":527,"column":21}},{"start":{"line":528,"column":7},"end":{"line":528,"column":45}}]}},"code":["\"use strict\";","","var Query = require('../connection/commands').Query","  , retrieveBSON = require('../connection/utils').retrieveBSON","  , f = require('util').format","  , MongoError = require('../error')","  , getReadPreference = require('./shared').getReadPreference;","","var BSON = retrieveBSON(),","  Long = BSON.Long;","","var WireProtocol = function(legacyWireProtocol) {","  this.legacyWireProtocol = legacyWireProtocol;","}","","//","// Execute a write operation","var executeWrite = function(pool, bson, type, opsField, ns, ops, options, callback) {","  if(ops.length == 0) throw new MongoError(\"insert must contain at least one document\");","  if(typeof options == 'function') {","    callback = options;","    options = {};","    options = options || {};","  }","","  // Split the ns up to get db and collection","  var p = ns.split(\".\");","  var d = p.shift();","  // Options","  var ordered = typeof options.ordered == 'boolean' ? options.ordered : true;","  var writeConcern = options.writeConcern;","","  // return skeleton","  var writeCommand = {};","  writeCommand[type] = p.join('.');","  writeCommand[opsField] = ops;","  writeCommand.ordered = ordered;","","  // Did we specify a write concern","  if(writeConcern && Object.keys(writeConcern).length > 0) {","    writeCommand.writeConcern = writeConcern;","  }","","  // If we have collation passed in","  if(options.collation) {","    for(var i = 0; i < writeCommand[opsField].length; i++) {","      if(!writeCommand[opsField][i].collation) {","        writeCommand[opsField][i].collation = options.collation;","      }","    }","  }","","  // Do we have bypassDocumentValidation set, then enable it on the write command","  if(typeof options.bypassDocumentValidation == 'boolean') {","    writeCommand.bypassDocumentValidation = options.bypassDocumentValidation;","  }","","  // Options object","  var opts = { command: true };","  var queryOptions = { checkKeys : false, numberToSkip: 0, numberToReturn: 1 };","  if(type == 'insert') queryOptions.checkKeys = true;","  if(typeof options.checkKeys == 'boolean') queryOptions.checkKeys = options.checkKeys;","","  // Ensure we support serialization of functions","  if(options.serializeFunctions) queryOptions.serializeFunctions = options.serializeFunctions;","  // Do not serialize the undefined fields","  if(options.ignoreUndefined) queryOptions.ignoreUndefined = options.ignoreUndefined;","","  try {","    // Create write command","    var cmd = new Query(bson, f(\"%s.$cmd\", d), writeCommand, queryOptions);","    // Execute command","    pool.write(cmd, opts, callback);","  } catch(err) {","    callback(err);","  }","}","","//","// Needs to support legacy mass insert as well as ordered/unordered legacy","// emulation","//","WireProtocol.prototype.insert = function(pool, ismaster, ns, bson, ops, options, callback) {","  executeWrite(pool, bson, 'insert', 'documents', ns, ops, options, callback);","}","","WireProtocol.prototype.update = function(pool, ismaster, ns, bson, ops, options, callback) {","  executeWrite(pool, bson, 'update', 'updates', ns, ops, options, callback);","}","","WireProtocol.prototype.remove = function(pool, ismaster, ns, bson, ops, options, callback) {","  executeWrite(pool, bson, 'delete', 'deletes', ns, ops, options, callback);","}","","WireProtocol.prototype.killCursor = function(bson, ns, cursorId, pool, callback) {","  // Build command namespace","  var parts = ns.split(/\\./);","  // Command namespace","  var commandns = f('%s.$cmd', parts.shift());","  // Create getMore command","  var killcursorCmd = {","    killCursors: parts.join('.'),","    cursors: [cursorId]","  }","","  // Build Query object","  var query = new Query(bson, commandns, killcursorCmd, {","      numberToSkip: 0, numberToReturn: -1","    , checkKeys: false, returnFieldSelector: null","  });","","  // Set query flags","  query.slaveOk = true;","","  // Kill cursor callback","  var killCursorCallback = function(err, result) {","    if(err) {","      if(typeof callback != 'function') return;","      return callback(err);","    }","","    // Result","    var r = result.message;","    // If we have a timed out query or a cursor that was killed","    if((r.responseFlags & (1 << 0)) != 0) {","      if(typeof callback != 'function') return;","      return callback(new MongoError(\"cursor killed or timed out\"), null);","    }","","    if(!Array.isArray(r.documents) || r.documents.length == 0) {","      if(typeof callback != 'function') return;","      return callback(new MongoError(f('invalid killCursors result returned for cursor id %s', cursorId)));","    }","","    // Return the result","    if(typeof callback == 'function') {","      callback(null, r.documents[0]);","    }","  }","","  // Execute the kill cursor command","  if(pool && pool.isConnected()) {","    pool.write(query, {","      command: true","    }, killCursorCallback);","  }","}","","WireProtocol.prototype.getMore = function(bson, ns, cursorState, batchSize, raw, connection, options, callback) {","  options = options || {};","  // Build command namespace","  var parts = ns.split(/\\./);","  // Command namespace","  var commandns = f('%s.$cmd', parts.shift());","","  // Create getMore command","  var getMoreCmd = {","    getMore: cursorState.cursorId,","    collection: parts.join('.'),","    batchSize: Math.abs(batchSize)","  }","","  if(cursorState.cmd.tailable","    && typeof cursorState.cmd.maxAwaitTimeMS == 'number') {","    getMoreCmd.maxTimeMS = cursorState.cmd.maxAwaitTimeMS;","  }","","  // Build Query object","  var query = new Query(bson, commandns, getMoreCmd, {","      numberToSkip: 0, numberToReturn: -1","    , checkKeys: false, returnFieldSelector: null","  });","","  // Set query flags","  query.slaveOk = true;","","  // Query callback","  var queryCallback = function(err, result) {","    if(err) return callback(err);","    // Get the raw message","    var r = result.message;","","    // If we have a timed out query or a cursor that was killed","    if((r.responseFlags & (1 << 0)) != 0) {","      return callback(new MongoError(\"cursor killed or timed out\"), null);","    }","","    // Raw, return all the extracted documents","    if(raw) {","      cursorState.documents = r.documents;","      cursorState.cursorId = r.cursorId;","      return callback(null, r.documents);","    }","","    // We have an error detected","    if(r.documents[0].ok == 0) {","      return callback(MongoError.create(r.documents[0]));","    }","","    // Ensure we have a Long valid cursor id","    var cursorId = typeof r.documents[0].cursor.id == 'number'","      ? Long.fromNumber(r.documents[0].cursor.id)","      : r.documents[0].cursor.id;","","    // Set all the values","    cursorState.documents = r.documents[0].cursor.nextBatch;","    cursorState.cursorId = cursorId;","","    // Return the result","    callback(null, r.documents[0], r.connection);","  }","","  // Query options","  var queryOptions = { command: true };","","  // If we have a raw query decorate the function","  if(raw) {","    queryOptions.raw = raw;","  }","","  // Add the result field needed","  queryOptions.documentsReturnedIn = 'nextBatch';","","  // Check if we need to promote longs","  if(typeof cursorState.promoteLongs == 'boolean') {","    queryOptions.promoteLongs = cursorState.promoteLongs;","  }","","  if(typeof cursorState.promoteValues == 'boolean') {","    queryOptions.promoteValues = cursorState.promoteValues;","  }","","  if(typeof cursorState.promoteBuffers == 'boolean') {","    queryOptions.promoteBuffers = cursorState.promoteBuffers;","  }","","  // Write out the getMore command","  connection.write(query, queryOptions, queryCallback);","}","","WireProtocol.prototype.command = function(bson, ns, cmd, cursorState, topology, options) {","  options = options || {}","  // Check if this is a wire protocol command or not","  var wireProtocolCommand = typeof options.wireProtocolCommand == 'boolean' ? options.wireProtocolCommand : true;","","  // Establish type of command","  if(cmd.find && wireProtocolCommand) {","    // Create the find command","    var query = executeFindCommand(bson, ns, cmd, cursorState, topology, options)","    // Mark the cmd as virtual","    cmd.virtual = false;","    // Signal the documents are in the firstBatch value","    query.documentsReturnedIn = 'firstBatch';","    // Return the query","    return query;","  } else if(cursorState.cursorId != null) {","    return;","  } else if(cmd) {","    return setupCommand(bson, ns, cmd, cursorState, topology, options);","  } else {","    throw new MongoError(f(\"command %s does not return a cursor\", JSON.stringify(cmd)));","  }","}","","// // Command","// {","//     find: ns","//   , query: <object>","//   , limit: <n>","//   , fields: <object>","//   , skip: <n>","//   , hint: <string>","//   , explain: <boolean>","//   , snapshot: <boolean>","//   , batchSize: <n>","//   , returnKey: <boolean>","//   , maxScan: <n>","//   , min: <n>","//   , max: <n>","//   , showDiskLoc: <boolean>","//   , comment: <string>","//   , maxTimeMS: <n>","//   , raw: <boolean>","//   , readPreference: <ReadPreference>","//   , tailable: <boolean>","//   , oplogReplay: <boolean>","//   , noCursorTimeout: <boolean>","//   , awaitdata: <boolean>","//   , exhaust: <boolean>","//   , partial: <boolean>","// }","","// FIND/GETMORE SPEC","// {","//     “find”: <string>,","//     “filter”: { ... },","//     “sort”: { ... },","//     “projection”: { ... },","//     “hint”: { ... },","//     “skip”: <int>,","//     “limit”: <int>,","//     “batchSize”: <int>,","//     “singleBatch”: <bool>,","//     “comment”: <string>,","//     “maxScan”: <int>,","//     “maxTimeMS”: <int>,","//     “max”: { ... },","//     “min”: { ... },","//     “returnKey”: <bool>,","//     “showRecordId”: <bool>,","//     “snapshot”: <bool>,","//     “tailable”: <bool>,","//     “oplogReplay”: <bool>,","//     “noCursorTimeout”: <bool>,","//     “awaitData”: <bool>,","//     “partial”: <bool>,","//     “$readPreference”: { ... }","// }","","//","// Execute a find command","var executeFindCommand = function(bson, ns, cmd, cursorState, topology, options) {","  // Ensure we have at least some options","  options = options || {};","  // Get the readPreference","  var readPreference = getReadPreference(cmd, options);","  // Set the optional batchSize","  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;","","  // Build command namespace","  var parts = ns.split(/\\./);","  // Command namespace","  var commandns = f('%s.$cmd', parts.shift());","","  // Build actual find command","  var findCmd = {","    find: parts.join('.')","  };","","  // I we provided a filter","  if(cmd.query) {","    // Check if the user is passing in the $query parameter","    if(cmd.query['$query']) {","      findCmd.filter = cmd.query['$query'];","    } else {","      findCmd.filter = cmd.query;","    }","  }","","  // Sort value","  var sortValue = cmd.sort;","","  // Handle issue of sort being an Array","  if(Array.isArray(sortValue)) {","    var sortObject = {};","","    if(sortValue.length > 0 && !Array.isArray(sortValue[0])) {","      var sortDirection = sortValue[1];","      // Translate the sort order text","      if(sortDirection == 'asc') {","        sortDirection = 1;","      } else if(sortDirection == 'desc') {","        sortDirection = -1;","      }","","      // Set the sort order","      sortObject[sortValue[0]] = sortDirection;","    } else {","      for(var i = 0; i < sortValue.length; i++) {","        sortDirection = sortValue[i][1];","        // Translate the sort order text","        if(sortDirection == 'asc') {","          sortDirection = 1;","        } else if(sortDirection == 'desc') {","          sortDirection = -1;","        }","","        // Set the sort order","        sortObject[sortValue[i][0]] = sortDirection;","      }","    }","","    sortValue = sortObject;","  }","","  // Add sort to command","  if(cmd.sort) findCmd.sort = sortValue;","  // Add a projection to the command","  if(cmd.fields) findCmd.projection = cmd.fields;","  // Add a hint to the command","  if(cmd.hint) findCmd.hint = cmd.hint;","  // Add a skip","  if(cmd.skip) findCmd.skip = cmd.skip;","  // Add a limit","  if(cmd.limit) findCmd.limit = cmd.limit;","","  // Check if we wish to have a singleBatch","  if(cmd.limit < 0) {","    findCmd.limit = Math.abs(cmd.limit);","    findCmd.singleBatch = true;","  }","","  // Add a batchSize","  if(typeof cmd.batchSize == 'number') {","    if (cmd.batchSize < 0) {","      if (cmd.limit != 0 && Math.abs(cmd.batchSize) < Math.abs(cmd.limit)) {","        findCmd.limit = Math.abs(cmd.batchSize);","      }","","      findCmd.singleBatch = true;","    }","","    findCmd.batchSize = Math.abs(cmd.batchSize);","  }","","  // If we have comment set","  if(cmd.comment) findCmd.comment = cmd.comment;","","  // If we have maxScan","  if(cmd.maxScan) findCmd.maxScan = cmd.maxScan;","","  // If we have maxTimeMS set","  if(cmd.maxTimeMS) findCmd.maxTimeMS = cmd.maxTimeMS;","","  // If we have min","  if(cmd.min) findCmd.min = cmd.min;","","  // If we have max","  if(cmd.max) findCmd.max = cmd.max;","","  // If we have returnKey set","  if(cmd.returnKey) findCmd.returnKey = cmd.returnKey;","","  // If we have showDiskLoc set","  if(cmd.showDiskLoc) findCmd.showRecordId = cmd.showDiskLoc;","","  // If we have snapshot set","  if(cmd.snapshot) findCmd.snapshot = cmd.snapshot;","","  // If we have tailable set","  if(cmd.tailable) findCmd.tailable = cmd.tailable;","","  // If we have oplogReplay set","  if(cmd.oplogReplay) findCmd.oplogReplay = cmd.oplogReplay;","","  // If we have noCursorTimeout set","  if(cmd.noCursorTimeout) findCmd.noCursorTimeout = cmd.noCursorTimeout;","","  // If we have awaitData set","  if(cmd.awaitData) findCmd.awaitData = cmd.awaitData;","  if(cmd.awaitdata) findCmd.awaitData = cmd.awaitdata;","","  // If we have partial set","  if(cmd.partial) findCmd.partial = cmd.partial;","","  // If we have collation passed in","  if(cmd.collation) findCmd.collation = cmd.collation;","","  // If we have explain, we need to rewrite the find command","  // to wrap it in the explain command","  if(cmd.explain) {","    findCmd = {","      explain: findCmd","    }","  }","","  // Did we provide a readConcern","  if(cmd.readConcern) findCmd.readConcern = cmd.readConcern;","","  // Set up the serialize and ignoreUndefined fields","  var serializeFunctions = typeof options.serializeFunctions == 'boolean'","    ? options.serializeFunctions : false;","  var ignoreUndefined = typeof options.ignoreUndefined == 'boolean'","    ? options.ignoreUndefined : false;","","  // We have a Mongos topology, check if we need to add a readPreference","  if(topology.type == 'mongos'","    && readPreference","    && readPreference.preference != 'primary') {","    findCmd = {","      '$query': findCmd,","      '$readPreference': readPreference.toJSON()","    };","  }","","  // Build Query object","  var query = new Query(bson, commandns, findCmd, {","      numberToSkip: 0, numberToReturn: 1","    , checkKeys: false, returnFieldSelector: null","    , serializeFunctions: serializeFunctions, ignoreUndefined: ignoreUndefined","  });","","  // Set query flags","  query.slaveOk = readPreference.slaveOk();","","  // Return the query","  return query;","}","","//","// Set up a command cursor","var setupCommand = function(bson, ns, cmd, cursorState, topology, options) {","  // Set empty options object","  options = options || {}","  // Get the readPreference","  var readPreference = getReadPreference(cmd, options);","","  // Final query","  var finalCmd = {};","  for(var name in cmd) {","    finalCmd[name] = cmd[name];","  }","","  // Build command namespace","  var parts = ns.split(/\\./);","","  // Serialize functions","  var serializeFunctions = typeof options.serializeFunctions == 'boolean'","    ? options.serializeFunctions : false;","","  // Set up the serialize and ignoreUndefined fields","  var ignoreUndefined = typeof options.ignoreUndefined == 'boolean'","    ? options.ignoreUndefined : false;","","  // We have a Mongos topology, check if we need to add a readPreference","  if(topology.type == 'mongos'","    && readPreference","    && readPreference.preference != 'primary') {","    finalCmd = {","      '$query': finalCmd,","      '$readPreference': readPreference.toJSON()","    };","  }","","  // Build Query object","  var query = new Query(bson, f('%s.$cmd', parts.shift()), finalCmd, {","      numberToSkip: 0, numberToReturn: -1","    , checkKeys: false, serializeFunctions: serializeFunctions","    , ignoreUndefined: ignoreUndefined","  });","","  // Set query flags","  query.slaveOk = readPreference.slaveOk();","","  // Return the query","  return query;","}","","module.exports = WireProtocol;",""],"l":{"3":1,"9":1,"12":1,"13":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"27":0,"28":0,"30":0,"31":0,"34":0,"35":0,"36":0,"37":0,"40":0,"41":0,"45":0,"46":0,"47":0,"48":0,"54":0,"55":0,"59":0,"60":0,"61":0,"62":0,"65":0,"67":0,"69":0,"71":0,"73":0,"75":0,"83":1,"84":0,"87":1,"88":0,"91":1,"92":0,"95":1,"97":0,"99":0,"101":0,"107":0,"113":0,"116":0,"117":0,"118":0,"119":0,"123":0,"125":0,"126":0,"127":0,"130":0,"131":0,"132":0,"136":0,"137":0,"142":0,"143":0,"149":1,"150":0,"152":0,"154":0,"157":0,"163":0,"165":0,"169":0,"175":0,"178":0,"179":0,"181":0,"184":0,"185":0,"189":0,"190":0,"191":0,"192":0,"196":0,"197":0,"201":0,"206":0,"207":0,"210":0,"214":0,"217":0,"218":0,"222":0,"225":0,"226":0,"229":0,"230":0,"233":0,"234":0,"238":0,"241":1,"242":0,"244":0,"247":0,"249":0,"251":0,"253":0,"255":0,"256":0,"257":0,"258":0,"259":0,"261":0,"322":1,"324":0,"326":0,"328":0,"331":0,"333":0,"336":0,"341":0,"343":0,"344":0,"346":0,"351":0,"354":0,"355":0,"357":0,"358":0,"360":0,"361":0,"362":0,"363":0,"367":0,"369":0,"370":0,"372":0,"373":0,"374":0,"375":0,"379":0,"383":0,"387":0,"389":0,"391":0,"393":0,"395":0,"398":0,"399":0,"400":0,"404":0,"405":0,"406":0,"407":0,"410":0,"413":0,"417":0,"420":0,"423":0,"426":0,"429":0,"432":0,"435":0,"438":0,"441":0,"444":0,"447":0,"450":0,"451":0,"454":0,"457":0,"461":0,"462":0,"468":0,"471":0,"473":0,"477":0,"480":0,"487":0,"494":0,"497":0,"502":1,"504":0,"506":0,"509":0,"510":0,"511":0,"515":0,"518":0,"522":0,"526":0,"529":0,"536":0,"543":0,"546":0,"549":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/cursor.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/cursor.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":1,"36":0,"37":1,"38":0,"39":1,"40":0,"41":1,"42":0,"43":1,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":1,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1,"114":0,"115":1,"116":0,"117":1,"118":0,"119":1,"120":0,"121":1,"122":0,"123":1,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":1,"137":0,"138":1,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":1,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":1,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":1,"169":0,"170":0,"171":0,"172":0,"173":1,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":1,"182":0,"183":0,"184":0,"185":0,"186":0,"187":1,"188":0,"189":0,"190":0,"191":0,"192":1,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":1,"266":0,"267":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0,0,0,0,0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0,0,0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0,0],"83":[0,0],"84":[0,0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"fnMap":{"1":{"name":"(anonymous_1)","line":72,"loc":{"start":{"line":72,"column":13},"end":{"line":72,"column":73}}},"2":{"name":"(anonymous_2)","line":143,"loc":{"start":{"line":143,"column":38},"end":{"line":143,"column":54}}},"3":{"name":"(anonymous_3)","line":147,"loc":{"start":{"line":147,"column":35},"end":{"line":147,"column":46}}},"4":{"name":"(anonymous_4)","line":151,"loc":{"start":{"line":151,"column":34},"end":{"line":151,"column":50}}},"5":{"name":"(anonymous_5)","line":155,"loc":{"start":{"line":155,"column":31},"end":{"line":155,"column":42}}},"6":{"name":"(anonymous_6)","line":159,"loc":{"start":{"line":159,"column":33},"end":{"line":159,"column":49}}},"7":{"name":"(anonymous_7)","line":163,"loc":{"start":{"line":163,"column":30},"end":{"line":163,"column":41}}},"8":{"name":"(anonymous_8)","line":169,"loc":{"start":{"line":169,"column":21},"end":{"line":169,"column":53}}},"9":{"name":"(anonymous_9)","line":173,"loc":{"start":{"line":173,"column":21},"end":{"line":173,"column":32}}},"10":{"name":"(anonymous_10)","line":180,"loc":{"start":{"line":180,"column":25},"end":{"line":180,"column":44}}},"11":{"name":"(anonymous_11)","line":189,"loc":{"start":{"line":189,"column":22},"end":{"line":189,"column":39}}},"12":{"name":"(anonymous_12)","line":289,"loc":{"start":{"line":289,"column":28},"end":{"line":289,"column":47}}},"13":{"name":"(anonymous_13)","line":308,"loc":{"start":{"line":308,"column":31},"end":{"line":308,"column":50}}},"14":{"name":"(anonymous_14)","line":332,"loc":{"start":{"line":332,"column":25},"end":{"line":332,"column":36}}},"15":{"name":"(anonymous_15)","line":341,"loc":{"start":{"line":341,"column":26},"end":{"line":341,"column":37}}},"16":{"name":"(anonymous_16)","line":350,"loc":{"start":{"line":350,"column":28},"end":{"line":350,"column":39}}},"17":{"name":"(anonymous_17)","line":359,"loc":{"start":{"line":359,"column":30},"end":{"line":359,"column":41}}},"18":{"name":"(anonymous_18)","line":368,"loc":{"start":{"line":368,"column":33},"end":{"line":368,"column":44}}},"19":{"name":"(anonymous_19)","line":377,"loc":{"start":{"line":377,"column":41},"end":{"line":377,"column":58}}},"20":{"name":"(anonymous_20)","line":410,"loc":{"start":{"line":410,"column":24},"end":{"line":410,"column":43}}},"21":{"name":"(anonymous_21)","line":419,"loc":{"start":{"line":419,"column":26},"end":{"line":419,"column":37}}},"22":{"name":"(anonymous_22)","line":439,"loc":{"start":{"line":439,"column":23},"end":{"line":439,"column":48}}},"23":{"name":"(anonymous_23)","line":456,"loc":{"start":{"line":456,"column":31},"end":{"line":456,"column":56}}},"24":{"name":"(anonymous_24)","line":473,"loc":{"start":{"line":473,"column":28},"end":{"line":473,"column":53}}},"25":{"name":"(anonymous_25)","line":485,"loc":{"start":{"line":485,"column":21},"end":{"line":485,"column":46}}},"26":{"name":"(anonymous_26)","line":500,"loc":{"start":{"line":500,"column":31},"end":{"line":500,"column":56}}},"27":{"name":"(anonymous_27)","line":511,"loc":{"start":{"line":511,"column":24},"end":{"line":511,"column":49}}},"28":{"name":"(anonymous_28)","line":518,"loc":{"start":{"line":518,"column":19},"end":{"line":518,"column":44}}},"29":{"name":"(anonymous_29)","line":584,"loc":{"start":{"line":584,"column":15},"end":{"line":584,"column":29}}},"30":{"name":"(anonymous_30)","line":614,"loc":{"start":{"line":614,"column":20},"end":{"line":614,"column":51}}},"31":{"name":"(anonymous_31)","line":671,"loc":{"start":{"line":671,"column":44},"end":{"line":671,"column":55}}},"32":{"name":"(anonymous_32)","line":691,"loc":{"start":{"line":691,"column":24},"end":{"line":691,"column":43}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":6,"column":31}},"2":{"start":{"line":8,"column":0},"end":{"line":9,"column":19}},"3":{"start":{"line":72,"column":0},"end":{"line":141,"column":1}},"4":{"start":{"line":73,"column":2},"end":{"line":73,"column":26}},"5":{"start":{"line":76,"column":2},"end":{"line":76,"column":19}},"6":{"start":{"line":78,"column":2},"end":{"line":78,"column":21}},"7":{"start":{"line":81,"column":2},"end":{"line":81,"column":53}},"8":{"start":{"line":84,"column":2},"end":{"line":84,"column":19}},"9":{"start":{"line":85,"column":2},"end":{"line":85,"column":15}},"10":{"start":{"line":86,"column":2},"end":{"line":86,"column":17}},"11":{"start":{"line":87,"column":2},"end":{"line":87,"column":25}},"12":{"start":{"line":88,"column":2},"end":{"line":88,"column":27}},"13":{"start":{"line":91,"column":2},"end":{"line":106,"column":3}},"14":{"start":{"line":109,"column":2},"end":{"line":113,"column":3}},"15":{"start":{"line":110,"column":4},"end":{"line":110,"column":65}},"16":{"start":{"line":111,"column":9},"end":{"line":113,"column":3}},"17":{"start":{"line":112,"column":4},"end":{"line":112,"column":57}},"18":{"start":{"line":116,"column":2},"end":{"line":120,"column":3}},"19":{"start":{"line":117,"column":4},"end":{"line":117,"column":67}},"20":{"start":{"line":118,"column":9},"end":{"line":120,"column":3}},"21":{"start":{"line":119,"column":4},"end":{"line":119,"column":59}},"22":{"start":{"line":123,"column":2},"end":{"line":127,"column":3}},"23":{"start":{"line":124,"column":4},"end":{"line":124,"column":69}},"24":{"start":{"line":125,"column":9},"end":{"line":127,"column":3}},"25":{"start":{"line":126,"column":4},"end":{"line":126,"column":61}},"26":{"start":{"line":130,"column":2},"end":{"line":130,"column":50}},"27":{"start":{"line":134,"column":2},"end":{"line":140,"column":3}},"28":{"start":{"line":135,"column":4},"end":{"line":135,"column":53}},"29":{"start":{"line":136,"column":4},"end":{"line":136,"column":62}},"30":{"start":{"line":137,"column":9},"end":{"line":140,"column":3}},"31":{"start":{"line":138,"column":4},"end":{"line":138,"column":36}},"32":{"start":{"line":139,"column":4},"end":{"line":139,"column":40}},"33":{"start":{"line":143,"column":0},"end":{"line":145,"column":1}},"34":{"start":{"line":144,"column":2},"end":{"line":144,"column":37}},"35":{"start":{"line":147,"column":0},"end":{"line":149,"column":1}},"36":{"start":{"line":148,"column":2},"end":{"line":148,"column":36}},"37":{"start":{"line":151,"column":0},"end":{"line":153,"column":1}},"38":{"start":{"line":152,"column":2},"end":{"line":152,"column":33}},"39":{"start":{"line":155,"column":0},"end":{"line":157,"column":1}},"40":{"start":{"line":156,"column":2},"end":{"line":156,"column":32}},"41":{"start":{"line":159,"column":0},"end":{"line":161,"column":1}},"42":{"start":{"line":160,"column":2},"end":{"line":160,"column":32}},"43":{"start":{"line":163,"column":0},"end":{"line":165,"column":1}},"44":{"start":{"line":164,"column":2},"end":{"line":164,"column":31}},"45":{"start":{"line":169,"column":0},"end":{"line":177,"column":1}},"46":{"start":{"line":170,"column":2},"end":{"line":176,"column":3}},"47":{"start":{"line":171,"column":4},"end":{"line":171,"column":26}},"48":{"start":{"line":173,"column":4},"end":{"line":175,"column":7}},"49":{"start":{"line":174,"column":6},"end":{"line":174,"column":16}},"50":{"start":{"line":180,"column":0},"end":{"line":287,"column":1}},"51":{"start":{"line":181,"column":2},"end":{"line":181,"column":18}},"52":{"start":{"line":183,"column":2},"end":{"line":187,"column":3}},"53":{"start":{"line":184,"column":4},"end":{"line":186,"column":37}},"54":{"start":{"line":189,"column":2},"end":{"line":254,"column":3}},"55":{"start":{"line":190,"column":4},"end":{"line":190,"column":33}},"56":{"start":{"line":190,"column":12},"end":{"line":190,"column":33}},"57":{"start":{"line":193,"column":4},"end":{"line":193,"column":27}},"58":{"start":{"line":196,"column":4},"end":{"line":198,"column":5}},"59":{"start":{"line":197,"column":6},"end":{"line":197,"column":68}},"60":{"start":{"line":201,"column":4},"end":{"line":240,"column":5}},"61":{"start":{"line":210,"column":6},"end":{"line":213,"column":7}},"62":{"start":{"line":212,"column":8},"end":{"line":212,"column":70}},"63":{"start":{"line":216,"column":6},"end":{"line":233,"column":7}},"64":{"start":{"line":218,"column":10},"end":{"line":218,"column":49}},"65":{"start":{"line":220,"column":10},"end":{"line":222,"column":11}},"66":{"start":{"line":221,"column":12},"end":{"line":221,"column":52}},"67":{"start":{"line":224,"column":10},"end":{"line":224,"column":87}},"68":{"start":{"line":225,"column":10},"end":{"line":225,"column":68}},"69":{"start":{"line":227,"column":10},"end":{"line":229,"column":11}},"70":{"start":{"line":228,"column":12},"end":{"line":228,"column":79}},"71":{"start":{"line":232,"column":10},"end":{"line":232,"column":38}},"72":{"start":{"line":235,"column":6},"end":{"line":239,"column":7}},"73":{"start":{"line":236,"column":8},"end":{"line":236,"column":64}},"74":{"start":{"line":237,"column":8},"end":{"line":237,"column":46}},"75":{"start":{"line":238,"column":8},"end":{"line":238,"column":36}},"76":{"start":{"line":243,"column":4},"end":{"line":243,"column":48}},"77":{"start":{"line":244,"column":4},"end":{"line":244,"column":50}},"78":{"start":{"line":245,"column":4},"end":{"line":245,"column":52}},"79":{"start":{"line":248,"column":4},"end":{"line":250,"column":5}},"80":{"start":{"line":249,"column":6},"end":{"line":249,"column":77}},"81":{"start":{"line":253,"column":4},"end":{"line":253,"column":25}},"82":{"start":{"line":257,"column":2},"end":{"line":257,"column":24}},"83":{"start":{"line":260,"column":2},"end":{"line":263,"column":3}},"84":{"start":{"line":262,"column":4},"end":{"line":262,"column":56}},"85":{"start":{"line":266,"column":2},"end":{"line":269,"column":3}},"86":{"start":{"line":268,"column":4},"end":{"line":268,"column":70}},"87":{"start":{"line":272,"column":2},"end":{"line":274,"column":3}},"88":{"start":{"line":273,"column":4},"end":{"line":273,"column":62}},"89":{"start":{"line":277,"column":2},"end":{"line":279,"column":3}},"90":{"start":{"line":278,"column":4},"end":{"line":278,"column":64}},"91":{"start":{"line":282,"column":2},"end":{"line":284,"column":3}},"92":{"start":{"line":283,"column":4},"end":{"line":283,"column":66}},"93":{"start":{"line":286,"column":2},"end":{"line":286,"column":68}},"94":{"start":{"line":289,"column":0},"end":{"line":306,"column":1}},"95":{"start":{"line":290,"column":2},"end":{"line":290,"column":116}},"96":{"start":{"line":290,"column":28},"end":{"line":290,"column":116}},"97":{"start":{"line":292,"column":2},"end":{"line":292,"column":45}},"98":{"start":{"line":295,"column":2},"end":{"line":295,"column":45}},"99":{"start":{"line":296,"column":2},"end":{"line":299,"column":3}},"100":{"start":{"line":298,"column":4},"end":{"line":298,"column":71}},"101":{"start":{"line":302,"column":2},"end":{"line":302,"column":32}},"102":{"start":{"line":305,"column":2},"end":{"line":305,"column":126}},"103":{"start":{"line":308,"column":0},"end":{"line":325,"column":1}},"104":{"start":{"line":310,"column":2},"end":{"line":310,"column":31}},"105":{"start":{"line":311,"column":2},"end":{"line":311,"column":33}},"106":{"start":{"line":313,"column":2},"end":{"line":313,"column":34}},"107":{"start":{"line":316,"column":2},"end":{"line":319,"column":3}},"108":{"start":{"line":317,"column":4},"end":{"line":317,"column":38}},"109":{"start":{"line":317,"column":17},"end":{"line":317,"column":38}},"110":{"start":{"line":318,"column":4},"end":{"line":318,"column":11}},"111":{"start":{"line":322,"column":2},"end":{"line":322,"column":32}},"112":{"start":{"line":324,"column":2},"end":{"line":324,"column":108}},"113":{"start":{"line":332,"column":0},"end":{"line":334,"column":1}},"114":{"start":{"line":333,"column":2},"end":{"line":333,"column":63}},"115":{"start":{"line":341,"column":0},"end":{"line":343,"column":1}},"116":{"start":{"line":342,"column":2},"end":{"line":342,"column":39}},"117":{"start":{"line":350,"column":0},"end":{"line":352,"column":1}},"118":{"start":{"line":351,"column":2},"end":{"line":351,"column":41}},"119":{"start":{"line":359,"column":0},"end":{"line":361,"column":1}},"120":{"start":{"line":360,"column":2},"end":{"line":360,"column":43}},"121":{"start":{"line":368,"column":0},"end":{"line":370,"column":1}},"122":{"start":{"line":369,"column":2},"end":{"line":369,"column":74}},"123":{"start":{"line":377,"column":0},"end":{"line":403,"column":1}},"124":{"start":{"line":378,"column":2},"end":{"line":378,"column":95}},"125":{"start":{"line":379,"column":2},"end":{"line":379,"column":79}},"126":{"start":{"line":380,"column":2},"end":{"line":380,"column":119}},"127":{"start":{"line":383,"column":2},"end":{"line":388,"column":3}},"128":{"start":{"line":385,"column":4},"end":{"line":387,"column":5}},"129":{"start":{"line":386,"column":6},"end":{"line":386,"column":65}},"130":{"start":{"line":392,"column":2},"end":{"line":395,"column":3}},"131":{"start":{"line":393,"column":4},"end":{"line":393,"column":91}},"132":{"start":{"line":394,"column":4},"end":{"line":394,"column":16}},"133":{"start":{"line":398,"column":2},"end":{"line":398,"column":82}},"134":{"start":{"line":399,"column":2},"end":{"line":399,"column":80}},"135":{"start":{"line":402,"column":2},"end":{"line":402,"column":18}},"136":{"start":{"line":410,"column":0},"end":{"line":412,"column":1}},"137":{"start":{"line":411,"column":2},"end":{"line":411,"column":29}},"138":{"start":{"line":419,"column":0},"end":{"line":434,"column":1}},"139":{"start":{"line":420,"column":2},"end":{"line":433,"column":3}},"140":{"start":{"line":421,"column":4},"end":{"line":423,"column":5}},"141":{"start":{"line":422,"column":6},"end":{"line":422,"column":18}},"142":{"start":{"line":425,"column":4},"end":{"line":425,"column":38}},"143":{"start":{"line":426,"column":4},"end":{"line":426,"column":34}},"144":{"start":{"line":427,"column":4},"end":{"line":427,"column":34}},"145":{"start":{"line":428,"column":4},"end":{"line":428,"column":36}},"146":{"start":{"line":429,"column":4},"end":{"line":429,"column":38}},"147":{"start":{"line":430,"column":4},"end":{"line":430,"column":36}},"148":{"start":{"line":431,"column":4},"end":{"line":431,"column":37}},"149":{"start":{"line":432,"column":4},"end":{"line":432,"column":37}},"150":{"start":{"line":439,"column":0},"end":{"line":451,"column":1}},"151":{"start":{"line":440,"column":2},"end":{"line":448,"column":3}},"152":{"start":{"line":442,"column":4},"end":{"line":442,"column":37}},"153":{"start":{"line":443,"column":4},"end":{"line":443,"column":35}},"154":{"start":{"line":444,"column":4},"end":{"line":444,"column":36}},"155":{"start":{"line":445,"column":4},"end":{"line":445,"column":37}},"156":{"start":{"line":446,"column":4},"end":{"line":446,"column":108}},"157":{"start":{"line":447,"column":4},"end":{"line":447,"column":16}},"158":{"start":{"line":450,"column":2},"end":{"line":450,"column":15}},"159":{"start":{"line":456,"column":0},"end":{"line":468,"column":1}},"160":{"start":{"line":458,"column":2},"end":{"line":465,"column":3}},"161":{"start":{"line":459,"column":4},"end":{"line":459,"column":37}},"162":{"start":{"line":460,"column":4},"end":{"line":460,"column":35}},"163":{"start":{"line":461,"column":4},"end":{"line":461,"column":36}},"164":{"start":{"line":462,"column":4},"end":{"line":462,"column":37}},"165":{"start":{"line":463,"column":4},"end":{"line":463,"column":41}},"166":{"start":{"line":464,"column":4},"end":{"line":464,"column":16}},"167":{"start":{"line":467,"column":2},"end":{"line":467,"column":15}},"168":{"start":{"line":473,"column":0},"end":{"line":480,"column":1}},"169":{"start":{"line":474,"column":2},"end":{"line":477,"column":3}},"170":{"start":{"line":475,"column":4},"end":{"line":475,"column":66}},"171":{"start":{"line":476,"column":4},"end":{"line":476,"column":16}},"172":{"start":{"line":479,"column":2},"end":{"line":479,"column":15}},"173":{"start":{"line":485,"column":0},"end":{"line":495,"column":1}},"174":{"start":{"line":486,"column":2},"end":{"line":492,"column":3}},"175":{"start":{"line":487,"column":4},"end":{"line":487,"column":37}},"176":{"start":{"line":488,"column":4},"end":{"line":488,"column":36}},"177":{"start":{"line":489,"column":4},"end":{"line":489,"column":37}},"178":{"start":{"line":490,"column":4},"end":{"line":490,"column":41}},"179":{"start":{"line":491,"column":4},"end":{"line":491,"column":16}},"180":{"start":{"line":494,"column":2},"end":{"line":494,"column":15}},"181":{"start":{"line":500,"column":0},"end":{"line":506,"column":1}},"182":{"start":{"line":501,"column":2},"end":{"line":501,"column":31}},"183":{"start":{"line":502,"column":2},"end":{"line":502,"column":35}},"184":{"start":{"line":503,"column":2},"end":{"line":503,"column":34}},"185":{"start":{"line":504,"column":2},"end":{"line":504,"column":35}},"186":{"start":{"line":505,"column":2},"end":{"line":505,"column":39}},"187":{"start":{"line":511,"column":0},"end":{"line":516,"column":1}},"188":{"start":{"line":512,"column":2},"end":{"line":512,"column":35}},"189":{"start":{"line":513,"column":2},"end":{"line":513,"column":34}},"190":{"start":{"line":514,"column":2},"end":{"line":514,"column":35}},"191":{"start":{"line":515,"column":2},"end":{"line":515,"column":39}},"192":{"start":{"line":518,"column":0},"end":{"line":684,"column":1}},"193":{"start":{"line":520,"column":2},"end":{"line":522,"column":3}},"194":{"start":{"line":521,"column":4},"end":{"line":521,"column":54}},"195":{"start":{"line":525,"column":2},"end":{"line":525,"column":44}},"196":{"start":{"line":525,"column":37},"end":{"line":525,"column":44}},"197":{"start":{"line":528,"column":2},"end":{"line":528,"column":54}},"198":{"start":{"line":528,"column":47},"end":{"line":528,"column":54}},"199":{"start":{"line":531,"column":2},"end":{"line":531,"column":51}},"200":{"start":{"line":531,"column":44},"end":{"line":531,"column":51}},"201":{"start":{"line":534,"column":2},"end":{"line":572,"column":3}},"202":{"start":{"line":537,"column":4},"end":{"line":543,"column":5}},"203":{"start":{"line":538,"column":6},"end":{"line":541,"column":7}},"204":{"start":{"line":540,"column":8},"end":{"line":540,"column":66}},"205":{"start":{"line":542,"column":6},"end":{"line":542,"column":101}},"206":{"start":{"line":545,"column":4},"end":{"line":555,"column":5}},"207":{"start":{"line":546,"column":6},"end":{"line":546,"column":58}},"208":{"start":{"line":549,"column":6},"end":{"line":551,"column":7}},"209":{"start":{"line":550,"column":8},"end":{"line":550,"column":103}},"210":{"start":{"line":554,"column":6},"end":{"line":554,"column":27}},"211":{"start":{"line":558,"column":4},"end":{"line":558,"column":33}},"212":{"start":{"line":561,"column":4},"end":{"line":565,"column":5}},"213":{"start":{"line":564,"column":6},"end":{"line":564,"column":99}},"214":{"start":{"line":567,"column":4},"end":{"line":571,"column":5}},"215":{"start":{"line":568,"column":6},"end":{"line":568,"column":136}},"216":{"start":{"line":570,"column":6},"end":{"line":570,"column":27}},"217":{"start":{"line":575,"column":2},"end":{"line":683,"column":3}},"218":{"start":{"line":578,"column":4},"end":{"line":578,"column":48}},"219":{"start":{"line":578,"column":41},"end":{"line":578,"column":48}},"220":{"start":{"line":581,"column":4},"end":{"line":581,"column":128}},"221":{"start":{"line":581,"column":36},"end":{"line":581,"column":128}},"222":{"start":{"line":584,"column":4},"end":{"line":594,"column":7}},"223":{"start":{"line":585,"column":6},"end":{"line":585,"column":57}},"224":{"start":{"line":585,"column":14},"end":{"line":585,"column":57}},"225":{"start":{"line":587,"column":6},"end":{"line":591,"column":7}},"226":{"start":{"line":590,"column":8},"end":{"line":590,"column":49}},"227":{"start":{"line":593,"column":6},"end":{"line":593,"column":35}},"228":{"start":{"line":595,"column":9},"end":{"line":683,"column":3}},"229":{"start":{"line":597,"column":4},"end":{"line":597,"column":16}},"230":{"start":{"line":599,"column":4},"end":{"line":599,"column":52}},"231":{"start":{"line":600,"column":9},"end":{"line":683,"column":3}},"232":{"start":{"line":603,"column":6},"end":{"line":603,"column":38}},"233":{"start":{"line":604,"column":6},"end":{"line":604,"column":39}},"234":{"start":{"line":607,"column":6},"end":{"line":607,"column":130}},"235":{"start":{"line":607,"column":38},"end":{"line":607,"column":130}},"236":{"start":{"line":611,"column":6},"end":{"line":611,"column":50}},"237":{"start":{"line":611,"column":43},"end":{"line":611,"column":50}},"238":{"start":{"line":614,"column":6},"end":{"line":641,"column":9}},"239":{"start":{"line":615,"column":8},"end":{"line":615,"column":53}},"240":{"start":{"line":615,"column":16},"end":{"line":615,"column":53}},"241":{"start":{"line":618,"column":8},"end":{"line":618,"column":37}},"242":{"start":{"line":623,"column":8},"end":{"line":634,"column":9}},"243":{"start":{"line":626,"column":10},"end":{"line":630,"column":14}},"244":{"start":{"line":631,"column":15},"end":{"line":634,"column":9}},"245":{"start":{"line":633,"column":10},"end":{"line":633,"column":46}},"246":{"start":{"line":636,"column":8},"end":{"line":638,"column":9}},"247":{"start":{"line":637,"column":10},"end":{"line":637,"column":58}},"248":{"start":{"line":640,"column":8},"end":{"line":640,"column":37}},"249":{"start":{"line":642,"column":9},"end":{"line":683,"column":3}},"250":{"start":{"line":644,"column":6},"end":{"line":648,"column":10}},"251":{"start":{"line":649,"column":9},"end":{"line":683,"column":3}},"252":{"start":{"line":651,"column":6},"end":{"line":651,"column":47}},"253":{"start":{"line":653,"column":4},"end":{"line":658,"column":5}},"254":{"start":{"line":655,"column":6},"end":{"line":655,"column":18}},"255":{"start":{"line":657,"column":6},"end":{"line":657,"column":54}},"256":{"start":{"line":661,"column":4},"end":{"line":661,"column":39}},"257":{"start":{"line":664,"column":4},"end":{"line":664,"column":73}},"258":{"start":{"line":667,"column":4},"end":{"line":674,"column":5}},"259":{"start":{"line":669,"column":6},"end":{"line":669,"column":18}},"260":{"start":{"line":671,"column":6},"end":{"line":673,"column":9}},"261":{"start":{"line":672,"column":8},"end":{"line":672,"column":77}},"262":{"start":{"line":677,"column":4},"end":{"line":679,"column":5}},"263":{"start":{"line":678,"column":6},"end":{"line":678,"column":49}},"264":{"start":{"line":682,"column":4},"end":{"line":682,"column":40}},"265":{"start":{"line":691,"column":0},"end":{"line":693,"column":1}},"266":{"start":{"line":692,"column":2},"end":{"line":692,"column":31}},"267":{"start":{"line":695,"column":0},"end":{"line":695,"column":24}}},"branchMap":{"1":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":12},"end":{"line":73,"column":19}},{"start":{"line":73,"column":23},"end":{"line":73,"column":25}}]},"2":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":17},"end":{"line":94,"column":34}},{"start":{"line":94,"column":38},"end":{"line":94,"column":40}}]},"3":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":13},"end":{"line":100,"column":26}},{"start":{"line":100,"column":30},"end":{"line":100,"column":39}},{"start":{"line":100,"column":43},"end":{"line":100,"column":44}}]},"4":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":12},"end":{"line":101,"column":24}},{"start":{"line":101,"column":28},"end":{"line":101,"column":36}},{"start":{"line":101,"column":40},"end":{"line":101,"column":41}}]},"5":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":17},"end":{"line":102,"column":34}},{"start":{"line":102,"column":38},"end":{"line":102,"column":51}},{"start":{"line":102,"column":55},"end":{"line":102,"column":59}}]},"6":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":2},"end":{"line":109,"column":2}},{"start":{"line":109,"column":2},"end":{"line":109,"column":2}}]},"7":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":9},"end":{"line":111,"column":9}},{"start":{"line":111,"column":9},"end":{"line":111,"column":9}}]},"8":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":2},"end":{"line":116,"column":2}},{"start":{"line":116,"column":2},"end":{"line":116,"column":2}}]},"9":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":9},"end":{"line":118,"column":9}},{"start":{"line":118,"column":9},"end":{"line":118,"column":9}}]},"10":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":2},"end":{"line":123,"column":2}},{"start":{"line":123,"column":2},"end":{"line":123,"column":2}}]},"11":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":9},"end":{"line":125,"column":9}},{"start":{"line":125,"column":9},"end":{"line":125,"column":9}}]},"12":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":2},"end":{"line":134,"column":2}},{"start":{"line":134,"column":2},"end":{"line":134,"column":2}}]},"13":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":9},"end":{"line":137,"column":9}},{"start":{"line":137,"column":9},"end":{"line":137,"column":9}}]},"14":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":2},"end":{"line":183,"column":2}},{"start":{"line":183,"column":2},"end":{"line":183,"column":2}}]},"15":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":4},"end":{"line":190,"column":4}},{"start":{"line":190,"column":4},"end":{"line":190,"column":4}}]},"16":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":4},"end":{"line":196,"column":4}},{"start":{"line":196,"column":4},"end":{"line":196,"column":4}}]},"17":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":4},"end":{"line":201,"column":4}},{"start":{"line":201,"column":4},"end":{"line":201,"column":4}}]},"18":{"line":201,"type":"binary-expr","locations":[{"start":{"line":201,"column":7},"end":{"line":201,"column":38}},{"start":{"line":201,"column":42},"end":{"line":201,"column":70}},{"start":{"line":202,"column":10},"end":{"line":202,"column":24}},{"start":{"line":202,"column":29},"end":{"line":202,"column":42}},{"start":{"line":202,"column":46},"end":{"line":202,"column":71}},{"start":{"line":203,"column":10},"end":{"line":203,"column":48}},{"start":{"line":204,"column":11},"end":{"line":204,"column":38}},{"start":{"line":205,"column":11},"end":{"line":205,"column":40}},{"start":{"line":206,"column":11},"end":{"line":206,"column":52}}]},"19":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":6},"end":{"line":210,"column":6}},{"start":{"line":210,"column":6},"end":{"line":210,"column":6}}]},"20":{"line":210,"type":"binary-expr","locations":[{"start":{"line":210,"column":9},"end":{"line":210,"column":36}},{"start":{"line":211,"column":11},"end":{"line":211,"column":40}}]},"21":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":6},"end":{"line":216,"column":6}},{"start":{"line":216,"column":6},"end":{"line":216,"column":6}}]},"22":{"line":216,"type":"binary-expr","locations":[{"start":{"line":216,"column":9},"end":{"line":216,"column":43}},{"start":{"line":217,"column":11},"end":{"line":217,"column":56}}]},"23":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":10},"end":{"line":220,"column":10}},{"start":{"line":220,"column":10},"end":{"line":220,"column":10}}]},"24":{"line":224,"type":"cond-expr","locations":[{"start":{"line":224,"column":62},"end":{"line":224,"column":81}},{"start":{"line":224,"column":84},"end":{"line":224,"column":86}}]},"25":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":10},"end":{"line":227,"column":10}},{"start":{"line":227,"column":10},"end":{"line":227,"column":10}}]},"26":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":6},"end":{"line":235,"column":6}},{"start":{"line":235,"column":6},"end":{"line":235,"column":6}}]},"27":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":4},"end":{"line":248,"column":4}},{"start":{"line":248,"column":4},"end":{"line":248,"column":4}}]},"28":{"line":248,"type":"binary-expr","locations":[{"start":{"line":248,"column":7},"end":{"line":248,"column":34}},{"start":{"line":248,"column":38},"end":{"line":248,"column":92}}]},"29":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":2},"end":{"line":260,"column":2}},{"start":{"line":260,"column":2},"end":{"line":260,"column":2}}]},"30":{"line":260,"type":"binary-expr","locations":[{"start":{"line":260,"column":5},"end":{"line":260,"column":21}},{"start":{"line":260,"column":25},"end":{"line":260,"column":37}}]},"31":{"line":262,"type":"binary-expr","locations":[{"start":{"line":262,"column":23},"end":{"line":262,"column":39}},{"start":{"line":262,"column":43},"end":{"line":262,"column":55}}]},"32":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":2},"end":{"line":266,"column":2}},{"start":{"line":266,"column":2},"end":{"line":266,"column":2}}]},"33":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":2},"end":{"line":272,"column":2}},{"start":{"line":272,"column":2},"end":{"line":272,"column":2}}]},"34":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":2},"end":{"line":277,"column":2}},{"start":{"line":277,"column":2},"end":{"line":277,"column":2}}]},"35":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":2},"end":{"line":282,"column":2}},{"start":{"line":282,"column":2},"end":{"line":282,"column":2}}]},"36":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":2},"end":{"line":290,"column":2}},{"start":{"line":290,"column":2},"end":{"line":290,"column":2}}]},"37":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":28}},{"start":{"line":292,"column":32},"end":{"line":292,"column":44}}]},"38":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":2},"end":{"line":296,"column":2}},{"start":{"line":296,"column":2},"end":{"line":296,"column":2}}]},"39":{"line":296,"type":"binary-expr","locations":[{"start":{"line":296,"column":5},"end":{"line":296,"column":31}},{"start":{"line":297,"column":8},"end":{"line":297,"column":76}}]},"40":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":2},"end":{"line":316,"column":2}},{"start":{"line":316,"column":2},"end":{"line":316,"column":2}}]},"41":{"line":316,"type":"binary-expr","locations":[{"start":{"line":316,"column":5},"end":{"line":316,"column":38}},{"start":{"line":316,"column":42},"end":{"line":316,"column":76}},{"start":{"line":316,"column":80},"end":{"line":316,"column":110}}]},"42":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":4},"end":{"line":317,"column":4}},{"start":{"line":317,"column":4},"end":{"line":317,"column":4}}]},"43":{"line":379,"type":"cond-expr","locations":[{"start":{"line":379,"column":48},"end":{"line":379,"column":54}},{"start":{"line":379,"column":57},"end":{"line":379,"column":78}}]},"44":{"line":383,"type":"if","locations":[{"start":{"line":383,"column":2},"end":{"line":383,"column":2}},{"start":{"line":383,"column":2},"end":{"line":383,"column":2}}]},"45":{"line":383,"type":"binary-expr","locations":[{"start":{"line":383,"column":5},"end":{"line":383,"column":32}},{"start":{"line":383,"column":36},"end":{"line":383,"column":88}}]},"46":{"line":392,"type":"if","locations":[{"start":{"line":392,"column":2},"end":{"line":392,"column":2}},{"start":{"line":392,"column":2},"end":{"line":392,"column":2}}]},"47":{"line":392,"type":"binary-expr","locations":[{"start":{"line":392,"column":5},"end":{"line":392,"column":31}},{"start":{"line":392,"column":35},"end":{"line":392,"column":109}}]},"48":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":2},"end":{"line":420,"column":2}},{"start":{"line":420,"column":2},"end":{"line":420,"column":2}}]},"49":{"line":421,"type":"if","locations":[{"start":{"line":421,"column":4},"end":{"line":421,"column":4}},{"start":{"line":421,"column":4},"end":{"line":421,"column":4}}]},"50":{"line":440,"type":"if","locations":[{"start":{"line":440,"column":2},"end":{"line":440,"column":2}},{"start":{"line":440,"column":2},"end":{"line":440,"column":2}}]},"51":{"line":440,"type":"binary-expr","locations":[{"start":{"line":440,"column":5},"end":{"line":440,"column":14}},{"start":{"line":441,"column":7},"end":{"line":441,"column":30}}]},"52":{"line":458,"type":"if","locations":[{"start":{"line":458,"column":2},"end":{"line":458,"column":2}},{"start":{"line":458,"column":2},"end":{"line":458,"column":2}}]},"53":{"line":458,"type":"binary-expr","locations":[{"start":{"line":458,"column":5},"end":{"line":458,"column":26}},{"start":{"line":458,"column":30},"end":{"line":458,"column":54}}]},"54":{"line":474,"type":"if","locations":[{"start":{"line":474,"column":2},"end":{"line":474,"column":2}},{"start":{"line":474,"column":2},"end":{"line":474,"column":2}}]},"55":{"line":474,"type":"binary-expr","locations":[{"start":{"line":474,"column":5},"end":{"line":474,"column":26}},{"start":{"line":474,"column":30},"end":{"line":474,"column":53}}]},"56":{"line":486,"type":"if","locations":[{"start":{"line":486,"column":2},"end":{"line":486,"column":2}},{"start":{"line":486,"column":2},"end":{"line":486,"column":2}}]},"57":{"line":520,"type":"if","locations":[{"start":{"line":520,"column":2},"end":{"line":520,"column":2}},{"start":{"line":520,"column":2},"end":{"line":520,"column":2}}]},"58":{"line":525,"type":"if","locations":[{"start":{"line":525,"column":2},"end":{"line":525,"column":2}},{"start":{"line":525,"column":2},"end":{"line":525,"column":2}}]},"59":{"line":528,"type":"if","locations":[{"start":{"line":528,"column":2},"end":{"line":528,"column":2}},{"start":{"line":528,"column":2},"end":{"line":528,"column":2}}]},"60":{"line":531,"type":"if","locations":[{"start":{"line":531,"column":2},"end":{"line":531,"column":2}},{"start":{"line":531,"column":2},"end":{"line":531,"column":2}}]},"61":{"line":534,"type":"if","locations":[{"start":{"line":534,"column":2},"end":{"line":534,"column":2}},{"start":{"line":534,"column":2},"end":{"line":534,"column":2}}]},"62":{"line":537,"type":"if","locations":[{"start":{"line":537,"column":4},"end":{"line":537,"column":4}},{"start":{"line":537,"column":4},"end":{"line":537,"column":4}}]},"63":{"line":537,"type":"binary-expr","locations":[{"start":{"line":537,"column":7},"end":{"line":537,"column":47}},{"start":{"line":537,"column":51},"end":{"line":537,"column":81}}]},"64":{"line":538,"type":"if","locations":[{"start":{"line":538,"column":6},"end":{"line":538,"column":6}},{"start":{"line":538,"column":6},"end":{"line":538,"column":6}}]},"65":{"line":549,"type":"if","locations":[{"start":{"line":549,"column":6},"end":{"line":549,"column":6}},{"start":{"line":549,"column":6},"end":{"line":549,"column":6}}]},"66":{"line":561,"type":"if","locations":[{"start":{"line":561,"column":4},"end":{"line":561,"column":4}},{"start":{"line":561,"column":4},"end":{"line":561,"column":4}}]},"67":{"line":561,"type":"binary-expr","locations":[{"start":{"line":561,"column":7},"end":{"line":561,"column":15}},{"start":{"line":562,"column":9},"end":{"line":562,"column":27}},{"start":{"line":563,"column":9},"end":{"line":563,"column":48}}]},"68":{"line":575,"type":"if","locations":[{"start":{"line":575,"column":2},"end":{"line":575,"column":2}},{"start":{"line":575,"column":2},"end":{"line":575,"column":2}}]},"69":{"line":578,"type":"if","locations":[{"start":{"line":578,"column":4},"end":{"line":578,"column":4}},{"start":{"line":578,"column":4},"end":{"line":578,"column":4}}]},"70":{"line":581,"type":"if","locations":[{"start":{"line":581,"column":4},"end":{"line":581,"column":4}},{"start":{"line":581,"column":4},"end":{"line":581,"column":4}}]},"71":{"line":585,"type":"if","locations":[{"start":{"line":585,"column":6},"end":{"line":585,"column":6}},{"start":{"line":585,"column":6},"end":{"line":585,"column":6}}]},"72":{"line":587,"type":"if","locations":[{"start":{"line":587,"column":6},"end":{"line":587,"column":6}},{"start":{"line":587,"column":6},"end":{"line":587,"column":6}}]},"73":{"line":587,"type":"binary-expr","locations":[{"start":{"line":587,"column":9},"end":{"line":587,"column":47}},{"start":{"line":588,"column":11},"end":{"line":588,"column":36}},{"start":{"line":588,"column":40},"end":{"line":588,"column":74}},{"start":{"line":589,"column":11},"end":{"line":589,"column":29}},{"start":{"line":589,"column":33},"end":{"line":589,"column":52}}]},"74":{"line":595,"type":"if","locations":[{"start":{"line":595,"column":9},"end":{"line":595,"column":9}},{"start":{"line":595,"column":9},"end":{"line":595,"column":9}}]},"75":{"line":595,"type":"binary-expr","locations":[{"start":{"line":595,"column":12},"end":{"line":595,"column":38}},{"start":{"line":595,"column":42},"end":{"line":595,"column":97}}]},"76":{"line":600,"type":"if","locations":[{"start":{"line":600,"column":9},"end":{"line":600,"column":9}},{"start":{"line":600,"column":9},"end":{"line":600,"column":9}}]},"77":{"line":600,"type":"binary-expr","locations":[{"start":{"line":600,"column":12},"end":{"line":600,"column":77}},{"start":{"line":601,"column":9},"end":{"line":601,"column":53}}]},"78":{"line":607,"type":"if","locations":[{"start":{"line":607,"column":6},"end":{"line":607,"column":6}},{"start":{"line":607,"column":6},"end":{"line":607,"column":6}}]},"79":{"line":611,"type":"if","locations":[{"start":{"line":611,"column":6},"end":{"line":611,"column":6}},{"start":{"line":611,"column":6},"end":{"line":611,"column":6}}]},"80":{"line":615,"type":"if","locations":[{"start":{"line":615,"column":8},"end":{"line":615,"column":8}},{"start":{"line":615,"column":8},"end":{"line":615,"column":8}}]},"81":{"line":623,"type":"if","locations":[{"start":{"line":623,"column":8},"end":{"line":623,"column":8}},{"start":{"line":623,"column":8},"end":{"line":623,"column":8}}]},"82":{"line":623,"type":"binary-expr","locations":[{"start":{"line":623,"column":11},"end":{"line":623,"column":49}},{"start":{"line":624,"column":13},"end":{"line":624,"column":30}},{"start":{"line":624,"column":34},"end":{"line":624,"column":77}}]},"83":{"line":631,"type":"if","locations":[{"start":{"line":631,"column":15},"end":{"line":631,"column":15}},{"start":{"line":631,"column":15},"end":{"line":631,"column":15}}]},"84":{"line":631,"type":"binary-expr","locations":[{"start":{"line":631,"column":18},"end":{"line":631,"column":56}},{"start":{"line":632,"column":13},"end":{"line":632,"column":30}},{"start":{"line":632,"column":34},"end":{"line":632,"column":78}}]},"85":{"line":636,"type":"if","locations":[{"start":{"line":636,"column":8},"end":{"line":636,"column":8}},{"start":{"line":636,"column":8},"end":{"line":636,"column":8}}]},"86":{"line":636,"type":"binary-expr","locations":[{"start":{"line":636,"column":11},"end":{"line":636,"column":37}},{"start":{"line":636,"column":41},"end":{"line":636,"column":96}}]},"87":{"line":642,"type":"if","locations":[{"start":{"line":642,"column":9},"end":{"line":642,"column":9}},{"start":{"line":642,"column":9},"end":{"line":642,"column":9}}]},"88":{"line":642,"type":"binary-expr","locations":[{"start":{"line":642,"column":12},"end":{"line":642,"column":77}},{"start":{"line":643,"column":7},"end":{"line":643,"column":24}},{"start":{"line":643,"column":28},"end":{"line":643,"column":71}}]},"89":{"line":649,"type":"if","locations":[{"start":{"line":649,"column":9},"end":{"line":649,"column":9}},{"start":{"line":649,"column":9},"end":{"line":649,"column":9}}]},"90":{"line":649,"type":"binary-expr","locations":[{"start":{"line":649,"column":12},"end":{"line":649,"column":77}},{"start":{"line":650,"column":9},"end":{"line":650,"column":52}}]},"91":{"line":653,"type":"if","locations":[{"start":{"line":653,"column":4},"end":{"line":653,"column":4}},{"start":{"line":653,"column":4},"end":{"line":653,"column":4}}]},"92":{"line":653,"type":"binary-expr","locations":[{"start":{"line":653,"column":7},"end":{"line":653,"column":33}},{"start":{"line":653,"column":37},"end":{"line":653,"column":92}}]},"93":{"line":667,"type":"if","locations":[{"start":{"line":667,"column":4},"end":{"line":667,"column":4}},{"start":{"line":667,"column":4},"end":{"line":667,"column":4}}]},"94":{"line":667,"type":"binary-expr","locations":[{"start":{"line":667,"column":7},"end":{"line":667,"column":11}},{"start":{"line":667,"column":15},"end":{"line":667,"column":23}}]},"95":{"line":672,"type":"cond-expr","locations":[{"start":{"line":672,"column":54},"end":{"line":672,"column":62}},{"start":{"line":672,"column":65},"end":{"line":672,"column":74}}]},"96":{"line":677,"type":"if","locations":[{"start":{"line":677,"column":4},"end":{"line":677,"column":4}},{"start":{"line":677,"column":4},"end":{"line":677,"column":4}}]},"97":{"line":677,"type":"binary-expr","locations":[{"start":{"line":677,"column":7},"end":{"line":677,"column":34}},{"start":{"line":677,"column":38},"end":{"line":677,"column":90}}]}},"code":["\"use strict\";","","var Logger = require('./connection/logger')","  , retrieveBSON = require('./connection/utils').retrieveBSON","  , MongoError = require('./error')","  , f = require('util').format;","","var BSON = retrieveBSON(),","  Long = BSON.Long;","","/**"," * This is a cursor results callback"," *"," * @callback resultCallback"," * @param {error} error An error object. Set to null if no error present"," * @param {object} document"," */","","/**"," * @fileOverview The **Cursor** class is an internal class that embodies a cursor on MongoDB"," * allowing for iteration over the results returned from the underlying query."," *"," * **CURSORS Cannot directly be instantiated**"," * @example"," * var Server = require('mongodb-core').Server"," *   , ReadPreference = require('mongodb-core').ReadPreference"," *   , assert = require('assert');"," *"," * var server = new Server({host: 'localhost', port: 27017});"," * // Wait for the connection event"," * server.on('connect', function(server) {"," *   assert.equal(null, err);"," *"," *   // Execute the write"," *   var cursor = _server.cursor('integration_tests.inserts_example4', {"," *       find: 'integration_tests.example4'"," *     , query: {a:1}"," *   }, {"," *     readPreference: new ReadPreference('secondary');"," *   });"," *"," *   // Get the first document"," *   cursor.next(function(err, doc) {"," *     assert.equal(null, err);"," *     server.destroy();"," *   });"," * });"," *"," * // Start connecting"," * server.connect();"," */","","/**"," * Creates a new Cursor, not to be used directly"," * @class"," * @param {object} bson An instance of the BSON parser"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {{object}|Long} cmd The selector (can be a command or a cursorId)"," * @param {object} [options=null] Optional settings."," * @param {object} [options.batchSize=1000] Batchsize for the operation"," * @param {array} [options.documents=[]] Initial documents list for cursor"," * @param {object} [options.transforms=null] Transform methods for the cursor results"," * @param {function} [options.transforms.query] Transform the value returned from the initial query"," * @param {function} [options.transforms.doc] Transform each document returned from Cursor.prototype.next"," * @param {object} topology The server topology instance."," * @param {object} topologyOptions The server topology options."," * @return {Cursor} A cursor instance"," * @property {number} cursorBatchSize The current cursorBatchSize for the cursor"," * @property {number} cursorLimit The current cursorLimit for the cursor"," * @property {number} cursorSkip The current cursorSkip for the cursor"," */","var Cursor = function(bson, ns, cmd, options, topology, topologyOptions) {","  options = options || {};","","  // Cursor pool","  this.pool = null;","  // Cursor server","  this.server = null;","","  // Do we have a not connected handler","  this.disconnectHandler = options.disconnectHandler;","","  // Set local values","  this.bson = bson;","  this.ns = ns;","  this.cmd = cmd;","  this.options = options;","  this.topology = topology;","","  // All internal state","  this.cursorState = {","      cursorId: null","    , cmd: cmd","    , documents: options.documents || []","    , cursorIndex: 0","    , dead: false","    , killed: false","    , init: false","    , notified: false","    , limit: options.limit || cmd.limit || 0","    , skip: options.skip || cmd.skip || 0","    , batchSize: options.batchSize || cmd.batchSize || 1000","    , currentLimit: 0","    // Result field name if not a cursor (contains the array of results)","    , transforms: options.transforms","  }","","  // Add promoteLong to cursor state","  if(typeof topologyOptions.promoteLongs == 'boolean') {","    this.cursorState.promoteLongs = topologyOptions.promoteLongs;","  } else if(typeof options.promoteLongs == 'boolean') {","    this.cursorState.promoteLongs = options.promoteLongs;","  }","","  // Add promoteValues to cursor state","  if(typeof topologyOptions.promoteValues == 'boolean') {","    this.cursorState.promoteValues = topologyOptions.promoteValues;","  } else if(typeof options.promoteValues == 'boolean') {","    this.cursorState.promoteValues = options.promoteValues;","  }","","  // Add promoteBuffers to cursor state","  if(typeof topologyOptions.promoteBuffers == 'boolean') {","    this.cursorState.promoteBuffers = topologyOptions.promoteBuffers;","  } else if(typeof options.promoteBuffers == 'boolean') {","    this.cursorState.promoteBuffers = options.promoteBuffers;","  }","","  // Logger","  this.logger = Logger('Cursor', topologyOptions);","","  //","  // Did we pass in a cursor id","  if(typeof cmd == 'number') {","    this.cursorState.cursorId = Long.fromNumber(cmd);","    this.cursorState.lastCursorId = this.cursorState.cursorId;","  } else if(cmd instanceof Long) {","    this.cursorState.cursorId = cmd;","    this.cursorState.lastCursorId = cmd;","  }","}","","Cursor.prototype.setCursorBatchSize = function(value) {","  this.cursorState.batchSize = value;","}","","Cursor.prototype.cursorBatchSize = function() {","  return this.cursorState.batchSize;","}","","Cursor.prototype.setCursorLimit = function(value) {","  this.cursorState.limit = value;","}","","Cursor.prototype.cursorLimit = function() {","  return this.cursorState.limit;","}","","Cursor.prototype.setCursorSkip = function(value) {","  this.cursorState.skip = value;","}","","Cursor.prototype.cursorSkip = function() {","  return this.cursorState.skip;","}","","//","// Handle callback (including any exceptions thrown)","var handleCallback = function(callback, err, result) {","  try {","    callback(err, result);","  } catch(err) {","    process.nextTick(function() {","      throw err;","    });","  }","}","","// Internal methods","Cursor.prototype._find = function(callback) {","  var self = this;","","  if(self.logger.isDebug()) {","    self.logger.debug(f('issue initial query [%s] with flags [%s]'","      , JSON.stringify(self.cmd)","      , JSON.stringify(self.query)));","  }","","  var queryCallback = function(err, r) {","    if(err) return callback(err);","","    // Get the raw message","    var result = r.message;","","    // Query failure bit set","    if(result.queryFailure) {","      return callback(MongoError.create(result.documents[0]), null);","    }","","    // Check if we have a command cursor","    if(Array.isArray(result.documents) && result.documents.length == 1","      && (!self.cmd.find || (self.cmd.find && self.cmd.virtual == false))","      && (result.documents[0].cursor != 'string'","        || result.documents[0]['$err']","        || result.documents[0]['errmsg']","        || Array.isArray(result.documents[0].result))","      ) {","","      // We have a an error document return the error","      if(result.documents[0]['$err']","        || result.documents[0]['errmsg']) {","        return callback(MongoError.create(result.documents[0]), null);","      }","","      // We have a cursor document","      if(result.documents[0].cursor != null","        && typeof result.documents[0].cursor != 'string') {","          var id = result.documents[0].cursor.id;","          // If we have a namespace change set the new namespace for getmores","          if(result.documents[0].cursor.ns) {","            self.ns = result.documents[0].cursor.ns;","          }","          // Promote id to long if needed","          self.cursorState.cursorId = typeof id == 'number' ? Long.fromNumber(id) : id;","          self.cursorState.lastCursorId = self.cursorState.cursorId;","          // If we have a firstBatch set it","          if(Array.isArray(result.documents[0].cursor.firstBatch)) {","            self.cursorState.documents = result.documents[0].cursor.firstBatch;//.reverse();","          }","","          // Return after processing command cursor","          return callback(null, null);","      }","","      if(Array.isArray(result.documents[0].result)) {","        self.cursorState.documents = result.documents[0].result;","        self.cursorState.cursorId = Long.ZERO;","        return callback(null, null);","      }","    }","","    // Otherwise fall back to regular find path","    self.cursorState.cursorId = result.cursorId;","    self.cursorState.documents = result.documents;","    self.cursorState.lastCursorId = result.cursorId;","","    // Transform the results with passed in transformation method if provided","    if(self.cursorState.transforms && typeof self.cursorState.transforms.query == 'function') {","      self.cursorState.documents = self.cursorState.transforms.query(result);","    }","","    // Return callback","    callback(null, null);","  }","","  // Options passed to the pool","  var queryOptions = {};","","  // If we have a raw query decorate the function","  if(self.options.raw || self.cmd.raw) {","    // queryCallback.raw = self.options.raw || self.cmd.raw;","    queryOptions.raw = self.options.raw || self.cmd.raw;","  }","","  // Do we have documentsReturnedIn set on the query","  if(typeof self.query.documentsReturnedIn == 'string') {","    // queryCallback.documentsReturnedIn = self.query.documentsReturnedIn;","    queryOptions.documentsReturnedIn = self.query.documentsReturnedIn;","  }","","  // Add promote Long value if defined","  if(typeof self.cursorState.promoteLongs == 'boolean') {","    queryOptions.promoteLongs = self.cursorState.promoteLongs;","  }","","  // Add promote values if defined","  if(typeof self.cursorState.promoteValues == 'boolean') {","    queryOptions.promoteValues = self.cursorState.promoteValues;","  }","","  // Add promote values if defined","  if(typeof self.cursorState.promoteBuffers == 'boolean') {","    queryOptions.promoteBuffers = self.cursorState.promoteBuffers;","  }","  // Write the initial command out","  self.server.s.pool.write(self.query, queryOptions, queryCallback);","}","","Cursor.prototype._getmore = function(callback) {","  if(this.logger.isDebug()) this.logger.debug(f('schedule getMore call for query [%s]', JSON.stringify(this.query)))","  // Determine if it's a raw query","  var raw = this.options.raw || this.cmd.raw;","","  // Set the current batchSize","  var batchSize = this.cursorState.batchSize;","  if(this.cursorState.limit > 0","    && ((this.cursorState.currentLimit + batchSize) > this.cursorState.limit)) {","    batchSize = this.cursorState.limit - this.cursorState.currentLimit;","  }","","  // Default pool","  var pool = this.server.s.pool;","","  // We have a wire protocol handler","  this.server.wireProtocolHandler.getMore(this.bson, this.ns, this.cursorState, batchSize, raw, pool, this.options, callback);","}","","Cursor.prototype._killcursor = function(callback) {","  // Set cursor to dead","  this.cursorState.dead = true;","  this.cursorState.killed = true;","  // Remove documents","  this.cursorState.documents = [];","","  // If no cursor id just return","  if(this.cursorState.cursorId == null || this.cursorState.cursorId.isZero() || this.cursorState.init == false) {","    if(callback) callback(null, null);","    return;","  }","","  // Default pool","  var pool = this.server.s.pool;","  // Execute command","  this.server.wireProtocolHandler.killCursor(this.bson, this.ns, this.cursorState.cursorId, pool, callback);","}","","/**"," * Clone the cursor"," * @method"," * @return {Cursor}"," */","Cursor.prototype.clone = function() {","  return this.topology.cursor(this.ns, this.cmd, this.options);","}","","/**"," * Checks if the cursor is dead"," * @method"," * @return {boolean} A boolean signifying if the cursor is dead or not"," */","Cursor.prototype.isDead = function() {","  return this.cursorState.dead == true;","}","","/**"," * Checks if the cursor was killed by the application"," * @method"," * @return {boolean} A boolean signifying if the cursor was killed by the application"," */","Cursor.prototype.isKilled = function() {","  return this.cursorState.killed == true;","}","","/**"," * Checks if the cursor notified it's caller about it's death"," * @method"," * @return {boolean} A boolean signifying if the cursor notified the callback"," */","Cursor.prototype.isNotified = function() {","  return this.cursorState.notified == true;","}","","/**"," * Returns current buffered documents length"," * @method"," * @return {number} The number of items in the buffered documents"," */","Cursor.prototype.bufferedCount = function() {","  return this.cursorState.documents.length - this.cursorState.cursorIndex;","}","","/**"," * Returns current buffered documents"," * @method"," * @return {Array} An array of buffered documents"," */","Cursor.prototype.readBufferedDocuments = function(number) {","  var unreadDocumentsLength = this.cursorState.documents.length - this.cursorState.cursorIndex;","  var length = number < unreadDocumentsLength ? number : unreadDocumentsLength;","  var elements = this.cursorState.documents.slice(this.cursorState.cursorIndex, this.cursorState.cursorIndex + length);","","  // Transform the doc with passed in transformation method if provided","  if(this.cursorState.transforms && typeof this.cursorState.transforms.doc == 'function') {","    // Transform all the elements","    for(var i = 0; i < elements.length; i++) {","      elements[i] = this.cursorState.transforms.doc(elements[i]);","    }","  }","","  // Ensure we do not return any more documents than the limit imposed","  // Just return the number of elements up to the limit","  if(this.cursorState.limit > 0 && (this.cursorState.currentLimit + elements.length) > this.cursorState.limit) {","    elements = elements.slice(0, (this.cursorState.limit - this.cursorState.currentLimit));","    this.kill();","  }","","  // Adjust current limit","  this.cursorState.currentLimit = this.cursorState.currentLimit + elements.length;","  this.cursorState.cursorIndex = this.cursorState.cursorIndex + elements.length;","","  // Return elements","  return elements;","}","","/**"," * Kill the cursor"," * @method"," * @param {resultCallback} callback A callback function"," */","Cursor.prototype.kill = function(callback) {","  this._killcursor(callback);","}","","/**"," * Resets the cursor"," * @method"," * @return {null}"," */","Cursor.prototype.rewind = function() {","  if(this.cursorState.init) {","    if(!this.cursorState.dead) {","      this.kill();","    }","","    this.cursorState.currentLimit = 0;","    this.cursorState.init = false;","    this.cursorState.dead = false;","    this.cursorState.killed = false;","    this.cursorState.notified = false;","    this.cursorState.documents = [];","    this.cursorState.cursorId = null;","    this.cursorState.cursorIndex = 0;","  }","}","","/**"," * Validate if the pool is dead and return error"," */","var isConnectionDead = function(self, callback) {","  if(self.pool","    && self.pool.isDestroyed()) {","    self.cursorState.notified = true;","    self.cursorState.killed = true;","    self.cursorState.documents = [];","    self.cursorState.cursorIndex = 0;","    callback(MongoError.create(f('connection to host %s:%s was destroyed', self.pool.host, self.pool.port)))","    return true;","  }","","  return false;","}","","/**"," * Validate if the cursor is dead but was not explicitly killed by user"," */","var isCursorDeadButNotkilled = function(self, callback) {","  // Cursor is dead but not marked killed, return null","  if(self.cursorState.dead && !self.cursorState.killed) {","    self.cursorState.notified = true;","    self.cursorState.killed = true;","    self.cursorState.documents = [];","    self.cursorState.cursorIndex = 0;","    handleCallback(callback, null, null);","    return true;","  }","","  return false;","}","","/**"," * Validate if the cursor is dead and was killed by user"," */","var isCursorDeadAndKilled = function(self, callback) {","  if(self.cursorState.dead && self.cursorState.killed) {","    handleCallback(callback, MongoError.create('cursor is dead'));","    return true;","  }","","  return false;","}","","/**"," * Validate if the cursor was killed by the user"," */","var isCursorKilled = function(self, callback) {","  if(self.cursorState.killed) {","    self.cursorState.notified = true;","    self.cursorState.documents = [];","    self.cursorState.cursorIndex = 0;","    handleCallback(callback, null, null);","    return true;","  }","","  return false;","}","","/**"," * Mark cursor as being dead and notified"," */","var setCursorDeadAndNotified = function(self, callback) {","  self.cursorState.dead = true;","  self.cursorState.notified = true;","  self.cursorState.documents = [];","  self.cursorState.cursorIndex = 0;","  handleCallback(callback, null, null);","}","","/**"," * Mark cursor as being notified"," */","var setCursorNotified = function(self, callback) {","  self.cursorState.notified = true;","  self.cursorState.documents = [];","  self.cursorState.cursorIndex = 0;","  handleCallback(callback, null, null);","}","","var nextFunction = function(self, callback) {","  // We have notified about it","  if(self.cursorState.notified) {","    return callback(new Error('cursor is exhausted'));","  }","","  // Cursor is killed return null","  if(isCursorKilled(self, callback)) return;","","  // Cursor is dead but not marked killed, return null","  if(isCursorDeadButNotkilled(self, callback)) return;","","  // We have a dead and killed cursor, attempting to call next should error","  if(isCursorDeadAndKilled(self, callback)) return;","","  // We have just started the cursor","  if(!self.cursorState.init) {","    // Topology is not connected, save the call in the provided store to be","    // Executed at some point when the handler deems it's reconnected","    if(!self.topology.isConnected(self.options) && self.disconnectHandler != null) {","      if (self.topology.isDestroyed()) {","        // Topology was destroyed, so don't try to wait for it to reconnect","        return callback(new MongoError('Topology was destroyed'));","      }","      return self.disconnectHandler.addObjectAndMethod('cursor', self, 'next', [callback], callback);","    }","","    try {","      self.server = self.topology.getServer(self.options);","    } catch(err) {","      // Handle the error and add object to next method call","      if(self.disconnectHandler != null) {","        return self.disconnectHandler.addObjectAndMethod('cursor', self, 'next', [callback], callback);","      }","","      // Otherwise return the error","      return callback(err);","    }","","    // Set as init","    self.cursorState.init = true;","","    // Server does not support server","    if(self.cmd","      && self.cmd.collation","      && self.server.ismaster.maxWireVersion < 5) {","      return callback(new MongoError(f('server %s does not support collation', self.server.name)));","    }","","    try {","      self.query = self.server.wireProtocolHandler.command(self.bson, self.ns, self.cmd, self.cursorState, self.topology, self.options);","    } catch(err) {","      return callback(err);","    }","  }","","  // If we don't have a cursorId execute the first query","  if(self.cursorState.cursorId == null) {","    // Check if pool is dead and return if not possible to","    // execute the query against the db","    if(isConnectionDead(self, callback)) return;","","    // Check if topology is destroyed","    if(self.topology.isDestroyed()) return callback(new MongoError('connection destroyed, not possible to instantiate cursor'));","","    // query, cmd, options, cursorState, callback","    self._find(function(err) {","      if(err) return handleCallback(callback, err, null);","","      if(self.cursorState.documents.length == 0","        && self.cursorState.cursorId && self.cursorState.cursorId.isZero()","        && !self.cmd.tailable && !self.cmd.awaitData) {","        return setCursorNotified(self, callback);","      }","","      nextFunction(self, callback);","    });","  } else if(self.cursorState.limit > 0 && self.cursorState.currentLimit >= self.cursorState.limit) {","    // Ensure we kill the cursor on the server","    self.kill();","    // Set cursor in dead and notified state","    return setCursorDeadAndNotified(self, callback);","  } else if(self.cursorState.cursorIndex == self.cursorState.documents.length","      && !Long.ZERO.equals(self.cursorState.cursorId)) {","      // Ensure an empty cursor state","      self.cursorState.documents = [];","      self.cursorState.cursorIndex = 0;","","      // Check if topology is destroyed","      if(self.topology.isDestroyed()) return callback(new MongoError('connection destroyed, not possible to instantiate cursor'));","","      // Check if connection is dead and return if not possible to","      // execute a getmore on this connection","      if(isConnectionDead(self, callback)) return;","","      // Execute the next get more","      self._getmore(function(err, doc, connection) {","        if(err) return handleCallback(callback, err);","","        // Save the returned connection to ensure all getMore's fire over the same connection","        self.connection = connection;","","        // Tailable cursor getMore result, notify owner about it","        // No attempt is made here to retry, this is left to the user of the","        // core module to handle to keep core simple","        if(self.cursorState.documents.length == 0","          && self.cmd.tailable && Long.ZERO.equals(self.cursorState.cursorId)) {","          // No more documents in the tailed cursor","          return handleCallback(callback, MongoError.create({","              message: 'No more documents in tailed cursor'","            , tailable: self.cmd.tailable","            , awaitData: self.cmd.awaitData","          }));","        } else if(self.cursorState.documents.length == 0","          && self.cmd.tailable && !Long.ZERO.equals(self.cursorState.cursorId)) {","          return nextFunction(self, callback);","        }","","        if(self.cursorState.limit > 0 && self.cursorState.currentLimit >= self.cursorState.limit) {","          return setCursorDeadAndNotified(self, callback);","        }","","        nextFunction(self, callback);","      });","  } else if(self.cursorState.documents.length == self.cursorState.cursorIndex","    && self.cmd.tailable && Long.ZERO.equals(self.cursorState.cursorId)) {","      return handleCallback(callback, MongoError.create({","          message: 'No more documents in tailed cursor'","        , tailable: self.cmd.tailable","        , awaitData: self.cmd.awaitData","      }));","  } else if(self.cursorState.documents.length == self.cursorState.cursorIndex","      && Long.ZERO.equals(self.cursorState.cursorId)) {","      setCursorDeadAndNotified(self, callback);","  } else {","    if(self.cursorState.limit > 0 && self.cursorState.currentLimit >= self.cursorState.limit) {","      // Ensure we kill the cursor on the server","      self.kill();","      // Set cursor in dead and notified state","      return setCursorDeadAndNotified(self, callback);","    }","","    // Increment the current cursor limit","    self.cursorState.currentLimit += 1;","","    // Get the document","    var doc = self.cursorState.documents[self.cursorState.cursorIndex++];","","    // Doc overflow","    if(!doc || doc.$err) {","      // Ensure we kill the cursor on the server","      self.kill();","      // Set cursor in dead and notified state","      return setCursorDeadAndNotified(self, function() {","        handleCallback(callback, new MongoError(doc ? doc.$err : undefined));","      });","    }","","    // Transform the doc with passed in transformation method if provided","    if(self.cursorState.transforms && typeof self.cursorState.transforms.doc == 'function') {","      doc = self.cursorState.transforms.doc(doc);","    }","","    // Return the document","    handleCallback(callback, null, doc);","  }","}","","/**"," * Retrieve the next document from the cursor"," * @method"," * @param {resultCallback} callback A callback function"," */","Cursor.prototype.next = function(callback) {","  nextFunction(this, callback);","}","","module.exports = Cursor;",""],"l":{"3":1,"8":1,"72":1,"73":0,"76":0,"78":0,"81":0,"84":0,"85":0,"86":0,"87":0,"88":0,"91":0,"109":0,"110":0,"111":0,"112":0,"116":0,"117":0,"118":0,"119":0,"123":0,"124":0,"125":0,"126":0,"130":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"143":1,"144":0,"147":1,"148":0,"151":1,"152":0,"155":1,"156":0,"159":1,"160":0,"163":1,"164":0,"169":1,"170":0,"171":0,"173":0,"174":0,"180":1,"181":0,"183":0,"184":0,"189":0,"190":0,"193":0,"196":0,"197":0,"201":0,"210":0,"212":0,"216":0,"218":0,"220":0,"221":0,"224":0,"225":0,"227":0,"228":0,"232":0,"235":0,"236":0,"237":0,"238":0,"243":0,"244":0,"245":0,"248":0,"249":0,"253":0,"257":0,"260":0,"262":0,"266":0,"268":0,"272":0,"273":0,"277":0,"278":0,"282":0,"283":0,"286":0,"289":1,"290":0,"292":0,"295":0,"296":0,"298":0,"302":0,"305":0,"308":1,"310":0,"311":0,"313":0,"316":0,"317":0,"318":0,"322":0,"324":0,"332":1,"333":0,"341":1,"342":0,"350":1,"351":0,"359":1,"360":0,"368":1,"369":0,"377":1,"378":0,"379":0,"380":0,"383":0,"385":0,"386":0,"392":0,"393":0,"394":0,"398":0,"399":0,"402":0,"410":1,"411":0,"419":1,"420":0,"421":0,"422":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"439":1,"440":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"450":0,"456":1,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"467":0,"473":1,"474":0,"475":0,"476":0,"479":0,"485":1,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"494":0,"500":1,"501":0,"502":0,"503":0,"504":0,"505":0,"511":1,"512":0,"513":0,"514":0,"515":0,"518":1,"520":0,"521":0,"525":0,"528":0,"531":0,"534":0,"537":0,"538":0,"540":0,"542":0,"545":0,"546":0,"549":0,"550":0,"554":0,"558":0,"561":0,"564":0,"567":0,"568":0,"570":0,"575":0,"578":0,"581":0,"584":0,"585":0,"587":0,"590":0,"593":0,"595":0,"597":0,"599":0,"600":0,"603":0,"604":0,"607":0,"611":0,"614":0,"615":0,"618":0,"623":0,"626":0,"631":0,"633":0,"636":0,"637":0,"640":0,"642":0,"644":0,"649":0,"651":0,"653":0,"655":0,"657":0,"661":0,"664":0,"667":0,"669":0,"671":0,"672":0,"677":0,"678":0,"682":0,"691":1,"692":0,"695":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/topologies/replset.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/topologies/replset.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":1,"51":12,"52":1,"53":12,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":1,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":1,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":1,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":1,"207":0,"208":0,"209":0,"210":0,"211":1,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":1,"226":0,"227":0,"228":0,"229":0,"230":0,"231":1,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":1,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":1,"289":0,"290":0,"291":1,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":1,"311":0,"312":0,"313":1,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":1,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":1,"338":0,"339":0,"340":0,"341":0,"342":1,"343":0,"344":0,"345":0,"346":1,"347":0,"348":0,"349":0,"350":0,"351":0,"352":1,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":1,"368":0,"369":1,"370":0,"371":0,"372":0,"373":0,"374":0,"375":1,"376":0,"377":0,"378":0,"379":1,"380":0,"381":1,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":1,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":1,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":1,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":1,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":1,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":1,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":1,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":1,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":1,"503":0,"504":0,"505":0,"506":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,12],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0,0,0],"67":[0,0],"68":[0,0,0,0],"69":[0,0],"70":[0,0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0,0,0],"107":[0,0],"108":[0,0],"109":[0,0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0,0],"167":[0,0],"168":[0,0,0],"169":[0,0],"170":[0,0,0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":12,"8":12,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0},"fnMap":{"1":{"name":"stateTransition","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":41}}},"2":{"name":"(anonymous_2)","line":107,"loc":{"start":{"line":107,"column":14},"end":{"line":107,"column":42}}},"3":{"name":"(anonymous_3)","line":116,"loc":{"start":{"line":116,"column":19},"end":{"line":116,"column":31}}},"4":{"name":"(anonymous_4)","line":176,"loc":{"start":{"line":176,"column":58},"end":{"line":176,"column":70}}},"5":{"name":"(anonymous_5)","line":196,"loc":{"start":{"line":196,"column":16},"end":{"line":196,"column":28}}},"6":{"name":"(anonymous_6)","line":197,"loc":{"start":{"line":197,"column":33},"end":{"line":197,"column":48}}},"7":{"name":"(anonymous_7)","line":221,"loc":{"start":{"line":221,"column":24},"end":{"line":221,"column":35}}},"8":{"name":"(anonymous_8)","line":225,"loc":{"start":{"line":225,"column":24},"end":{"line":225,"column":35}}},"9":{"name":"rexecuteOperations","line":230,"loc":{"start":{"line":230,"column":0},"end":{"line":230,"column":34}}},"10":{"name":"connectNewServers","line":242,"loc":{"start":{"line":242,"column":0},"end":{"line":242,"column":52}}},"11":{"name":"(anonymous_11)","line":248,"loc":{"start":{"line":248,"column":21},"end":{"line":248,"column":43}}},"12":{"name":"(anonymous_12)","line":249,"loc":{"start":{"line":249,"column":11},"end":{"line":249,"column":25}}},"13":{"name":"(anonymous_13)","line":265,"loc":{"start":{"line":265,"column":49},"end":{"line":265,"column":60}}},"14":{"name":"execute","line":315,"loc":{"start":{"line":315,"column":2},"end":{"line":315,"column":31}}},"15":{"name":"(anonymous_15)","line":316,"loc":{"start":{"line":316,"column":15},"end":{"line":316,"column":26}}},"16":{"name":"(anonymous_16)","line":340,"loc":{"start":{"line":340,"column":33},"end":{"line":340,"column":45}}},"17":{"name":"(anonymous_17)","line":341,"loc":{"start":{"line":341,"column":44},"end":{"line":341,"column":56}}},"18":{"name":"(anonymous_18)","line":342,"loc":{"start":{"line":342,"column":32},"end":{"line":342,"column":44}}},"19":{"name":"(anonymous_19)","line":354,"loc":{"start":{"line":354,"column":17},"end":{"line":354,"column":44}}},"20":{"name":"(anonymous_20)","line":369,"loc":{"start":{"line":369,"column":5},"end":{"line":369,"column":22}}},"21":{"name":"topologyMonitor","line":431,"loc":{"start":{"line":431,"column":0},"end":{"line":431,"column":40}}},"22":{"name":"(anonymous_22)","line":445,"loc":{"start":{"line":445,"column":22},"end":{"line":445,"column":55}}},"23":{"name":"(anonymous_23)","line":446,"loc":{"start":{"line":446,"column":30},"end":{"line":446,"column":41}}},"24":{"name":"(anonymous_24)","line":460,"loc":{"start":{"line":460,"column":42},"end":{"line":460,"column":56}}},"25":{"name":"(anonymous_25)","line":478,"loc":{"start":{"line":478,"column":31},"end":{"line":478,"column":42}}},"26":{"name":"(anonymous_26)","line":499,"loc":{"start":{"line":499,"column":31},"end":{"line":499,"column":42}}},"27":{"name":"(anonymous_27)","line":512,"loc":{"start":{"line":512,"column":31},"end":{"line":512,"column":42}}},"28":{"name":"(anonymous_28)","line":526,"loc":{"start":{"line":526,"column":74},"end":{"line":526,"column":88}}},"29":{"name":"executeReconnect","line":548,"loc":{"start":{"line":548,"column":2},"end":{"line":548,"column":34}}},"30":{"name":"(anonymous_30)","line":549,"loc":{"start":{"line":549,"column":11},"end":{"line":549,"column":22}}},"31":{"name":"(anonymous_31)","line":554,"loc":{"start":{"line":554,"column":69},"end":{"line":554,"column":80}}},"32":{"name":"addServerToList","line":572,"loc":{"start":{"line":572,"column":0},"end":{"line":572,"column":39}}},"33":{"name":"handleEvent","line":580,"loc":{"start":{"line":580,"column":0},"end":{"line":580,"column":34}}},"34":{"name":"(anonymous_34)","line":581,"loc":{"start":{"line":581,"column":9},"end":{"line":581,"column":20}}},"35":{"name":"applyAuthenticationContexts","line":607,"loc":{"start":{"line":607,"column":0},"end":{"line":607,"column":61}}},"36":{"name":"applyAuth","line":622,"loc":{"start":{"line":622,"column":2},"end":{"line":622,"column":53}}},"37":{"name":"(anonymous_37)","line":629,"loc":{"start":{"line":629,"column":27},"end":{"line":629,"column":41}}},"38":{"name":"handleInitialConnectEvent","line":641,"loc":{"start":{"line":641,"column":0},"end":{"line":641,"column":48}}},"39":{"name":"(anonymous_39)","line":642,"loc":{"start":{"line":642,"column":9},"end":{"line":642,"column":20}}},"40":{"name":"(anonymous_40)","line":657,"loc":{"start":{"line":657,"column":47},"end":{"line":657,"column":58}}},"41":{"name":"(anonymous_41)","line":696,"loc":{"start":{"line":696,"column":29},"end":{"line":696,"column":40}}},"42":{"name":"(anonymous_42)","line":726,"loc":{"start":{"line":726,"column":25},"end":{"line":726,"column":36}}},"43":{"name":"connectServers","line":746,"loc":{"start":{"line":746,"column":0},"end":{"line":746,"column":39}}},"44":{"name":"connect","line":754,"loc":{"start":{"line":754,"column":2},"end":{"line":754,"column":44}}},"45":{"name":"(anonymous_45)","line":755,"loc":{"start":{"line":755,"column":15},"end":{"line":755,"column":26}}},"46":{"name":"(anonymous_46)","line":771,"loc":{"start":{"line":771,"column":33},"end":{"line":771,"column":45}}},"47":{"name":"(anonymous_47)","line":772,"loc":{"start":{"line":772,"column":44},"end":{"line":772,"column":56}}},"48":{"name":"(anonymous_48)","line":773,"loc":{"start":{"line":773,"column":32},"end":{"line":773,"column":44}}},"49":{"name":"emitSDAMEvent","line":789,"loc":{"start":{"line":789,"column":0},"end":{"line":789,"column":49}}},"50":{"name":"(anonymous_50)","line":800,"loc":{"start":{"line":800,"column":28},"end":{"line":800,"column":46}}},"51":{"name":"(anonymous_51)","line":807,"loc":{"start":{"line":807,"column":36},"end":{"line":807,"column":48}}},"52":{"name":"(anonymous_52)","line":832,"loc":{"start":{"line":832,"column":28},"end":{"line":832,"column":46}}},"53":{"name":"(anonymous_53)","line":844,"loc":{"start":{"line":844,"column":35},"end":{"line":844,"column":47}}},"54":{"name":"(anonymous_54)","line":865,"loc":{"start":{"line":865,"column":26},"end":{"line":865,"column":37}}},"55":{"name":"(anonymous_55)","line":869,"loc":{"start":{"line":869,"column":46},"end":{"line":869,"column":58}}},"56":{"name":"(anonymous_56)","line":881,"loc":{"start":{"line":881,"column":33},"end":{"line":881,"column":44}}},"57":{"name":"(anonymous_57)","line":899,"loc":{"start":{"line":899,"column":32},"end":{"line":899,"column":43}}},"58":{"name":"(anonymous_58)","line":915,"loc":{"start":{"line":915,"column":32},"end":{"line":915,"column":50}}},"59":{"name":"(anonymous_59)","line":957,"loc":{"start":{"line":957,"column":32},"end":{"line":957,"column":43}}},"60":{"name":"(anonymous_60)","line":967,"loc":{"start":{"line":967,"column":30},"end":{"line":967,"column":48}}},"61":{"name":"(anonymous_61)","line":982,"loc":{"start":{"line":982,"column":34},"end":{"line":982,"column":52}}},"62":{"name":"(anonymous_62)","line":992,"loc":{"start":{"line":992,"column":31},"end":{"line":992,"column":42}}},"63":{"name":"(anonymous_63)","line":998,"loc":{"start":{"line":998,"column":28},"end":{"line":998,"column":75}}},"64":{"name":"(anonymous_64)","line":1023,"loc":{"start":{"line":1023,"column":27},"end":{"line":1023,"column":64}}},"65":{"name":"(anonymous_65)","line":1047,"loc":{"start":{"line":1047,"column":27},"end":{"line":1047,"column":64}}},"66":{"name":"(anonymous_66)","line":1071,"loc":{"start":{"line":1071,"column":27},"end":{"line":1071,"column":64}}},"67":{"name":"(anonymous_67)","line":1095,"loc":{"start":{"line":1095,"column":28},"end":{"line":1095,"column":65}}},"68":{"name":"(anonymous_68)","line":1136,"loc":{"start":{"line":1136,"column":25},"end":{"line":1136,"column":49}}},"69":{"name":"auth","line":1177,"loc":{"start":{"line":1177,"column":2},"end":{"line":1177,"column":24}}},"70":{"name":"(anonymous_70)","line":1181,"loc":{"start":{"line":1181,"column":53},"end":{"line":1181,"column":67}}},"71":{"name":"(anonymous_71)","line":1235,"loc":{"start":{"line":1235,"column":27},"end":{"line":1235,"column":54}}},"72":{"name":"(anonymous_72)","line":1252,"loc":{"start":{"line":1252,"column":71},"end":{"line":1252,"column":89}}},"73":{"name":"logoutServer","line":1262,"loc":{"start":{"line":1262,"column":2},"end":{"line":1262,"column":37}}},"74":{"name":"(anonymous_74)","line":1263,"loc":{"start":{"line":1263,"column":27},"end":{"line":1263,"column":41}}},"75":{"name":"(anonymous_75)","line":1271,"loc":{"start":{"line":1271,"column":29},"end":{"line":1271,"column":40}}},"76":{"name":"(anonymous_76)","line":1301,"loc":{"start":{"line":1301,"column":27},"end":{"line":1301,"column":60}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":15,"column":58}},"2":{"start":{"line":17,"column":0},"end":{"line":22,"column":41}},"3":{"start":{"line":24,"column":0},"end":{"line":24,"column":26}},"4":{"start":{"line":28,"column":0},"end":{"line":28,"column":34}},"5":{"start":{"line":29,"column":0},"end":{"line":29,"column":30}},"6":{"start":{"line":30,"column":0},"end":{"line":30,"column":28}},"7":{"start":{"line":31,"column":0},"end":{"line":31,"column":34}},"8":{"start":{"line":32,"column":0},"end":{"line":32,"column":28}},"9":{"start":{"line":34,"column":0},"end":{"line":51,"column":1}},"10":{"start":{"line":35,"column":2},"end":{"line":41,"column":3}},"11":{"start":{"line":44,"column":2},"end":{"line":44,"column":49}},"12":{"start":{"line":45,"column":2},"end":{"line":50,"column":3}},"13":{"start":{"line":46,"column":4},"end":{"line":46,"column":26}},"14":{"start":{"line":48,"column":4},"end":{"line":49,"column":53}},"15":{"start":{"line":55,"column":0},"end":{"line":55,"column":11}},"16":{"start":{"line":56,"column":0},"end":{"line":56,"column":70}},"17":{"start":{"line":107,"column":0},"end":{"line":216,"column":1}},"18":{"start":{"line":108,"column":2},"end":{"line":108,"column":18}},"19":{"start":{"line":109,"column":2},"end":{"line":109,"column":26}},"20":{"start":{"line":112,"column":2},"end":{"line":112,"column":81}},"21":{"start":{"line":112,"column":31},"end":{"line":112,"column":81}},"22":{"start":{"line":114,"column":2},"end":{"line":114,"column":92}},"23":{"start":{"line":114,"column":27},"end":{"line":114,"column":92}},"24":{"start":{"line":116,"column":2},"end":{"line":119,"column":5}},"25":{"start":{"line":117,"column":4},"end":{"line":118,"column":74}},"26":{"start":{"line":118,"column":6},"end":{"line":118,"column":74}},"27":{"start":{"line":122,"column":2},"end":{"line":122,"column":26}},"28":{"start":{"line":125,"column":2},"end":{"line":125,"column":17}},"29":{"start":{"line":128,"column":2},"end":{"line":128,"column":56}},"30":{"start":{"line":130,"column":2},"end":{"line":130,"column":77}},"31":{"start":{"line":130,"column":32},"end":{"line":130,"column":77}},"32":{"start":{"line":133,"column":2},"end":{"line":133,"column":42}},"33":{"start":{"line":136,"column":2},"end":{"line":173,"column":3}},"34":{"start":{"line":176,"column":2},"end":{"line":176,"column":119}},"35":{"start":{"line":176,"column":72},"end":{"line":176,"column":115}},"36":{"start":{"line":180,"column":2},"end":{"line":185,"column":3}},"37":{"start":{"line":183,"column":6},"end":{"line":184,"column":60}},"38":{"start":{"line":188,"column":2},"end":{"line":192,"column":3}},"39":{"start":{"line":195,"column":2},"end":{"line":195,"column":33}},"40":{"start":{"line":196,"column":2},"end":{"line":200,"column":5}},"41":{"start":{"line":197,"column":4},"end":{"line":199,"column":7}},"42":{"start":{"line":198,"column":6},"end":{"line":198,"column":25}},"43":{"start":{"line":203,"column":2},"end":{"line":205,"column":3}},"44":{"start":{"line":208,"column":2},"end":{"line":208,"column":28}},"45":{"start":{"line":209,"column":2},"end":{"line":209,"column":26}},"46":{"start":{"line":211,"column":2},"end":{"line":211,"column":30}},"47":{"start":{"line":213,"column":2},"end":{"line":213,"column":23}},"48":{"start":{"line":215,"column":2},"end":{"line":215,"column":24}},"49":{"start":{"line":218,"column":0},"end":{"line":218,"column":32}},"50":{"start":{"line":220,"column":0},"end":{"line":222,"column":3}},"51":{"start":{"line":221,"column":37},"end":{"line":221,"column":54}},"52":{"start":{"line":224,"column":0},"end":{"line":228,"column":3}},"53":{"start":{"line":226,"column":4},"end":{"line":226,"column":38}},"54":{"start":{"line":230,"column":0},"end":{"line":240,"column":1}},"55":{"start":{"line":233,"column":2},"end":{"line":239,"column":3}},"56":{"start":{"line":234,"column":4},"end":{"line":234,"column":39}},"57":{"start":{"line":235,"column":9},"end":{"line":239,"column":3}},"58":{"start":{"line":236,"column":4},"end":{"line":236,"column":62}},"59":{"start":{"line":237,"column":9},"end":{"line":239,"column":3}},"60":{"start":{"line":238,"column":4},"end":{"line":238,"column":64}},"61":{"start":{"line":242,"column":0},"end":{"line":351,"column":1}},"62":{"start":{"line":244,"column":2},"end":{"line":244,"column":29}},"63":{"start":{"line":245,"column":2},"end":{"line":245,"column":19}},"64":{"start":{"line":248,"column":2},"end":{"line":309,"column":3}},"65":{"start":{"line":249,"column":4},"end":{"line":308,"column":5}},"66":{"start":{"line":250,"column":6},"end":{"line":250,"column":23}},"67":{"start":{"line":251,"column":6},"end":{"line":251,"column":24}},"68":{"start":{"line":254,"column":6},"end":{"line":256,"column":7}},"69":{"start":{"line":255,"column":8},"end":{"line":255,"column":30}},"70":{"start":{"line":258,"column":6},"end":{"line":301,"column":7}},"71":{"start":{"line":260,"column":8},"end":{"line":262,"column":9}},"72":{"start":{"line":261,"column":10},"end":{"line":261,"column":33}},"73":{"start":{"line":265,"column":8},"end":{"line":296,"column":11}},"74":{"start":{"line":267,"column":10},"end":{"line":269,"column":11}},"75":{"start":{"line":268,"column":12},"end":{"line":268,"column":35}},"76":{"start":{"line":272,"column":10},"end":{"line":272,"column":60}},"77":{"start":{"line":274,"column":10},"end":{"line":295,"column":11}},"78":{"start":{"line":276,"column":12},"end":{"line":278,"column":13}},"79":{"start":{"line":277,"column":14},"end":{"line":277,"column":51}},"80":{"start":{"line":281,"column":12},"end":{"line":283,"column":13}},"81":{"start":{"line":282,"column":14},"end":{"line":282,"column":52}},"82":{"start":{"line":286,"column":12},"end":{"line":286,"column":58}},"83":{"start":{"line":287,"column":12},"end":{"line":287,"column":58}},"84":{"start":{"line":288,"column":12},"end":{"line":288,"column":62}},"85":{"start":{"line":289,"column":12},"end":{"line":289,"column":68}},"86":{"start":{"line":292,"column":12},"end":{"line":292,"column":37}},"87":{"start":{"line":294,"column":12},"end":{"line":294,"column":28}},"88":{"start":{"line":297,"column":13},"end":{"line":301,"column":7}},"89":{"start":{"line":298,"column":8},"end":{"line":298,"column":23}},"90":{"start":{"line":299,"column":13},"end":{"line":301,"column":7}},"91":{"start":{"line":300,"column":8},"end":{"line":300,"column":20}},"92":{"start":{"line":304,"column":6},"end":{"line":304,"column":31}},"93":{"start":{"line":307,"column":6},"end":{"line":307,"column":41}},"94":{"start":{"line":307,"column":23},"end":{"line":307,"column":39}},"95":{"start":{"line":312,"column":2},"end":{"line":312,"column":35}},"96":{"start":{"line":312,"column":17},"end":{"line":312,"column":35}},"97":{"start":{"line":315,"column":2},"end":{"line":345,"column":3}},"98":{"start":{"line":316,"column":4},"end":{"line":344,"column":10}},"99":{"start":{"line":318,"column":6},"end":{"line":320,"column":7}},"100":{"start":{"line":319,"column":8},"end":{"line":319,"column":15}},"101":{"start":{"line":323,"column":6},"end":{"line":330,"column":10}},"102":{"start":{"line":333,"column":6},"end":{"line":333,"column":60}},"103":{"start":{"line":334,"column":6},"end":{"line":334,"column":56}},"104":{"start":{"line":335,"column":6},"end":{"line":335,"column":60}},"105":{"start":{"line":336,"column":6},"end":{"line":336,"column":56}},"106":{"start":{"line":337,"column":6},"end":{"line":337,"column":66}},"107":{"start":{"line":340,"column":6},"end":{"line":340,"column":81}},"108":{"start":{"line":340,"column":47},"end":{"line":340,"column":77}},"109":{"start":{"line":341,"column":6},"end":{"line":341,"column":103}},"110":{"start":{"line":341,"column":58},"end":{"line":341,"column":99}},"111":{"start":{"line":342,"column":6},"end":{"line":342,"column":79}},"112":{"start":{"line":342,"column":46},"end":{"line":342,"column":75}},"113":{"start":{"line":343,"column":6},"end":{"line":343,"column":44}},"114":{"start":{"line":348,"column":2},"end":{"line":350,"column":3}},"115":{"start":{"line":349,"column":4},"end":{"line":349,"column":27}},"116":{"start":{"line":354,"column":0},"end":{"line":429,"column":1}},"117":{"start":{"line":356,"column":2},"end":{"line":356,"column":35}},"118":{"start":{"line":359,"column":2},"end":{"line":359,"column":79}},"119":{"start":{"line":364,"column":2},"end":{"line":428,"column":5}},"120":{"start":{"line":370,"column":4},"end":{"line":373,"column":5}},"121":{"start":{"line":371,"column":6},"end":{"line":371,"column":23}},"122":{"start":{"line":372,"column":6},"end":{"line":372,"column":24}},"123":{"start":{"line":376,"column":4},"end":{"line":376,"column":49}},"124":{"start":{"line":378,"column":4},"end":{"line":378,"column":34}},"125":{"start":{"line":380,"column":4},"end":{"line":380,"column":74}},"126":{"start":{"line":383,"column":4},"end":{"line":421,"column":5}},"127":{"start":{"line":385,"column":6},"end":{"line":385,"column":119}},"128":{"start":{"line":388,"column":6},"end":{"line":388,"column":44}},"129":{"start":{"line":391,"column":6},"end":{"line":391,"column":33}},"130":{"start":{"line":395,"column":6},"end":{"line":397,"column":7}},"131":{"start":{"line":396,"column":8},"end":{"line":396,"column":81}},"132":{"start":{"line":400,"column":6},"end":{"line":410,"column":7}},"133":{"start":{"line":401,"column":8},"end":{"line":401,"column":42}},"134":{"start":{"line":402,"column":13},"end":{"line":410,"column":7}},"135":{"start":{"line":409,"column":8},"end":{"line":409,"column":84}},"136":{"start":{"line":412,"column":6},"end":{"line":417,"column":7}},"137":{"start":{"line":414,"column":8},"end":{"line":416,"column":9}},"138":{"start":{"line":415,"column":10},"end":{"line":415,"column":48}},"139":{"start":{"line":420,"column":6},"end":{"line":420,"column":125}},"140":{"start":{"line":424,"column":4},"end":{"line":424,"column":79}},"141":{"start":{"line":427,"column":4},"end":{"line":427,"column":15}},"142":{"start":{"line":431,"column":0},"end":{"line":570,"column":1}},"143":{"start":{"line":432,"column":2},"end":{"line":432,"column":67}},"144":{"start":{"line":432,"column":60},"end":{"line":432,"column":67}},"145":{"start":{"line":433,"column":2},"end":{"line":433,"column":26}},"146":{"start":{"line":435,"column":2},"end":{"line":435,"column":56}},"147":{"start":{"line":438,"column":2},"end":{"line":438,"column":63}},"148":{"start":{"line":439,"column":2},"end":{"line":439,"column":80}},"149":{"start":{"line":442,"column":2},"end":{"line":442,"column":29}},"150":{"start":{"line":445,"column":2},"end":{"line":523,"column":3}},"151":{"start":{"line":446,"column":4},"end":{"line":519,"column":20}},"152":{"start":{"line":447,"column":6},"end":{"line":450,"column":7}},"153":{"start":{"line":448,"column":8},"end":{"line":448,"column":34}},"154":{"start":{"line":449,"column":8},"end":{"line":449,"column":15}},"155":{"start":{"line":453,"column":6},"end":{"line":453,"column":24}},"156":{"start":{"line":456,"column":6},"end":{"line":456,"column":55}},"157":{"start":{"line":459,"column":6},"end":{"line":518,"column":7}},"158":{"start":{"line":460,"column":8},"end":{"line":517,"column":11}},"159":{"start":{"line":461,"column":10},"end":{"line":464,"column":11}},"160":{"start":{"line":462,"column":12},"end":{"line":462,"column":38}},"161":{"start":{"line":463,"column":12},"end":{"line":463,"column":19}},"162":{"start":{"line":467,"column":10},"end":{"line":503,"column":11}},"163":{"start":{"line":468,"column":12},"end":{"line":484,"column":13}},"164":{"start":{"line":475,"column":14},"end":{"line":475,"column":38}},"165":{"start":{"line":478,"column":14},"end":{"line":480,"column":17}},"166":{"start":{"line":479,"column":16},"end":{"line":479,"column":43}},"167":{"start":{"line":483,"column":14},"end":{"line":483,"column":41}},"168":{"start":{"line":486,"column":12},"end":{"line":502,"column":13}},"169":{"start":{"line":493,"column":14},"end":{"line":493,"column":38}},"170":{"start":{"line":496,"column":14},"end":{"line":496,"column":39}},"171":{"start":{"line":499,"column":14},"end":{"line":501,"column":17}},"172":{"start":{"line":500,"column":16},"end":{"line":500,"column":45}},"173":{"start":{"line":505,"column":10},"end":{"line":516,"column":11}},"174":{"start":{"line":509,"column":14},"end":{"line":509,"column":56}},"175":{"start":{"line":510,"column":14},"end":{"line":510,"column":50}},"176":{"start":{"line":512,"column":14},"end":{"line":515,"column":17}},"177":{"start":{"line":513,"column":16},"end":{"line":513,"column":45}},"178":{"start":{"line":514,"column":16},"end":{"line":514,"column":39}},"179":{"start":{"line":522,"column":4},"end":{"line":522,"column":38}},"180":{"start":{"line":525,"column":2},"end":{"line":545,"column":3}},"181":{"start":{"line":526,"column":4},"end":{"line":540,"column":7}},"182":{"start":{"line":527,"column":6},"end":{"line":535,"column":7}},"183":{"start":{"line":528,"column":8},"end":{"line":528,"column":47}},"184":{"start":{"line":528,"column":16},"end":{"line":528,"column":47}},"185":{"start":{"line":529,"column":8},"end":{"line":529,"column":77}},"186":{"start":{"line":530,"column":8},"end":{"line":530,"column":30}},"187":{"start":{"line":531,"column":13},"end":{"line":535,"column":7}},"188":{"start":{"line":532,"column":8},"end":{"line":532,"column":47}},"189":{"start":{"line":532,"column":16},"end":{"line":532,"column":47}},"190":{"start":{"line":533,"column":8},"end":{"line":533,"column":79}},"191":{"start":{"line":534,"column":8},"end":{"line":534,"column":30}},"192":{"start":{"line":537,"column":6},"end":{"line":539,"column":7}},"193":{"start":{"line":538,"column":8},"end":{"line":538,"column":49}},"194":{"start":{"line":542,"column":4},"end":{"line":544,"column":5}},"195":{"start":{"line":543,"column":6},"end":{"line":543,"column":47}},"196":{"start":{"line":548,"column":2},"end":{"line":562,"column":3}},"197":{"start":{"line":549,"column":4},"end":{"line":561,"column":5}},"198":{"start":{"line":550,"column":6},"end":{"line":552,"column":7}},"199":{"start":{"line":551,"column":8},"end":{"line":551,"column":15}},"200":{"start":{"line":554,"column":6},"end":{"line":560,"column":9}},"201":{"start":{"line":555,"column":8},"end":{"line":559,"column":9}},"202":{"start":{"line":556,"column":10},"end":{"line":556,"column":81}},"203":{"start":{"line":558,"column":10},"end":{"line":558,"column":100}},"204":{"start":{"line":565,"column":2},"end":{"line":567,"column":17}},"205":{"start":{"line":569,"column":2},"end":{"line":569,"column":74}},"206":{"start":{"line":572,"column":0},"end":{"line":578,"column":1}},"207":{"start":{"line":573,"column":2},"end":{"line":575,"column":3}},"208":{"start":{"line":574,"column":4},"end":{"line":574,"column":77}},"209":{"start":{"line":574,"column":65},"end":{"line":574,"column":77}},"210":{"start":{"line":577,"column":2},"end":{"line":577,"column":20}},"211":{"start":{"line":580,"column":0},"end":{"line":605,"column":1}},"212":{"start":{"line":581,"column":2},"end":{"line":604,"column":3}},"213":{"start":{"line":582,"column":4},"end":{"line":582,"column":69}},"214":{"start":{"line":582,"column":62},"end":{"line":582,"column":69}},"215":{"start":{"line":584,"column":4},"end":{"line":586,"column":5}},"216":{"start":{"line":585,"column":6},"end":{"line":585,"column":111}},"217":{"start":{"line":589,"column":4},"end":{"line":589,"column":40}},"218":{"start":{"line":592,"column":4},"end":{"line":592,"column":69}},"219":{"start":{"line":592,"column":62},"end":{"line":592,"column":69}},"220":{"start":{"line":595,"column":4},"end":{"line":601,"column":5}},"221":{"start":{"line":598,"column":6},"end":{"line":598,"column":42}},"222":{"start":{"line":599,"column":11},"end":{"line":601,"column":5}},"223":{"start":{"line":600,"column":6},"end":{"line":600,"column":42}},"224":{"start":{"line":603,"column":4},"end":{"line":603,"column":52}},"225":{"start":{"line":607,"column":0},"end":{"line":639,"column":1}},"226":{"start":{"line":608,"column":2},"end":{"line":610,"column":3}},"227":{"start":{"line":609,"column":4},"end":{"line":609,"column":22}},"228":{"start":{"line":613,"column":2},"end":{"line":615,"column":3}},"229":{"start":{"line":614,"column":4},"end":{"line":614,"column":22}},"230":{"start":{"line":619,"column":2},"end":{"line":619,"column":60}},"231":{"start":{"line":622,"column":2},"end":{"line":635,"column":3}},"232":{"start":{"line":623,"column":4},"end":{"line":623,"column":51}},"233":{"start":{"line":623,"column":33},"end":{"line":623,"column":51}},"234":{"start":{"line":625,"column":4},"end":{"line":625,"column":43}},"235":{"start":{"line":627,"column":4},"end":{"line":627,"column":49}},"236":{"start":{"line":629,"column":4},"end":{"line":631,"column":7}},"237":{"start":{"line":630,"column":6},"end":{"line":630,"column":48}},"238":{"start":{"line":634,"column":4},"end":{"line":634,"column":48}},"239":{"start":{"line":638,"column":2},"end":{"line":638,"column":44}},"240":{"start":{"line":641,"column":0},"end":{"line":744,"column":1}},"241":{"start":{"line":642,"column":2},"end":{"line":743,"column":4}},"242":{"start":{"line":643,"column":4},"end":{"line":643,"column":21}},"243":{"start":{"line":645,"column":4},"end":{"line":647,"column":5}},"244":{"start":{"line":646,"column":6},"end":{"line":646,"column":125}},"245":{"start":{"line":650,"column":4},"end":{"line":652,"column":5}},"246":{"start":{"line":651,"column":6},"end":{"line":651,"column":28}},"247":{"start":{"line":655,"column":4},"end":{"line":717,"column":5}},"248":{"start":{"line":657,"column":6},"end":{"line":709,"column":9}},"249":{"start":{"line":659,"column":8},"end":{"line":661,"column":9}},"250":{"start":{"line":660,"column":10},"end":{"line":660,"column":33}},"251":{"start":{"line":664,"column":8},"end":{"line":664,"column":58}},"252":{"start":{"line":665,"column":8},"end":{"line":708,"column":9}},"253":{"start":{"line":667,"column":10},"end":{"line":669,"column":11}},"254":{"start":{"line":668,"column":12},"end":{"line":668,"column":49}},"255":{"start":{"line":672,"column":10},"end":{"line":674,"column":11}},"256":{"start":{"line":673,"column":12},"end":{"line":673,"column":191}},"257":{"start":{"line":677,"column":10},"end":{"line":679,"column":11}},"258":{"start":{"line":678,"column":12},"end":{"line":678,"column":50}},"259":{"start":{"line":682,"column":10},"end":{"line":682,"column":56}},"260":{"start":{"line":683,"column":10},"end":{"line":683,"column":56}},"261":{"start":{"line":684,"column":10},"end":{"line":684,"column":60}},"262":{"start":{"line":685,"column":10},"end":{"line":685,"column":66}},"263":{"start":{"line":688,"column":10},"end":{"line":701,"column":11}},"264":{"start":{"line":691,"column":12},"end":{"line":691,"column":35}},"265":{"start":{"line":694,"column":12},"end":{"line":694,"column":52}},"266":{"start":{"line":696,"column":12},"end":{"line":698,"column":15}},"267":{"start":{"line":697,"column":14},"end":{"line":697,"column":41}},"268":{"start":{"line":700,"column":12},"end":{"line":700,"column":38}},"269":{"start":{"line":702,"column":15},"end":{"line":708,"column":9}},"270":{"start":{"line":703,"column":10},"end":{"line":703,"column":26}},"271":{"start":{"line":704,"column":10},"end":{"line":704,"column":25}},"272":{"start":{"line":705,"column":10},"end":{"line":705,"column":44}},"273":{"start":{"line":707,"column":10},"end":{"line":707,"column":26}},"274":{"start":{"line":712,"column":6},"end":{"line":712,"column":32}},"275":{"start":{"line":714,"column":6},"end":{"line":714,"column":54}},"276":{"start":{"line":716,"column":6},"end":{"line":716,"column":42}},"277":{"start":{"line":719,"column":4},"end":{"line":730,"column":5}},"278":{"start":{"line":723,"column":8},"end":{"line":723,"column":50}},"279":{"start":{"line":724,"column":8},"end":{"line":724,"column":44}},"280":{"start":{"line":726,"column":8},"end":{"line":729,"column":11}},"281":{"start":{"line":727,"column":10},"end":{"line":727,"column":39}},"282":{"start":{"line":728,"column":10},"end":{"line":728,"column":33}},"283":{"start":{"line":733,"column":4},"end":{"line":737,"column":5}},"284":{"start":{"line":734,"column":6},"end":{"line":736,"column":7}},"285":{"start":{"line":735,"column":8},"end":{"line":735,"column":46}},"286":{"start":{"line":740,"column":4},"end":{"line":742,"column":5}},"287":{"start":{"line":741,"column":6},"end":{"line":741,"column":45}},"288":{"start":{"line":746,"column":0},"end":{"line":783,"column":1}},"289":{"start":{"line":748,"column":2},"end":{"line":748,"column":70}},"290":{"start":{"line":752,"column":2},"end":{"line":752,"column":26}},"291":{"start":{"line":754,"column":2},"end":{"line":777,"column":3}},"292":{"start":{"line":755,"column":4},"end":{"line":776,"column":24}},"293":{"start":{"line":757,"column":6},"end":{"line":762,"column":7}},"294":{"start":{"line":759,"column":8},"end":{"line":761,"column":9}},"295":{"start":{"line":760,"column":10},"end":{"line":760,"column":48}},"296":{"start":{"line":765,"column":6},"end":{"line":765,"column":69}},"297":{"start":{"line":766,"column":6},"end":{"line":766,"column":73}},"298":{"start":{"line":767,"column":6},"end":{"line":767,"column":79}},"299":{"start":{"line":768,"column":6},"end":{"line":768,"column":69}},"300":{"start":{"line":769,"column":6},"end":{"line":769,"column":73}},"301":{"start":{"line":771,"column":6},"end":{"line":771,"column":81}},"302":{"start":{"line":771,"column":47},"end":{"line":771,"column":77}},"303":{"start":{"line":772,"column":6},"end":{"line":772,"column":103}},"304":{"start":{"line":772,"column":58},"end":{"line":772,"column":99}},"305":{"start":{"line":773,"column":6},"end":{"line":773,"column":79}},"306":{"start":{"line":773,"column":46},"end":{"line":773,"column":75}},"307":{"start":{"line":775,"column":6},"end":{"line":775,"column":44}},"308":{"start":{"line":780,"column":2},"end":{"line":782,"column":3}},"309":{"start":{"line":781,"column":4},"end":{"line":781,"column":48}},"310":{"start":{"line":789,"column":0},"end":{"line":793,"column":1}},"311":{"start":{"line":790,"column":2},"end":{"line":792,"column":3}},"312":{"start":{"line":791,"column":4},"end":{"line":791,"column":34}},"313":{"start":{"line":800,"column":0},"end":{"line":825,"column":1}},"314":{"start":{"line":801,"column":2},"end":{"line":801,"column":18}},"315":{"start":{"line":803,"column":2},"end":{"line":803,"column":40}},"316":{"start":{"line":805,"column":2},"end":{"line":805,"column":36}},"317":{"start":{"line":807,"column":2},"end":{"line":813,"column":5}},"318":{"start":{"line":808,"column":4},"end":{"line":812,"column":8}},"319":{"start":{"line":816,"column":2},"end":{"line":819,"column":3}},"320":{"start":{"line":817,"column":4},"end":{"line":818,"column":67}},"321":{"start":{"line":822,"column":2},"end":{"line":822,"column":66}},"322":{"start":{"line":824,"column":2},"end":{"line":824,"column":32}},"323":{"start":{"line":832,"column":0},"end":{"line":859,"column":1}},"324":{"start":{"line":833,"column":2},"end":{"line":833,"column":26}},"325":{"start":{"line":835,"column":2},"end":{"line":835,"column":35}},"326":{"start":{"line":837,"column":2},"end":{"line":837,"column":54}},"327":{"start":{"line":837,"column":23},"end":{"line":837,"column":54}},"328":{"start":{"line":839,"column":2},"end":{"line":839,"column":42}},"329":{"start":{"line":841,"column":2},"end":{"line":841,"column":37}},"330":{"start":{"line":844,"column":2},"end":{"line":846,"column":5}},"331":{"start":{"line":845,"column":4},"end":{"line":845,"column":23}},"332":{"start":{"line":849,"column":2},"end":{"line":852,"column":3}},"333":{"start":{"line":850,"column":4},"end":{"line":850,"column":39}},"334":{"start":{"line":851,"column":4},"end":{"line":851,"column":38}},"335":{"start":{"line":855,"column":2},"end":{"line":855,"column":24}},"336":{"start":{"line":858,"column":2},"end":{"line":858,"column":65}},"337":{"start":{"line":865,"column":0},"end":{"line":874,"column":1}},"338":{"start":{"line":867,"column":2},"end":{"line":867,"column":38}},"339":{"start":{"line":869,"column":2},"end":{"line":871,"column":5}},"340":{"start":{"line":870,"column":4},"end":{"line":870,"column":14}},"341":{"start":{"line":873,"column":2},"end":{"line":873,"column":33}},"342":{"start":{"line":881,"column":0},"end":{"line":892,"column":1}},"343":{"start":{"line":884,"column":2},"end":{"line":888,"column":5}},"344":{"start":{"line":887,"column":6},"end":{"line":887,"column":66}},"345":{"start":{"line":890,"column":2},"end":{"line":891,"column":68}},"346":{"start":{"line":899,"column":0},"end":{"line":907,"column":1}},"347":{"start":{"line":900,"column":2},"end":{"line":900,"column":52}},"348":{"start":{"line":901,"column":2},"end":{"line":901,"column":23}},"349":{"start":{"line":902,"column":2},"end":{"line":904,"column":3}},"350":{"start":{"line":903,"column":4},"end":{"line":903,"column":63}},"351":{"start":{"line":906,"column":2},"end":{"line":906,"column":21}},"352":{"start":{"line":915,"column":0},"end":{"line":950,"column":1}},"353":{"start":{"line":916,"column":2},"end":{"line":916,"column":26}},"354":{"start":{"line":920,"column":2},"end":{"line":920,"column":39}},"355":{"start":{"line":920,"column":26},"end":{"line":920,"column":39}},"356":{"start":{"line":924,"column":2},"end":{"line":927,"column":3}},"357":{"start":{"line":926,"column":4},"end":{"line":926,"column":49}},"358":{"start":{"line":929,"column":2},"end":{"line":932,"column":3}},"359":{"start":{"line":931,"column":4},"end":{"line":931,"column":47}},"360":{"start":{"line":934,"column":2},"end":{"line":937,"column":3}},"361":{"start":{"line":936,"column":4},"end":{"line":936,"column":88}},"362":{"start":{"line":939,"column":2},"end":{"line":942,"column":3}},"363":{"start":{"line":941,"column":4},"end":{"line":941,"column":88}},"364":{"start":{"line":944,"column":2},"end":{"line":947,"column":3}},"365":{"start":{"line":946,"column":6},"end":{"line":946,"column":18}},"366":{"start":{"line":949,"column":2},"end":{"line":949,"column":45}},"367":{"start":{"line":957,"column":0},"end":{"line":959,"column":1}},"368":{"start":{"line":958,"column":2},"end":{"line":958,"column":33}},"369":{"start":{"line":967,"column":0},"end":{"line":974,"column":1}},"370":{"start":{"line":969,"column":2},"end":{"line":969,"column":26}},"371":{"start":{"line":971,"column":2},"end":{"line":971,"column":73}},"372":{"start":{"line":972,"column":2},"end":{"line":972,"column":77}},"373":{"start":{"line":972,"column":19},"end":{"line":972,"column":77}},"374":{"start":{"line":973,"column":2},"end":{"line":973,"column":16}},"375":{"start":{"line":982,"column":0},"end":{"line":985,"column":1}},"376":{"start":{"line":983,"column":2},"end":{"line":983,"column":39}},"377":{"start":{"line":984,"column":2},"end":{"line":984,"column":43}},"378":{"start":{"line":984,"column":13},"end":{"line":984,"column":43}},"379":{"start":{"line":992,"column":0},"end":{"line":994,"column":1}},"380":{"start":{"line":993,"column":2},"end":{"line":993,"column":45}},"381":{"start":{"line":998,"column":0},"end":{"line":1010,"column":1}},"382":{"start":{"line":999,"column":2},"end":{"line":999,"column":93}},"383":{"start":{"line":999,"column":35},"end":{"line":999,"column":93}},"384":{"start":{"line":1001,"column":2},"end":{"line":1001,"column":26}},"385":{"start":{"line":1004,"column":2},"end":{"line":1006,"column":3}},"386":{"start":{"line":1005,"column":4},"end":{"line":1005,"column":63}},"387":{"start":{"line":1009,"column":2},"end":{"line":1009,"column":65}},"388":{"start":{"line":1023,"column":0},"end":{"line":1034,"column":1}},"389":{"start":{"line":1024,"column":2},"end":{"line":1024,"column":93}},"390":{"start":{"line":1024,"column":35},"end":{"line":1024,"column":93}},"391":{"start":{"line":1025,"column":2},"end":{"line":1025,"column":91}},"392":{"start":{"line":1025,"column":30},"end":{"line":1025,"column":91}},"393":{"start":{"line":1028,"column":2},"end":{"line":1030,"column":3}},"394":{"start":{"line":1029,"column":4},"end":{"line":1029,"column":78}},"395":{"start":{"line":1033,"column":2},"end":{"line":1033,"column":68}},"396":{"start":{"line":1047,"column":0},"end":{"line":1058,"column":1}},"397":{"start":{"line":1048,"column":2},"end":{"line":1048,"column":93}},"398":{"start":{"line":1048,"column":35},"end":{"line":1048,"column":93}},"399":{"start":{"line":1049,"column":2},"end":{"line":1049,"column":91}},"400":{"start":{"line":1049,"column":30},"end":{"line":1049,"column":91}},"401":{"start":{"line":1052,"column":2},"end":{"line":1054,"column":3}},"402":{"start":{"line":1053,"column":4},"end":{"line":1053,"column":78}},"403":{"start":{"line":1057,"column":2},"end":{"line":1057,"column":68}},"404":{"start":{"line":1071,"column":0},"end":{"line":1082,"column":1}},"405":{"start":{"line":1072,"column":2},"end":{"line":1072,"column":93}},"406":{"start":{"line":1072,"column":35},"end":{"line":1072,"column":93}},"407":{"start":{"line":1073,"column":2},"end":{"line":1073,"column":91}},"408":{"start":{"line":1073,"column":30},"end":{"line":1073,"column":91}},"409":{"start":{"line":1076,"column":2},"end":{"line":1078,"column":3}},"410":{"start":{"line":1077,"column":4},"end":{"line":1077,"column":78}},"411":{"start":{"line":1081,"column":2},"end":{"line":1081,"column":68}},"412":{"start":{"line":1095,"column":0},"end":{"line":1126,"column":1}},"413":{"start":{"line":1096,"column":2},"end":{"line":1096,"column":93}},"414":{"start":{"line":1096,"column":35},"end":{"line":1096,"column":93}},"415":{"start":{"line":1097,"column":2},"end":{"line":1097,"column":91}},"416":{"start":{"line":1097,"column":30},"end":{"line":1097,"column":91}},"417":{"start":{"line":1098,"column":2},"end":{"line":1098,"column":18}},"418":{"start":{"line":1101,"column":2},"end":{"line":1101,"column":96}},"419":{"start":{"line":1104,"column":2},"end":{"line":1110,"column":3}},"420":{"start":{"line":1105,"column":4},"end":{"line":1105,"column":79}},"421":{"start":{"line":1106,"column":9},"end":{"line":1110,"column":3}},"422":{"start":{"line":1107,"column":4},"end":{"line":1107,"column":79}},"423":{"start":{"line":1108,"column":9},"end":{"line":1110,"column":3}},"424":{"start":{"line":1109,"column":4},"end":{"line":1109,"column":79}},"425":{"start":{"line":1113,"column":2},"end":{"line":1113,"column":65}},"426":{"start":{"line":1115,"column":2},"end":{"line":1115,"column":58}},"427":{"start":{"line":1115,"column":34},"end":{"line":1115,"column":58}},"428":{"start":{"line":1117,"column":2},"end":{"line":1117,"column":77}},"429":{"start":{"line":1117,"column":19},"end":{"line":1117,"column":77}},"430":{"start":{"line":1120,"column":2},"end":{"line":1122,"column":3}},"431":{"start":{"line":1121,"column":4},"end":{"line":1121,"column":118}},"432":{"start":{"line":1125,"column":2},"end":{"line":1125,"column":45}},"433":{"start":{"line":1136,"column":0},"end":{"line":1227,"column":1}},"434":{"start":{"line":1137,"column":2},"end":{"line":1137,"column":66}},"435":{"start":{"line":1138,"column":2},"end":{"line":1138,"column":18}},"436":{"start":{"line":1139,"column":2},"end":{"line":1139,"column":54}},"437":{"start":{"line":1140,"column":2},"end":{"line":1140,"column":28}},"438":{"start":{"line":1141,"column":2},"end":{"line":1141,"column":30}},"439":{"start":{"line":1144,"column":2},"end":{"line":1146,"column":3}},"440":{"start":{"line":1145,"column":4},"end":{"line":1145,"column":85}},"441":{"start":{"line":1149,"column":2},"end":{"line":1151,"column":3}},"442":{"start":{"line":1150,"column":4},"end":{"line":1150,"column":84}},"443":{"start":{"line":1155,"column":2},"end":{"line":1161,"column":3}},"444":{"start":{"line":1156,"column":4},"end":{"line":1160,"column":5}},"445":{"start":{"line":1157,"column":6},"end":{"line":1157,"column":77}},"446":{"start":{"line":1158,"column":11},"end":{"line":1160,"column":5}},"447":{"start":{"line":1159,"column":6},"end":{"line":1159,"column":77}},"448":{"start":{"line":1164,"column":2},"end":{"line":1164,"column":29}},"449":{"start":{"line":1166,"column":2},"end":{"line":1166,"column":18}},"450":{"start":{"line":1169,"column":2},"end":{"line":1169,"column":52}},"451":{"start":{"line":1171,"column":2},"end":{"line":1174,"column":3}},"452":{"start":{"line":1172,"column":4},"end":{"line":1172,"column":32}},"453":{"start":{"line":1173,"column":4},"end":{"line":1173,"column":25}},"454":{"start":{"line":1177,"column":2},"end":{"line":1212,"column":3}},"455":{"start":{"line":1179,"column":4},"end":{"line":1179,"column":68}},"456":{"start":{"line":1181,"column":4},"end":{"line":1203,"column":8}},"457":{"start":{"line":1182,"column":6},"end":{"line":1182,"column":24}},"458":{"start":{"line":1184,"column":6},"end":{"line":1184,"column":57}},"459":{"start":{"line":1184,"column":14},"end":{"line":1184,"column":57}},"460":{"start":{"line":1186,"column":6},"end":{"line":1202,"column":7}},"461":{"start":{"line":1188,"column":8},"end":{"line":1188,"column":36}},"462":{"start":{"line":1191,"column":8},"end":{"line":1198,"column":9}},"463":{"start":{"line":1193,"column":10},"end":{"line":1193,"column":71}},"464":{"start":{"line":1195,"column":10},"end":{"line":1197,"column":21}},"465":{"start":{"line":1201,"column":8},"end":{"line":1201,"column":29}},"466":{"start":{"line":1205,"column":4},"end":{"line":1211,"column":5}},"467":{"start":{"line":1207,"column":6},"end":{"line":1207,"column":48}},"468":{"start":{"line":1210,"column":6},"end":{"line":1210,"column":33}},"469":{"start":{"line":1215,"column":2},"end":{"line":1215,"column":29}},"470":{"start":{"line":1218,"column":2},"end":{"line":1218,"column":61}},"471":{"start":{"line":1221,"column":2},"end":{"line":1221,"column":76}},"472":{"start":{"line":1224,"column":2},"end":{"line":1226,"column":3}},"473":{"start":{"line":1225,"column":4},"end":{"line":1225,"column":26}},"474":{"start":{"line":1235,"column":0},"end":{"line":1287,"column":1}},"475":{"start":{"line":1236,"column":2},"end":{"line":1236,"column":18}},"476":{"start":{"line":1238,"column":2},"end":{"line":1240,"column":3}},"477":{"start":{"line":1239,"column":4},"end":{"line":1239,"column":73}},"478":{"start":{"line":1243,"column":2},"end":{"line":1243,"column":29}},"479":{"start":{"line":1246,"column":2},"end":{"line":1246,"column":50}},"480":{"start":{"line":1247,"column":2},"end":{"line":1249,"column":3}},"481":{"start":{"line":1248,"column":4},"end":{"line":1248,"column":52}},"482":{"start":{"line":1252,"column":2},"end":{"line":1254,"column":5}},"483":{"start":{"line":1253,"column":4},"end":{"line":1253,"column":33}},"484":{"start":{"line":1257,"column":2},"end":{"line":1257,"column":52}},"485":{"start":{"line":1258,"column":2},"end":{"line":1258,"column":29}},"486":{"start":{"line":1259,"column":2},"end":{"line":1259,"column":35}},"487":{"start":{"line":1259,"column":17},"end":{"line":1259,"column":35}},"488":{"start":{"line":1260,"column":2},"end":{"line":1260,"column":18}},"489":{"start":{"line":1262,"column":2},"end":{"line":1267,"column":3}},"490":{"start":{"line":1263,"column":4},"end":{"line":1266,"column":7}},"491":{"start":{"line":1264,"column":6},"end":{"line":1264,"column":58}},"492":{"start":{"line":1264,"column":14},"end":{"line":1264,"column":58}},"493":{"start":{"line":1265,"column":6},"end":{"line":1265,"column":11}},"494":{"start":{"line":1270,"column":2},"end":{"line":1286,"column":3}},"495":{"start":{"line":1271,"column":4},"end":{"line":1285,"column":6}},"496":{"start":{"line":1272,"column":6},"end":{"line":1272,"column":24}},"497":{"start":{"line":1274,"column":6},"end":{"line":1284,"column":7}},"498":{"start":{"line":1276,"column":8},"end":{"line":1276,"column":36}},"499":{"start":{"line":1278,"column":8},"end":{"line":1280,"column":19}},"500":{"start":{"line":1278,"column":26},"end":{"line":1280,"column":19}},"501":{"start":{"line":1283,"column":8},"end":{"line":1283,"column":19}},"502":{"start":{"line":1301,"column":0},"end":{"line":1305,"column":1}},"503":{"start":{"line":1302,"column":2},"end":{"line":1302,"column":38}},"504":{"start":{"line":1303,"column":2},"end":{"line":1303,"column":65}},"505":{"start":{"line":1304,"column":2},"end":{"line":1304,"column":84}},"506":{"start":{"line":1423,"column":0},"end":{"line":1423,"column":25}}},"branchMap":{"1":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"2":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":5},"end":{"line":45,"column":16}},{"start":{"line":45,"column":20},"end":{"line":45,"column":55}}]},"3":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":12},"end":{"line":109,"column":19}},{"start":{"line":109,"column":23},"end":{"line":109,"column":25}}]},"4":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":2},"end":{"line":112,"column":2}},{"start":{"line":112,"column":2},"end":{"line":112,"column":2}}]},"5":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":2},"end":{"line":114,"column":2}},{"start":{"line":114,"column":2},"end":{"line":114,"column":2}}]},"6":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":4},"end":{"line":117,"column":4}},{"start":{"line":117,"column":4},"end":{"line":117,"column":4}}]},"7":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":7},"end":{"line":117,"column":32}},{"start":{"line":117,"column":36},"end":{"line":117,"column":61}}]},"8":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":25},"end":{"line":128,"column":49}},{"start":{"line":128,"column":53},"end":{"line":128,"column":55}}]},"9":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":2},"end":{"line":130,"column":2}},{"start":{"line":130,"column":2},"end":{"line":130,"column":2}}]},"10":{"line":139,"type":"binary-expr","locations":[{"start":{"line":139,"column":10},"end":{"line":139,"column":22}},{"start":{"line":139,"column":26},"end":{"line":141,"column":67}}]},"11":{"line":143,"type":"binary-expr","locations":[{"start":{"line":143,"column":12},"end":{"line":143,"column":33}},{"start":{"line":143,"column":37},"end":{"line":143,"column":48}}]},"12":{"line":152,"type":"cond-expr","locations":[{"start":{"line":152,"column":49},"end":{"line":152,"column":67}},{"start":{"line":152,"column":70},"end":{"line":152,"column":75}}]},"13":{"line":158,"type":"cond-expr","locations":[{"start":{"line":158,"column":37},"end":{"line":158,"column":55}},{"start":{"line":158,"column":58},"end":{"line":158,"column":63}}]},"14":{"line":168,"type":"cond-expr","locations":[{"start":{"line":168,"column":47},"end":{"line":168,"column":60}},{"start":{"line":168,"column":63},"end":{"line":168,"column":68}}]},"15":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":2},"end":{"line":180,"column":2}},{"start":{"line":180,"column":2},"end":{"line":180,"column":2}}]},"16":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":5},"end":{"line":180,"column":27}},{"start":{"line":181,"column":7},"end":{"line":181,"column":40}},{"start":{"line":182,"column":7},"end":{"line":182,"column":55}}]},"17":{"line":188,"type":"binary-expr","locations":[{"start":{"line":188,"column":23},"end":{"line":188,"column":44}},{"start":{"line":188,"column":48},"end":{"line":192,"column":3}}]},"18":{"line":226,"type":"cond-expr","locations":[{"start":{"line":226,"column":25},"end":{"line":226,"column":30}},{"start":{"line":226,"column":33},"end":{"line":226,"column":37}}]},"19":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":2},"end":{"line":233,"column":2}},{"start":{"line":233,"column":2},"end":{"line":233,"column":2}}]},"20":{"line":233,"type":"binary-expr","locations":[{"start":{"line":233,"column":5},"end":{"line":233,"column":52}},{"start":{"line":233,"column":56},"end":{"line":233,"column":80}}]},"21":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":9},"end":{"line":235,"column":9}},{"start":{"line":235,"column":9},"end":{"line":235,"column":9}}]},"22":{"line":235,"type":"binary-expr","locations":[{"start":{"line":235,"column":12},"end":{"line":235,"column":47}},{"start":{"line":235,"column":51},"end":{"line":235,"column":75}}]},"23":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":9},"end":{"line":237,"column":9}},{"start":{"line":237,"column":9},"end":{"line":237,"column":9}}]},"24":{"line":237,"type":"binary-expr","locations":[{"start":{"line":237,"column":12},"end":{"line":237,"column":49}},{"start":{"line":237,"column":53},"end":{"line":237,"column":77}}]},"25":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":6},"end":{"line":254,"column":6}},{"start":{"line":254,"column":6},"end":{"line":254,"column":6}}]},"26":{"line":254,"type":"binary-expr","locations":[{"start":{"line":254,"column":9},"end":{"line":254,"column":32}},{"start":{"line":254,"column":36},"end":{"line":254,"column":62}}]},"27":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":6},"end":{"line":258,"column":6}},{"start":{"line":258,"column":6},"end":{"line":258,"column":6}}]},"28":{"line":258,"type":"binary-expr","locations":[{"start":{"line":258,"column":9},"end":{"line":258,"column":27}},{"start":{"line":258,"column":31},"end":{"line":258,"column":51}}]},"29":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":8},"end":{"line":260,"column":8}},{"start":{"line":260,"column":8},"end":{"line":260,"column":8}}]},"30":{"line":260,"type":"binary-expr","locations":[{"start":{"line":260,"column":11},"end":{"line":260,"column":34}},{"start":{"line":260,"column":38},"end":{"line":260,"column":64}}]},"31":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":10},"end":{"line":267,"column":10}},{"start":{"line":267,"column":10},"end":{"line":267,"column":10}}]},"32":{"line":267,"type":"binary-expr","locations":[{"start":{"line":267,"column":13},"end":{"line":267,"column":36}},{"start":{"line":267,"column":40},"end":{"line":267,"column":66}}]},"33":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":10},"end":{"line":274,"column":10}},{"start":{"line":274,"column":10},"end":{"line":274,"column":10}}]},"34":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":12},"end":{"line":276,"column":12}},{"start":{"line":276,"column":12},"end":{"line":276,"column":12}}]},"35":{"line":276,"type":"binary-expr","locations":[{"start":{"line":276,"column":15},"end":{"line":276,"column":35}},{"start":{"line":276,"column":39},"end":{"line":276,"column":68}}]},"36":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":13},"end":{"line":297,"column":13}},{"start":{"line":297,"column":13},"end":{"line":297,"column":13}}]},"37":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":16},"end":{"line":297,"column":34}},{"start":{"line":297,"column":38},"end":{"line":297,"column":57}}]},"38":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":13},"end":{"line":299,"column":13}},{"start":{"line":299,"column":13},"end":{"line":299,"column":13}}]},"39":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":6},"end":{"line":307,"column":6}},{"start":{"line":307,"column":6},"end":{"line":307,"column":6}}]},"40":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":2},"end":{"line":312,"column":2}},{"start":{"line":312,"column":2},"end":{"line":312,"column":2}}]},"41":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":6},"end":{"line":318,"column":6}},{"start":{"line":318,"column":6},"end":{"line":318,"column":6}}]},"42":{"line":318,"type":"binary-expr","locations":[{"start":{"line":318,"column":9},"end":{"line":318,"column":32}},{"start":{"line":318,"column":36},"end":{"line":318,"column":62}}]},"43":{"line":368,"type":"binary-expr","locations":[{"start":{"line":368,"column":19},"end":{"line":368,"column":51}},{"start":{"line":368,"column":55},"end":{"line":368,"column":59}}]},"44":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":4},"end":{"line":370,"column":4}},{"start":{"line":370,"column":4},"end":{"line":370,"column":4}}]},"45":{"line":370,"type":"binary-expr","locations":[{"start":{"line":370,"column":7},"end":{"line":370,"column":30}},{"start":{"line":370,"column":34},"end":{"line":370,"column":60}}]},"46":{"line":383,"type":"if","locations":[{"start":{"line":383,"column":4},"end":{"line":383,"column":4}},{"start":{"line":383,"column":4},"end":{"line":383,"column":4}}]},"47":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":6},"end":{"line":395,"column":6}},{"start":{"line":395,"column":6},"end":{"line":395,"column":6}}]},"48":{"line":395,"type":"binary-expr","locations":[{"start":{"line":395,"column":9},"end":{"line":395,"column":34}},{"start":{"line":395,"column":38},"end":{"line":395,"column":77}}]},"49":{"line":400,"type":"if","locations":[{"start":{"line":400,"column":6},"end":{"line":400,"column":6}},{"start":{"line":400,"column":6},"end":{"line":400,"column":6}}]},"50":{"line":402,"type":"if","locations":[{"start":{"line":402,"column":13},"end":{"line":402,"column":13}},{"start":{"line":402,"column":13},"end":{"line":402,"column":13}}]},"51":{"line":412,"type":"if","locations":[{"start":{"line":412,"column":6},"end":{"line":412,"column":6}},{"start":{"line":412,"column":6},"end":{"line":412,"column":6}}]},"52":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":8},"end":{"line":414,"column":8}},{"start":{"line":414,"column":8},"end":{"line":414,"column":8}}]},"53":{"line":414,"type":"binary-expr","locations":[{"start":{"line":414,"column":11},"end":{"line":414,"column":32}},{"start":{"line":414,"column":36},"end":{"line":414,"column":66}}]},"54":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":2},"end":{"line":432,"column":2}},{"start":{"line":432,"column":2},"end":{"line":432,"column":2}}]},"55":{"line":432,"type":"binary-expr","locations":[{"start":{"line":432,"column":5},"end":{"line":432,"column":28}},{"start":{"line":432,"column":32},"end":{"line":432,"column":58}}]},"56":{"line":433,"type":"binary-expr","locations":[{"start":{"line":433,"column":12},"end":{"line":433,"column":19}},{"start":{"line":433,"column":23},"end":{"line":433,"column":25}}]},"57":{"line":438,"type":"cond-expr","locations":[{"start":{"line":438,"column":38},"end":{"line":438,"column":48}},{"start":{"line":438,"column":51},"end":{"line":438,"column":62}}]},"58":{"line":439,"type":"cond-expr","locations":[{"start":{"line":439,"column":41},"end":{"line":439,"column":59}},{"start":{"line":439,"column":62},"end":{"line":439,"column":79}}]},"59":{"line":447,"type":"if","locations":[{"start":{"line":447,"column":6},"end":{"line":447,"column":6}},{"start":{"line":447,"column":6},"end":{"line":447,"column":6}}]},"60":{"line":447,"type":"binary-expr","locations":[{"start":{"line":447,"column":9},"end":{"line":447,"column":32}},{"start":{"line":447,"column":36},"end":{"line":447,"column":62}}]},"61":{"line":459,"type":"if","locations":[{"start":{"line":459,"column":6},"end":{"line":459,"column":6}},{"start":{"line":459,"column":6},"end":{"line":459,"column":6}}]},"62":{"line":461,"type":"if","locations":[{"start":{"line":461,"column":10},"end":{"line":461,"column":10}},{"start":{"line":461,"column":10},"end":{"line":461,"column":10}}]},"63":{"line":461,"type":"binary-expr","locations":[{"start":{"line":461,"column":13},"end":{"line":461,"column":36}},{"start":{"line":461,"column":40},"end":{"line":461,"column":66}}]},"64":{"line":467,"type":"if","locations":[{"start":{"line":467,"column":10},"end":{"line":467,"column":10}},{"start":{"line":467,"column":10},"end":{"line":467,"column":10}}]},"65":{"line":468,"type":"if","locations":[{"start":{"line":468,"column":12},"end":{"line":468,"column":12}},{"start":{"line":468,"column":12},"end":{"line":468,"column":12}}]},"66":{"line":468,"type":"binary-expr","locations":[{"start":{"line":468,"column":15},"end":{"line":468,"column":40}},{"start":{"line":470,"column":16},"end":{"line":470,"column":53}},{"start":{"line":471,"column":19},"end":{"line":471,"column":64}},{"start":{"line":473,"column":17},"end":{"line":473,"column":52}}]},"67":{"line":486,"type":"if","locations":[{"start":{"line":486,"column":12},"end":{"line":486,"column":12}},{"start":{"line":486,"column":12},"end":{"line":486,"column":12}}]},"68":{"line":486,"type":"binary-expr","locations":[{"start":{"line":486,"column":15},"end":{"line":486,"column":42}},{"start":{"line":488,"column":16},"end":{"line":488,"column":53}},{"start":{"line":489,"column":19},"end":{"line":489,"column":64}},{"start":{"line":491,"column":17},"end":{"line":491,"column":52}}]},"69":{"line":505,"type":"if","locations":[{"start":{"line":505,"column":10},"end":{"line":505,"column":10}},{"start":{"line":505,"column":10},"end":{"line":505,"column":10}}]},"70":{"line":505,"type":"binary-expr","locations":[{"start":{"line":505,"column":13},"end":{"line":505,"column":45}},{"start":{"line":506,"column":15},"end":{"line":506,"column":50}},{"start":{"line":507,"column":15},"end":{"line":507,"column":62}}]},"71":{"line":525,"type":"if","locations":[{"start":{"line":525,"column":2},"end":{"line":525,"column":2}},{"start":{"line":525,"column":2},"end":{"line":525,"column":2}}]},"72":{"line":527,"type":"if","locations":[{"start":{"line":527,"column":6},"end":{"line":527,"column":6}},{"start":{"line":527,"column":6},"end":{"line":527,"column":6}}]},"73":{"line":527,"type":"binary-expr","locations":[{"start":{"line":527,"column":9},"end":{"line":527,"column":45}},{"start":{"line":527,"column":49},"end":{"line":527,"column":95}}]},"74":{"line":528,"type":"if","locations":[{"start":{"line":528,"column":8},"end":{"line":528,"column":8}},{"start":{"line":528,"column":8},"end":{"line":528,"column":8}}]},"75":{"line":531,"type":"if","locations":[{"start":{"line":531,"column":13},"end":{"line":531,"column":13}},{"start":{"line":531,"column":13},"end":{"line":531,"column":13}}]},"76":{"line":531,"type":"binary-expr","locations":[{"start":{"line":531,"column":16},"end":{"line":531,"column":54}},{"start":{"line":531,"column":58},"end":{"line":531,"column":103}}]},"77":{"line":532,"type":"if","locations":[{"start":{"line":532,"column":8},"end":{"line":532,"column":8}},{"start":{"line":532,"column":8},"end":{"line":532,"column":8}}]},"78":{"line":550,"type":"if","locations":[{"start":{"line":550,"column":6},"end":{"line":550,"column":6}},{"start":{"line":550,"column":6},"end":{"line":550,"column":6}}]},"79":{"line":550,"type":"binary-expr","locations":[{"start":{"line":550,"column":9},"end":{"line":550,"column":32}},{"start":{"line":550,"column":36},"end":{"line":550,"column":62}}]},"80":{"line":555,"type":"if","locations":[{"start":{"line":555,"column":8},"end":{"line":555,"column":8}},{"start":{"line":555,"column":8},"end":{"line":555,"column":8}}]},"81":{"line":565,"type":"cond-expr","locations":[{"start":{"line":566,"column":6},"end":{"line":566,"column":36}},{"start":{"line":567,"column":6},"end":{"line":567,"column":17}}]},"82":{"line":574,"type":"if","locations":[{"start":{"line":574,"column":4},"end":{"line":574,"column":4}},{"start":{"line":574,"column":4},"end":{"line":574,"column":4}}]},"83":{"line":582,"type":"if","locations":[{"start":{"line":582,"column":4},"end":{"line":582,"column":4}},{"start":{"line":582,"column":4},"end":{"line":582,"column":4}}]},"84":{"line":582,"type":"binary-expr","locations":[{"start":{"line":582,"column":7},"end":{"line":582,"column":30}},{"start":{"line":582,"column":34},"end":{"line":582,"column":60}}]},"85":{"line":584,"type":"if","locations":[{"start":{"line":584,"column":4},"end":{"line":584,"column":4}},{"start":{"line":584,"column":4},"end":{"line":584,"column":4}}]},"86":{"line":592,"type":"if","locations":[{"start":{"line":592,"column":4},"end":{"line":592,"column":4}},{"start":{"line":592,"column":4},"end":{"line":592,"column":4}}]},"87":{"line":592,"type":"binary-expr","locations":[{"start":{"line":592,"column":7},"end":{"line":592,"column":30}},{"start":{"line":592,"column":34},"end":{"line":592,"column":60}}]},"88":{"line":595,"type":"if","locations":[{"start":{"line":595,"column":4},"end":{"line":595,"column":4}},{"start":{"line":595,"column":4},"end":{"line":595,"column":4}}]},"89":{"line":595,"type":"binary-expr","locations":[{"start":{"line":595,"column":7},"end":{"line":595,"column":43}},{"start":{"line":596,"column":9},"end":{"line":596,"column":47}},{"start":{"line":597,"column":9},"end":{"line":597,"column":54}}]},"90":{"line":599,"type":"if","locations":[{"start":{"line":599,"column":11},"end":{"line":599,"column":11}},{"start":{"line":599,"column":11},"end":{"line":599,"column":11}}]},"91":{"line":608,"type":"if","locations":[{"start":{"line":608,"column":2},"end":{"line":608,"column":2}},{"start":{"line":608,"column":2},"end":{"line":608,"column":2}}]},"92":{"line":613,"type":"if","locations":[{"start":{"line":613,"column":2},"end":{"line":613,"column":2}},{"start":{"line":613,"column":2},"end":{"line":613,"column":2}}]},"93":{"line":613,"type":"binary-expr","locations":[{"start":{"line":613,"column":5},"end":{"line":613,"column":26}},{"start":{"line":613,"column":30},"end":{"line":613,"column":63}}]},"94":{"line":623,"type":"if","locations":[{"start":{"line":623,"column":4},"end":{"line":623,"column":4}},{"start":{"line":623,"column":4},"end":{"line":623,"column":4}}]},"95":{"line":645,"type":"if","locations":[{"start":{"line":645,"column":4},"end":{"line":645,"column":4}},{"start":{"line":645,"column":4},"end":{"line":645,"column":4}}]},"96":{"line":650,"type":"if","locations":[{"start":{"line":650,"column":4},"end":{"line":650,"column":4}},{"start":{"line":650,"column":4},"end":{"line":650,"column":4}}]},"97":{"line":650,"type":"binary-expr","locations":[{"start":{"line":650,"column":7},"end":{"line":650,"column":30}},{"start":{"line":650,"column":34},"end":{"line":650,"column":60}}]},"98":{"line":655,"type":"if","locations":[{"start":{"line":655,"column":4},"end":{"line":655,"column":4}},{"start":{"line":655,"column":4},"end":{"line":655,"column":4}}]},"99":{"line":659,"type":"if","locations":[{"start":{"line":659,"column":8},"end":{"line":659,"column":8}},{"start":{"line":659,"column":8},"end":{"line":659,"column":8}}]},"100":{"line":659,"type":"binary-expr","locations":[{"start":{"line":659,"column":11},"end":{"line":659,"column":34}},{"start":{"line":659,"column":38},"end":{"line":659,"column":64}}]},"101":{"line":665,"type":"if","locations":[{"start":{"line":665,"column":8},"end":{"line":665,"column":8}},{"start":{"line":665,"column":8},"end":{"line":665,"column":8}}]},"102":{"line":667,"type":"if","locations":[{"start":{"line":667,"column":10},"end":{"line":667,"column":10}},{"start":{"line":667,"column":10},"end":{"line":667,"column":10}}]},"103":{"line":667,"type":"binary-expr","locations":[{"start":{"line":667,"column":13},"end":{"line":667,"column":33}},{"start":{"line":667,"column":37},"end":{"line":667,"column":66}}]},"104":{"line":672,"type":"if","locations":[{"start":{"line":672,"column":10},"end":{"line":672,"column":10}},{"start":{"line":672,"column":10},"end":{"line":672,"column":10}}]},"105":{"line":688,"type":"if","locations":[{"start":{"line":688,"column":10},"end":{"line":688,"column":10}},{"start":{"line":688,"column":10},"end":{"line":688,"column":10}}]},"106":{"line":688,"type":"binary-expr","locations":[{"start":{"line":688,"column":13},"end":{"line":688,"column":38}},{"start":{"line":688,"column":42},"end":{"line":688,"column":77}},{"start":{"line":689,"column":16},"end":{"line":689,"column":53}},{"start":{"line":689,"column":57},"end":{"line":689,"column":102}}]},"107":{"line":702,"type":"if","locations":[{"start":{"line":702,"column":15},"end":{"line":702,"column":15}},{"start":{"line":702,"column":15},"end":{"line":702,"column":15}}]},"108":{"line":719,"type":"if","locations":[{"start":{"line":719,"column":4},"end":{"line":719,"column":4}},{"start":{"line":719,"column":4},"end":{"line":719,"column":4}}]},"109":{"line":719,"type":"binary-expr","locations":[{"start":{"line":719,"column":7},"end":{"line":719,"column":39}},{"start":{"line":720,"column":9},"end":{"line":720,"column":44}},{"start":{"line":721,"column":9},"end":{"line":721,"column":56}}]},"110":{"line":734,"type":"if","locations":[{"start":{"line":734,"column":6},"end":{"line":734,"column":6}},{"start":{"line":734,"column":6},"end":{"line":734,"column":6}}]},"111":{"line":740,"type":"if","locations":[{"start":{"line":740,"column":4},"end":{"line":740,"column":4}},{"start":{"line":740,"column":4},"end":{"line":740,"column":4}}]},"112":{"line":740,"type":"binary-expr","locations":[{"start":{"line":740,"column":7},"end":{"line":740,"column":43}},{"start":{"line":740,"column":47},"end":{"line":740,"column":71}}]},"113":{"line":757,"type":"if","locations":[{"start":{"line":757,"column":6},"end":{"line":757,"column":6}},{"start":{"line":757,"column":6},"end":{"line":757,"column":6}}]},"114":{"line":759,"type":"if","locations":[{"start":{"line":759,"column":8},"end":{"line":759,"column":8}},{"start":{"line":759,"column":8},"end":{"line":759,"column":8}}]},"115":{"line":759,"type":"binary-expr","locations":[{"start":{"line":759,"column":11},"end":{"line":759,"column":32}},{"start":{"line":759,"column":36},"end":{"line":759,"column":66}}]},"116":{"line":790,"type":"if","locations":[{"start":{"line":790,"column":2},"end":{"line":790,"column":2}},{"start":{"line":790,"column":2},"end":{"line":790,"column":2}}]},"117":{"line":803,"type":"binary-expr","locations":[{"start":{"line":803,"column":26},"end":{"line":803,"column":33}},{"start":{"line":803,"column":37},"end":{"line":803,"column":39}}]},"118":{"line":816,"type":"if","locations":[{"start":{"line":816,"column":2},"end":{"line":816,"column":2}},{"start":{"line":816,"column":2},"end":{"line":816,"column":2}}]},"119":{"line":816,"type":"binary-expr","locations":[{"start":{"line":816,"column":5},"end":{"line":816,"column":37}},{"start":{"line":816,"column":41},"end":{"line":816,"column":98}}]},"120":{"line":833,"type":"binary-expr","locations":[{"start":{"line":833,"column":12},"end":{"line":833,"column":19}},{"start":{"line":833,"column":23},"end":{"line":833,"column":25}}]},"121":{"line":837,"type":"if","locations":[{"start":{"line":837,"column":2},"end":{"line":837,"column":2}},{"start":{"line":837,"column":2},"end":{"line":837,"column":2}}]},"122":{"line":884,"type":"if","locations":[{"start":{"line":884,"column":2},"end":{"line":884,"column":2}},{"start":{"line":884,"column":2},"end":{"line":884,"column":2}}]},"123":{"line":884,"type":"binary-expr","locations":[{"start":{"line":884,"column":6},"end":{"line":884,"column":51}},{"start":{"line":885,"column":7},"end":{"line":885,"column":43}},{"start":{"line":886,"column":7},"end":{"line":886,"column":44}}]},"124":{"line":890,"type":"cond-expr","locations":[{"start":{"line":891,"column":6},"end":{"line":891,"column":51}},{"start":{"line":891,"column":54},"end":{"line":891,"column":67}}]},"125":{"line":916,"type":"binary-expr","locations":[{"start":{"line":916,"column":12},"end":{"line":916,"column":19}},{"start":{"line":916,"column":23},"end":{"line":916,"column":25}}]},"126":{"line":920,"type":"if","locations":[{"start":{"line":920,"column":2},"end":{"line":920,"column":2}},{"start":{"line":920,"column":2},"end":{"line":920,"column":2}}]},"127":{"line":924,"type":"if","locations":[{"start":{"line":924,"column":2},"end":{"line":924,"column":2}},{"start":{"line":924,"column":2},"end":{"line":924,"column":2}}]},"128":{"line":924,"type":"binary-expr","locations":[{"start":{"line":924,"column":5},"end":{"line":924,"column":27}},{"start":{"line":925,"column":7},"end":{"line":925,"column":62}}]},"129":{"line":929,"type":"if","locations":[{"start":{"line":929,"column":2},"end":{"line":929,"column":2}},{"start":{"line":929,"column":2},"end":{"line":929,"column":2}}]},"130":{"line":929,"type":"binary-expr","locations":[{"start":{"line":929,"column":5},"end":{"line":929,"column":27}},{"start":{"line":930,"column":7},"end":{"line":930,"column":60}}]},"131":{"line":934,"type":"if","locations":[{"start":{"line":934,"column":2},"end":{"line":934,"column":2}},{"start":{"line":934,"column":2},"end":{"line":934,"column":2}}]},"132":{"line":934,"type":"binary-expr","locations":[{"start":{"line":934,"column":5},"end":{"line":934,"column":27}},{"start":{"line":935,"column":7},"end":{"line":935,"column":69}}]},"133":{"line":936,"type":"binary-expr","locations":[{"start":{"line":936,"column":11},"end":{"line":936,"column":48}},{"start":{"line":936,"column":52},"end":{"line":936,"column":87}}]},"134":{"line":939,"type":"if","locations":[{"start":{"line":939,"column":2},"end":{"line":939,"column":2}},{"start":{"line":939,"column":2},"end":{"line":939,"column":2}}]},"135":{"line":939,"type":"binary-expr","locations":[{"start":{"line":939,"column":5},"end":{"line":939,"column":27}},{"start":{"line":940,"column":7},"end":{"line":940,"column":71}}]},"136":{"line":941,"type":"binary-expr","locations":[{"start":{"line":941,"column":11},"end":{"line":941,"column":48}},{"start":{"line":941,"column":52},"end":{"line":941,"column":87}}]},"137":{"line":944,"type":"if","locations":[{"start":{"line":944,"column":2},"end":{"line":944,"column":2}},{"start":{"line":944,"column":2},"end":{"line":944,"column":2}}]},"138":{"line":944,"type":"binary-expr","locations":[{"start":{"line":944,"column":5},"end":{"line":944,"column":50}},{"start":{"line":945,"column":7},"end":{"line":945,"column":44}}]},"139":{"line":969,"type":"binary-expr","locations":[{"start":{"line":969,"column":12},"end":{"line":969,"column":19}},{"start":{"line":969,"column":23},"end":{"line":969,"column":25}}]},"140":{"line":972,"type":"if","locations":[{"start":{"line":972,"column":2},"end":{"line":972,"column":2}},{"start":{"line":972,"column":2},"end":{"line":972,"column":2}}]},"141":{"line":984,"type":"if","locations":[{"start":{"line":984,"column":2},"end":{"line":984,"column":2}},{"start":{"line":984,"column":2},"end":{"line":984,"column":2}}]},"142":{"line":999,"type":"if","locations":[{"start":{"line":999,"column":2},"end":{"line":999,"column":2}},{"start":{"line":999,"column":2},"end":{"line":999,"column":2}}]},"143":{"line":999,"type":"binary-expr","locations":[{"start":{"line":999,"column":79},"end":{"line":999,"column":86}},{"start":{"line":999,"column":90},"end":{"line":999,"column":92}}]},"144":{"line":1001,"type":"binary-expr","locations":[{"start":{"line":1001,"column":12},"end":{"line":1001,"column":19}},{"start":{"line":1001,"column":23},"end":{"line":1001,"column":25}}]},"145":{"line":1004,"type":"if","locations":[{"start":{"line":1004,"column":2},"end":{"line":1004,"column":2}},{"start":{"line":1004,"column":2},"end":{"line":1004,"column":2}}]},"146":{"line":1024,"type":"if","locations":[{"start":{"line":1024,"column":2},"end":{"line":1024,"column":2}},{"start":{"line":1024,"column":2},"end":{"line":1024,"column":2}}]},"147":{"line":1024,"type":"binary-expr","locations":[{"start":{"line":1024,"column":79},"end":{"line":1024,"column":86}},{"start":{"line":1024,"column":90},"end":{"line":1024,"column":92}}]},"148":{"line":1025,"type":"if","locations":[{"start":{"line":1025,"column":2},"end":{"line":1025,"column":2}},{"start":{"line":1025,"column":2},"end":{"line":1025,"column":2}}]},"149":{"line":1028,"type":"if","locations":[{"start":{"line":1028,"column":2},"end":{"line":1028,"column":2}},{"start":{"line":1028,"column":2},"end":{"line":1028,"column":2}}]},"150":{"line":1028,"type":"binary-expr","locations":[{"start":{"line":1028,"column":5},"end":{"line":1028,"column":41}},{"start":{"line":1028,"column":45},"end":{"line":1028,"column":77}}]},"151":{"line":1048,"type":"if","locations":[{"start":{"line":1048,"column":2},"end":{"line":1048,"column":2}},{"start":{"line":1048,"column":2},"end":{"line":1048,"column":2}}]},"152":{"line":1048,"type":"binary-expr","locations":[{"start":{"line":1048,"column":79},"end":{"line":1048,"column":86}},{"start":{"line":1048,"column":90},"end":{"line":1048,"column":92}}]},"153":{"line":1049,"type":"if","locations":[{"start":{"line":1049,"column":2},"end":{"line":1049,"column":2}},{"start":{"line":1049,"column":2},"end":{"line":1049,"column":2}}]},"154":{"line":1052,"type":"if","locations":[{"start":{"line":1052,"column":2},"end":{"line":1052,"column":2}},{"start":{"line":1052,"column":2},"end":{"line":1052,"column":2}}]},"155":{"line":1052,"type":"binary-expr","locations":[{"start":{"line":1052,"column":5},"end":{"line":1052,"column":41}},{"start":{"line":1052,"column":45},"end":{"line":1052,"column":77}}]},"156":{"line":1072,"type":"if","locations":[{"start":{"line":1072,"column":2},"end":{"line":1072,"column":2}},{"start":{"line":1072,"column":2},"end":{"line":1072,"column":2}}]},"157":{"line":1072,"type":"binary-expr","locations":[{"start":{"line":1072,"column":79},"end":{"line":1072,"column":86}},{"start":{"line":1072,"column":90},"end":{"line":1072,"column":92}}]},"158":{"line":1073,"type":"if","locations":[{"start":{"line":1073,"column":2},"end":{"line":1073,"column":2}},{"start":{"line":1073,"column":2},"end":{"line":1073,"column":2}}]},"159":{"line":1076,"type":"if","locations":[{"start":{"line":1076,"column":2},"end":{"line":1076,"column":2}},{"start":{"line":1076,"column":2},"end":{"line":1076,"column":2}}]},"160":{"line":1076,"type":"binary-expr","locations":[{"start":{"line":1076,"column":5},"end":{"line":1076,"column":41}},{"start":{"line":1076,"column":45},"end":{"line":1076,"column":77}}]},"161":{"line":1096,"type":"if","locations":[{"start":{"line":1096,"column":2},"end":{"line":1096,"column":2}},{"start":{"line":1096,"column":2},"end":{"line":1096,"column":2}}]},"162":{"line":1096,"type":"binary-expr","locations":[{"start":{"line":1096,"column":79},"end":{"line":1096,"column":86}},{"start":{"line":1096,"column":90},"end":{"line":1096,"column":92}}]},"163":{"line":1097,"type":"if","locations":[{"start":{"line":1097,"column":2},"end":{"line":1097,"column":2}},{"start":{"line":1097,"column":2},"end":{"line":1097,"column":2}}]},"164":{"line":1101,"type":"cond-expr","locations":[{"start":{"line":1101,"column":48},"end":{"line":1101,"column":70}},{"start":{"line":1101,"column":73},"end":{"line":1101,"column":95}}]},"165":{"line":1104,"type":"if","locations":[{"start":{"line":1104,"column":2},"end":{"line":1104,"column":2}},{"start":{"line":1104,"column":2},"end":{"line":1104,"column":2}}]},"166":{"line":1104,"type":"binary-expr","locations":[{"start":{"line":1104,"column":5},"end":{"line":1104,"column":43}},{"start":{"line":1104,"column":47},"end":{"line":1104,"column":83}},{"start":{"line":1104,"column":87},"end":{"line":1104,"column":119}}]},"167":{"line":1106,"type":"if","locations":[{"start":{"line":1106,"column":9},"end":{"line":1106,"column":9}},{"start":{"line":1106,"column":9},"end":{"line":1106,"column":9}}]},"168":{"line":1106,"type":"binary-expr","locations":[{"start":{"line":1106,"column":12},"end":{"line":1106,"column":52}},{"start":{"line":1106,"column":56},"end":{"line":1106,"column":94}},{"start":{"line":1106,"column":98},"end":{"line":1106,"column":130}}]},"169":{"line":1108,"type":"if","locations":[{"start":{"line":1108,"column":9},"end":{"line":1108,"column":9}},{"start":{"line":1108,"column":9},"end":{"line":1108,"column":9}}]},"170":{"line":1108,"type":"binary-expr","locations":[{"start":{"line":1108,"column":12},"end":{"line":1108,"column":50}},{"start":{"line":1108,"column":54},"end":{"line":1108,"column":92}},{"start":{"line":1108,"column":96},"end":{"line":1108,"column":132}},{"start":{"line":1108,"column":136},"end":{"line":1108,"column":168}}]},"171":{"line":1115,"type":"if","locations":[{"start":{"line":1115,"column":2},"end":{"line":1115,"column":2}},{"start":{"line":1115,"column":2},"end":{"line":1115,"column":2}}]},"172":{"line":1117,"type":"if","locations":[{"start":{"line":1117,"column":2},"end":{"line":1117,"column":2}},{"start":{"line":1117,"column":2},"end":{"line":1117,"column":2}}]},"173":{"line":1120,"type":"if","locations":[{"start":{"line":1120,"column":2},"end":{"line":1120,"column":2}},{"start":{"line":1120,"column":2},"end":{"line":1120,"column":2}}]},"174":{"line":1144,"type":"if","locations":[{"start":{"line":1144,"column":2},"end":{"line":1144,"column":2}},{"start":{"line":1144,"column":2},"end":{"line":1144,"column":2}}]},"175":{"line":1144,"type":"binary-expr","locations":[{"start":{"line":1144,"column":5},"end":{"line":1144,"column":42}},{"start":{"line":1144,"column":46},"end":{"line":1144,"column":68}}]},"176":{"line":1149,"type":"if","locations":[{"start":{"line":1149,"column":2},"end":{"line":1149,"column":2}},{"start":{"line":1149,"column":2},"end":{"line":1149,"column":2}}]},"177":{"line":1155,"type":"if","locations":[{"start":{"line":1155,"column":2},"end":{"line":1155,"column":2}},{"start":{"line":1155,"column":2},"end":{"line":1155,"column":2}}]},"178":{"line":1156,"type":"if","locations":[{"start":{"line":1156,"column":4},"end":{"line":1156,"column":4}},{"start":{"line":1156,"column":4},"end":{"line":1156,"column":4}}]},"179":{"line":1156,"type":"binary-expr","locations":[{"start":{"line":1156,"column":7},"end":{"line":1156,"column":43}},{"start":{"line":1156,"column":47},"end":{"line":1156,"column":93}}]},"180":{"line":1158,"type":"if","locations":[{"start":{"line":1158,"column":11},"end":{"line":1158,"column":11}},{"start":{"line":1158,"column":11},"end":{"line":1158,"column":11}}]},"181":{"line":1158,"type":"binary-expr","locations":[{"start":{"line":1158,"column":14},"end":{"line":1158,"column":52}},{"start":{"line":1158,"column":56},"end":{"line":1158,"column":101}}]},"182":{"line":1171,"type":"if","locations":[{"start":{"line":1171,"column":2},"end":{"line":1171,"column":2}},{"start":{"line":1171,"column":2},"end":{"line":1171,"column":2}}]},"183":{"line":1184,"type":"if","locations":[{"start":{"line":1184,"column":6},"end":{"line":1184,"column":6}},{"start":{"line":1184,"column":6},"end":{"line":1184,"column":6}}]},"184":{"line":1186,"type":"if","locations":[{"start":{"line":1186,"column":6},"end":{"line":1186,"column":6}},{"start":{"line":1186,"column":6},"end":{"line":1186,"column":6}}]},"185":{"line":1191,"type":"if","locations":[{"start":{"line":1191,"column":8},"end":{"line":1191,"column":8}},{"start":{"line":1191,"column":8},"end":{"line":1191,"column":8}}]},"186":{"line":1205,"type":"if","locations":[{"start":{"line":1205,"column":4},"end":{"line":1205,"column":4}},{"start":{"line":1205,"column":4},"end":{"line":1205,"column":4}}]},"187":{"line":1238,"type":"if","locations":[{"start":{"line":1238,"column":2},"end":{"line":1238,"column":2}},{"start":{"line":1238,"column":2},"end":{"line":1238,"column":2}}]},"188":{"line":1259,"type":"if","locations":[{"start":{"line":1259,"column":2},"end":{"line":1259,"column":2}},{"start":{"line":1259,"column":2},"end":{"line":1259,"column":2}}]},"189":{"line":1264,"type":"if","locations":[{"start":{"line":1264,"column":6},"end":{"line":1264,"column":6}},{"start":{"line":1264,"column":6},"end":{"line":1264,"column":6}}]},"190":{"line":1274,"type":"if","locations":[{"start":{"line":1274,"column":6},"end":{"line":1274,"column":6}},{"start":{"line":1274,"column":6},"end":{"line":1274,"column":6}}]},"191":{"line":1278,"type":"if","locations":[{"start":{"line":1278,"column":8},"end":{"line":1278,"column":8}},{"start":{"line":1278,"column":8},"end":{"line":1278,"column":8}}]},"192":{"line":1302,"type":"binary-expr","locations":[{"start":{"line":1302,"column":18},"end":{"line":1302,"column":31}},{"start":{"line":1302,"column":35},"end":{"line":1302,"column":37}}]},"193":{"line":1303,"type":"binary-expr","locations":[{"start":{"line":1303,"column":20},"end":{"line":1303,"column":47}},{"start":{"line":1303,"column":51},"end":{"line":1303,"column":64}}]}},"code":["\"use strict\"","","var inherits = require('util').inherits,","  f = require('util').format,","  EventEmitter = require('events').EventEmitter,","  ReadPreference = require('./read_preference'),","  BasicCursor = require('../cursor'),","  retrieveBSON = require('../connection/utils').retrieveBSON,","  Logger = require('../connection/logger'),","  MongoError = require('../error'),","  Server = require('./server'),","  ReplSetState = require('./replset_state'),","  assign = require('./shared').assign,","  clone = require('./shared').clone,","  createClientInfo = require('./shared').createClientInfo;","","var MongoCR = require('../auth/mongocr')","  , X509 = require('../auth/x509')","  , Plain = require('../auth/plain')","  , GSSAPI = require('../auth/gssapi')","  , SSPI = require('../auth/sspi')","  , ScramSHA1 = require('../auth/scram');","","var BSON = retrieveBSON();","","//","// States","var DISCONNECTED = 'disconnected';","var CONNECTING = 'connecting';","var CONNECTED = 'connected';","var UNREFERENCED = 'unreferenced';","var DESTROYED = 'destroyed';","","function stateTransition(self, newState) {","  var legalTransitions = {","    'disconnected': [CONNECTING, DESTROYED, DISCONNECTED],","    'connecting': [CONNECTING, DESTROYED, CONNECTED, DISCONNECTED],","    'connected': [CONNECTED, DISCONNECTED, DESTROYED, UNREFERENCED],","    'unreferenced': [UNREFERENCED, DESTROYED],","    'destroyed': [DESTROYED]","  }","","  // Get current state","  var legalStates = legalTransitions[self.state];","  if(legalStates && legalStates.indexOf(newState) != -1) {","    self.state = newState;","  } else {","    self.s.logger.error(f('Pool with id [%s] failed attempted illegal state transition from [%s] to [%s] only following state allowed [%s]'","      , self.id, self.state, newState, legalStates));","  }","}","","//","// ReplSet instance id","var id = 1;","var handlers = ['connect', 'close', 'error', 'timeout', 'parseError'];","","/**"," * Creates a new Replset instance"," * @class"," * @param {array} seedlist A list of seeds for the replicaset"," * @param {boolean} options.setName The Replicaset set name"," * @param {boolean} [options.secondaryOnlyConnectionAllowed=false] Allow connection to a secondary only replicaset"," * @param {number} [options.haInterval=10000] The High availability period for replicaset inquiry"," * @param {boolean} [options.emitError=false] Server will emit errors events"," * @param {Cursor} [options.cursorFactory=Cursor] The cursor factory class used for all query cursors"," * @param {number} [options.size=5] Server connection pool size"," * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled"," * @param {number} [options.keepAliveInitialDelay=0] Initial delay before TCP keep alive enabled"," * @param {boolean} [options.noDelay=true] TCP Connection no delay"," * @param {number} [options.connectionTimeout=10000] TCP Connection timeout setting"," * @param {number} [options.socketTimeout=0] TCP Socket timeout setting"," * @param {boolean} [options.singleBufferSerializtion=true] Serialize into single buffer, trade of peak memory for serialization speed"," * @param {boolean} [options.ssl=false] Use SSL for connection"," * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function."," * @param {Buffer} [options.ca] SSL Certificate store binary buffer"," * @param {Buffer} [options.crl] SSL Certificate revocation store binary buffer"," * @param {Buffer} [options.cert] SSL Certificate binary buffer"," * @param {Buffer} [options.key] SSL Key file binary buffer"," * @param {string} [options.passphrase] SSL Certificate pass phrase"," * @param {string} [options.servername=null] String containing the server name requested via TLS SNI."," * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates"," * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits"," * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types."," * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers."," * @param {number} [options.pingInterval=5000] Ping interval to check the response time to the different servers"," * @param {number} [options.localThresholdMS=15] Cutoff latency point in MS for Replicaset member selection"," * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit."," * @return {ReplSet} A cursor instance"," * @fires ReplSet#connect"," * @fires ReplSet#ha"," * @fires ReplSet#joined"," * @fires ReplSet#left"," * @fires ReplSet#failed"," * @fires ReplSet#fullsetup"," * @fires ReplSet#all"," * @fires ReplSet#error"," * @fires ReplSet#serverHeartbeatStarted"," * @fires ReplSet#serverHeartbeatSucceeded"," * @fires ReplSet#serverHeartbeatFailed"," * @fires ReplSet#topologyOpening"," * @fires ReplSet#topologyClosed"," * @fires ReplSet#topologyDescriptionChanged"," * @property {string} type the topology type."," * @property {string} parserType the parser type used (c++ or js)."," */","var ReplSet = function(seedlist, options) {","  var self = this;","  options = options || {};","","  // Validate seedlist","  if(!Array.isArray(seedlist)) throw new MongoError(\"seedlist must be an array\");","  // Validate list","  if(seedlist.length == 0) throw new MongoError(\"seedlist must contain at least one entry\");","  // Validate entries","  seedlist.forEach(function(e) {","    if(typeof e.host != 'string' || typeof e.port != 'number')","      throw new MongoError(\"seedlist entry must contain a host and port\");","  });","","  // Add event listener","  EventEmitter.call(this);","","  // Get replSet Id","  this.id = id++;","","  // Get the localThresholdMS","  var localThresholdMS = options.localThresholdMS || 15;","  // Backward compatibility","  if(options.acceptableLatency) localThresholdMS = options.acceptableLatency;","","  // Create a logger","  var logger = Logger('ReplSet', options);","","  // Internal state","  this.s = {","    options: assign({}, options),","    // BSON instance","    bson: options.bson || new BSON([BSON.Binary, BSON.Code, BSON.DBRef, BSON.Decimal128,","      BSON.Double, BSON.Int32, BSON.Long, BSON.Map, BSON.MaxKey, BSON.MinKey,","      BSON.ObjectId, BSON.BSONRegExp, BSON.Symbol, BSON.Timestamp]),","    // Factory overrides","    Cursor: options.cursorFactory || BasicCursor,","    // Logger instance","    logger: logger,","    // Seedlist","    seedlist: seedlist,","    // Replicaset state","    replicaSetState: new ReplSetState({","      id: this.id, setName: options.setName,","      acceptableLatency: localThresholdMS,","      heartbeatFrequencyMS: options.haInterval ? options.haInterval : 10000,","      logger: logger","    }),","    // Current servers we are connecting to","    connectingServers: [],","    // Ha interval","    haInterval: options.haInterval ? options.haInterval : 10000,","    // Minimum heartbeat frequency used if we detect a server close","    minHeartbeatFrequencyMS: 500,","    // Disconnect handler","    disconnectHandler: options.disconnectHandler,","    // Server selection index","    index: 0,","    // Connect function options passed in","    connectOptions: {},","    // Are we running in debug mode","    debug: typeof options.debug == 'boolean' ? options.debug : false,","    // Client info","    clientInfo: createClientInfo(options),","    // Authentication context","    authenticationContexts: [],","  }","","  // Add handler for topology change","  this.s.replicaSetState.on('topologyDescriptionChanged', function(r) { self.emit('topologyDescriptionChanged', r); });","","  // Log info warning if the socketTimeout < haInterval as it will cause","  // a lot of recycled connections to happen.","  if(this.s.logger.isWarn()","    && this.s.options.socketTimeout != 0","    && this.s.options.socketTimeout < this.s.haInterval) {","      this.s.logger.warn(f('warning socketTimeout %s is less than haInterval %s. This might cause unnecessary server reconnections due to socket timeouts'","        , this.s.options.socketTimeout, this.s.haInterval));","  }","","  // All the authProviders","  this.authProviders = options.authProviders || {","      'mongocr': new MongoCR(this.s.bson), 'x509': new X509(this.s.bson)","    , 'plain': new Plain(this.s.bson), 'gssapi': new GSSAPI(this.s.bson)","    , 'sspi': new SSPI(this.s.bson), 'scram-sha-1': new ScramSHA1(this.s.bson)","  }","","  // Add forwarding of events from state handler","  var types = ['joined', 'left'];","  types.forEach(function(x) {","    self.s.replicaSetState.on(x, function(t, s) {","      self.emit(x, t, s);","    });","  });","","  // Connect stat","  this.initialConnectState = {","    connect: false, fullsetup: false, all: false","  }","","  // Disconnected state","  this.state = DISCONNECTED;","  this.haTimeoutId = null;","  // Are we authenticating","  this.authenticating = false;","  // Last ismaster","  this.ismaster = null;","  // Contains the intervalId","  this.intervalIds = [];","}","","inherits(ReplSet, EventEmitter);","","Object.defineProperty(ReplSet.prototype, 'type', {","  enumerable:true, get: function() { return 'replset'; }","});","","Object.defineProperty(ReplSet.prototype, 'parserType', {","  enumerable:true, get: function() {","    return BSON.native ? \"c++\" : \"js\";","  }","});","","function rexecuteOperations(self) {","  // If we have a primary and a disconnect handler, execute","  // buffered operations","  if(self.s.replicaSetState.hasPrimaryAndSecondary() && self.s.disconnectHandler) {","    self.s.disconnectHandler.execute();","  } else if(self.s.replicaSetState.hasPrimary() && self.s.disconnectHandler) {","    self.s.disconnectHandler.execute({ executePrimary:true });","  } else if(self.s.replicaSetState.hasSecondary() && self.s.disconnectHandler) {","    self.s.disconnectHandler.execute({ executeSecondary:true });","  }","}","","function connectNewServers(self, servers, callback) {","  // Count lefts","  var count = servers.length;","  var error = null;","","  // Handle events","  var _handleEvent = function(self, event) {","    return function(err) {","      var _self = this;","      count = count - 1;","","      // Destroyed","      if(self.state == DESTROYED || self.state == UNREFERENCED) {","        return this.destroy();","      }","","      if(event == 'connect' && !self.authenticating) {","        // Destroyed","        if(self.state == DESTROYED || self.state == UNREFERENCED) {","          return _self.destroy();","        }","","        // Do we have authentication contexts that need to be applied","        applyAuthenticationContexts(self, _self, function() {","          // Destroy the instance","          if(self.state == DESTROYED || self.state == UNREFERENCED) {","            return _self.destroy();","          }","","          // Update the state","          var result = self.s.replicaSetState.update(_self);","          // Update the state with the new server","          if(result) {","            // Primary lastIsMaster store it","            if(_self.lastIsMaster() && _self.lastIsMaster().ismaster) {","              self.ismaster = _self.lastIsMaster();","            }","","            // Remove the handlers","            for(var i = 0; i < handlers.length; i++) {","              _self.removeAllListeners(handlers[i]);","            }","","            // Add stable state handlers","            _self.on('error', handleEvent(self, 'error'));","            _self.on('close', handleEvent(self, 'close'));","            _self.on('timeout', handleEvent(self, 'timeout'));","            _self.on('parseError', handleEvent(self, 'parseError'));","","            // Rexecute any stalled operation","            rexecuteOperations(self);","          } else {","            _self.destroy();","          }","        });","      } else if(event == 'connect' && self.authenticating) {","        this.destroy();","      } else if(event == 'error') {","        error = err;","      }","","      // Rexecute any stalled operation","      rexecuteOperations(self);","","      // Are we done finish up callback","      if(count == 0) { callback(error); }","    }","  }","","  // No new servers","  if(count == 0) return callback();","","  // Execute method","  function execute(_server, i) {","    setTimeout(function() {","      // Destroyed","      if(self.state == DESTROYED || self.state == UNREFERENCED) {","        return;","      }","","      // Create a new server instance","      var server = new Server(assign({}, self.s.options, {","        host: _server.split(':')[0],","        port: parseInt(_server.split(':')[1], 10)","      }, {","        authProviders: self.authProviders, reconnect:false, monitoring: false, inTopology: true","      }, {","        clientInfo: clone(self.s.clientInfo)","      }));","","      // Add temp handlers","      server.once('connect', _handleEvent(self, 'connect'));","      server.once('close', _handleEvent(self, 'close'));","      server.once('timeout', _handleEvent(self, 'timeout'));","      server.once('error', _handleEvent(self, 'error'));","      server.once('parseError', _handleEvent(self, 'parseError'));","","      // SDAM Monitoring events","      server.on('serverOpening', function(e) { self.emit('serverOpening', e); });","      server.on('serverDescriptionChanged', function(e) { self.emit('serverDescriptionChanged', e); });","      server.on('serverClosed', function(e) { self.emit('serverClosed', e); });","      server.connect(self.s.connectOptions);","    }, i);","  }","","  // Create new instances","  for(var i = 0; i < servers.length; i++) {","    execute(servers[i], i);","  }","}","","// Ping the server","var pingServer = function(self, server, cb) {","  // Measure running time","  var start = new Date().getTime();","","  // Emit the server heartbeat start","  emitSDAMEvent(self, 'serverHeartbeatStarted', { connectionId: server.name });","","  // Execute ismaster","  // Set the socketTimeout for a monitoring message to a low number","  // Ensuring ismaster calls are timed out quickly","  server.command('admin.$cmd', {","    ismaster:true","  }, {","    monitoring: true,","    socketTimeout: self.s.options.connectionTimeout || 2000,","  }, function(err, r) {","    if(self.state == DESTROYED || self.state == UNREFERENCED) {","      server.destroy();","      return cb(err, r);","    }","","    // Calculate latency","    var latencyMS = new Date().getTime() - start;","    // Set the last updatedTime","    var hrTime = process.hrtime();","    // Calculate the last update time","    server.lastUpdateTime = hrTime[0] * 1000 + Math.round(hrTime[1]/1000);","","    // We had an error, remove it from the state","    if(err) {","      // Emit the server heartbeat failure","      emitSDAMEvent(self, 'serverHeartbeatFailed', { durationMS: latencyMS, failure: err, connectionId: server.name });","","      // Remove server from the state","      self.s.replicaSetState.remove(server);","    } else {","      // Update the server ismaster","      server.ismaster = r.result;","","      // Check if we have a lastWriteDate convert it to MS","      // and store on the server instance for later use","      if(server.ismaster.lastWrite && server.ismaster.lastWrite.lastWriteDate) {","        server.lastWriteDate = server.ismaster.lastWrite.lastWriteDate.getTime();","      }","","      // Do we have a brand new server","      if(server.lastIsMasterMS == -1) {","        server.lastIsMasterMS = latencyMS;","      } else if(server.lastIsMasterMS) {","        // After the first measurement, average RTT MUST be computed using an","        // exponentially-weighted moving average formula, with a weighting factor (alpha) of 0.2.","        // If the prior average is denoted old_rtt, then the new average (new_rtt) is","        // computed from a new RTT measurement (x) using the following formula:","        // alpha = 0.2","        // new_rtt = alpha * x + (1 - alpha) * old_rtt","        server.lastIsMasterMS = 0.2 * latencyMS + (1 - 0.2) * server.lastIsMasterMS;","      }","","      if(self.s.replicaSetState.update(server)) {","        // Primary lastIsMaster store it","        if(server.lastIsMaster() && server.lastIsMaster().ismaster) {","          self.ismaster = server.lastIsMaster();","        }","      }","","      // Server heart beat event","      emitSDAMEvent(self, 'serverHeartbeatSucceeded', { durationMS: latencyMS, reply: r.result, connectionId: server.name });","    }","","    // Calculate the stalness for this server","    self.s.replicaSetState.updateServerMaxStaleness(server, self.s.haInterval);","","    // Callback","    cb(err, r);","  });","}","","function topologyMonitor(self, options) {","  if(self.state == DESTROYED || self.state == UNREFERENCED) return;","  options = options || {};","","  var servers = Object.keys(self.s.replicaSetState.set);","","  // Get the haInterval","  var _process = options.haInterval ? setTimeout : setInterval;","  var _haInterval = options.haInterval ? options.haInterval : self.s.haInterval;","","  // Count of initial sweep servers to check","  var count = servers.length;","","  // Each server is monitored in parallel in their own timeout loop","  var monitorServer = function(_host, _self, _options) {","    var intervalId = _process(function() {","      if(self.state == DESTROYED || self.state == UNREFERENCED) {","        clearInterval(intervalId);","        return;","      }","","      // Adjust the count","      count = count - 1;","","      // Do we already have server connection available for this host","      var _server = _self.s.replicaSetState.get(_host);","","      // Check if we have a known server connection and reuse","      if(_server) {","        return pingServer(_self, _server, function(err) {","          if(self.state == DESTROYED || self.state == UNREFERENCED) {","            clearInterval(intervalId);","            return;","          }","","          // Initial sweep","          if(_process === setTimeout) {","            if(_self.state == CONNECTING && (","              (","                self.s.replicaSetState.hasSecondary()","                && self.s.options.secondaryOnlyConnectionAllowed","              )","              || self.s.replicaSetState.hasPrimary()","            )) {","              _self.state = CONNECTED;","","              // Emit connected sign","              process.nextTick(function() {","                self.emit('connect', self);","              });","","              // Start topology interval check","              topologyMonitor(_self, {});","            }","          } else {","            if(_self.state == DISCONNECTED && (","              (","                self.s.replicaSetState.hasSecondary()","                && self.s.options.secondaryOnlyConnectionAllowed","              )","              || self.s.replicaSetState.hasPrimary()","            )) {","              _self.state = CONNECTED;","","              // Rexecute any stalled operation","              rexecuteOperations(self);","","              // Emit connected sign","              process.nextTick(function() {","                self.emit('reconnect', self);","              });","            }","          }","","          if(self.initialConnectState.connect","            && !self.initialConnectState.fullsetup","            && self.s.replicaSetState.hasPrimaryAndSecondary()) {","              // Set initial connect state","              self.initialConnectState.fullsetup = true;","              self.initialConnectState.all = true;","","              process.nextTick(function() {","                self.emit('fullsetup', self);","                self.emit('all', self);","              });","          }","        });","      }","    }, _haInterval);","","    // Add the intervalId to our list of intervalIds","    self.intervalIds.push(intervalId);","  }","","  if(_process === setTimeout) {","    return connectNewServers(self, self.s.replicaSetState.unknownServers, function(err) {","      if(!self.s.replicaSetState.hasPrimary() && !self.s.options.secondaryOnlyConnectionAllowed) {","        if(err) return self.emit('error', err);","        self.emit('error', new MongoError('no primary found in replicaset'));","        return self.destroy();","      } else if(!self.s.replicaSetState.hasSecondary() && self.s.options.secondaryOnlyConnectionAllowed) {","        if(err) return self.emit('error', err);","        self.emit('error', new MongoError('no secondary found in replicaset'));","        return self.destroy();","      }","","      for(var i = 0; i < servers.length; i++) {","        monitorServer(servers[i], self, options);","      }","    });","  } else {","    for(var i = 0; i < servers.length; i++) {","      monitorServer(servers[i], self, options);","    }","  }","","  // Run the reconnect process","  function executeReconnect(self) {","    return function() {","      if(self.state == DESTROYED || self.state == UNREFERENCED) {","        return;","      }","","      connectNewServers(self, self.s.replicaSetState.unknownServers, function() {","        if(self.s.replicaSetState.hasPrimary()) {","          self.intervalIds.push(setTimeout(executeReconnect(self), _haInterval));","        } else {","          self.intervalIds.push(setTimeout(executeReconnect(self), self.s.minHeartbeatFrequencyMS));","        }","      });","    }","  }","","  // Decide what kind of interval to use","  var intervalTime = !self.s.replicaSetState.hasPrimary()","    ? self.s.minHeartbeatFrequencyMS","    : _haInterval","","  self.intervalIds.push(setTimeout(executeReconnect(self), intervalTime));","}","","function addServerToList(list, server) {","  for(var i = 0; i < list.length; i++) {","    if(list[i].name.toLowerCase() === server.name.toLowerCase()) return true;","  }","","  list.push(server);","}","","function handleEvent(self, event) {","  return function() {","    if(self.state == DESTROYED || self.state == UNREFERENCED) return;","    // Debug log","    if(self.s.logger.isDebug()) {","      self.s.logger.debug(f('handleEvent %s from server %s in replset with id %s', event, this.name, self.id));","    }","","    // Remove from the replicaset state","    self.s.replicaSetState.remove(this);","","    // Are we in a destroyed state return","    if(self.state == DESTROYED || self.state == UNREFERENCED) return;","","    // If no primary and secondary available","    if(!self.s.replicaSetState.hasPrimary()","      && !self.s.replicaSetState.hasSecondary()","      && self.s.options.secondaryOnlyConnectionAllowed) {","      stateTransition(self, DISCONNECTED);","    } else if(!self.s.replicaSetState.hasPrimary()) {","      stateTransition(self, DISCONNECTED);","    }","","    addServerToList(self.s.connectingServers, this);","  }","}","","function applyAuthenticationContexts(self, server, callback) {","  if(self.s.authenticationContexts.length == 0) {","    return callback();","  }","","  // Do not apply any auth contexts if it's an arbiter","  if(server.lastIsMaster() && server.lastIsMaster().arbiterOnly) {","    return callback();","  }","","  // Copy contexts to ensure no modificiation in the middle of","  // auth process.","  var authContexts = self.s.authenticationContexts.slice(0);","","  // Apply one of the contexts","  function applyAuth(authContexts, server, callback) {","    if(authContexts.length == 0) return callback();","    // Get the first auth context","    var authContext = authContexts.shift();","    // Copy the params","    var customAuthContext = authContext.slice(0);","    // Push our callback handler","    customAuthContext.push(function(err) {","      applyAuth(authContexts, server, callback);","    });","","    // Attempt authentication","    server.auth.apply(server, customAuthContext)","  }","","  // Apply all auth contexts","  applyAuth(authContexts, server, callback);","}","","function handleInitialConnectEvent(self, event) {","  return function() {","    var _this = this;","    // Debug log","    if(self.s.logger.isDebug()) {","      self.s.logger.debug(f('handleInitialConnectEvent %s from server %s in replset with id %s', event, this.name, self.id));","    }","","    // Destroy the instance","    if(self.state == DESTROYED || self.state == UNREFERENCED) {","      return this.destroy();","    }","","    // Check the type of server","    if(event == 'connect') {","      // Do we have authentication contexts that need to be applied","      applyAuthenticationContexts(self, _this, function() {","        // Destroy the instance","        if(self.state == DESTROYED || self.state == UNREFERENCED) {","          return _this.destroy();","        }","","        // Update the state","        var result = self.s.replicaSetState.update(_this);","        if(result == true) {","          // Primary lastIsMaster store it","          if(_this.lastIsMaster() && _this.lastIsMaster().ismaster) {","            self.ismaster = _this.lastIsMaster();","          }","","          // Debug log","          if(self.s.logger.isDebug()) {","            self.s.logger.debug(f('handleInitialConnectEvent %s from server %s in replset with id %s has state [%s]', event, _this.name, self.id, JSON.stringify(self.s.replicaSetState.set)));","          }","","          // Remove the handlers","          for(var i = 0; i < handlers.length; i++) {","            _this.removeAllListeners(handlers[i]);","          }","","          // Add stable state handlers","          _this.on('error', handleEvent(self, 'error'));","          _this.on('close', handleEvent(self, 'close'));","          _this.on('timeout', handleEvent(self, 'timeout'));","          _this.on('parseError', handleEvent(self, 'parseError'));","","          // Do we have a primary or primaryAndSecondary","          if(self.state === CONNECTING && self.s.replicaSetState.hasPrimary()","            || (self.s.replicaSetState.hasSecondary() && self.s.options.secondaryOnlyConnectionAllowed)) {","            // We are connected","            self.state = CONNECTED;","","            // Set initial connect state","            self.initialConnectState.connect = true;","            // Emit connect event","            process.nextTick(function() {","              self.emit('connect', self);","            });","","            topologyMonitor(self, {});","          }","        } else if(result instanceof MongoError) {","          _this.destroy();","          self.destroy();","          return self.emit('error', result);","        } else {","          _this.destroy();","        }","      });","    } else {","      // Emit failure to connect","      self.emit('failed', this);","","      addServerToList(self.s.connectingServers, this);","      // Remove from the state","      self.s.replicaSetState.remove(this);","    }","","    if(self.initialConnectState.connect","      && !self.initialConnectState.fullsetup","      && self.s.replicaSetState.hasPrimaryAndSecondary()) {","        // Set initial connect state","        self.initialConnectState.fullsetup = true;","        self.initialConnectState.all = true;","","        process.nextTick(function() {","          self.emit('fullsetup', self);","          self.emit('all', self);","        });","    }","","    // Remove from the list from connectingServers","    for(var i = 0; i < self.s.connectingServers.length; i++) {","      if(self.s.connectingServers[i].equals(this)) {","        self.s.connectingServers.splice(i, 1);","      }","    }","","    // Trigger topologyMonitor","    if(self.s.connectingServers.length == 0 && self.state == CONNECTING) {","      topologyMonitor(self, {haInterval: 1});","    }","  };","}","","function connectServers(self, servers) {","  // Update connectingServers","  self.s.connectingServers = self.s.connectingServers.concat(servers);","","  // Index used to interleaf the server connects, avoiding","  // runtime issues on io constrained vm's","  var timeoutInterval = 0;","","  function connect(server, timeoutInterval) {","    setTimeout(function() {","      // Add the server to the state","      if(self.s.replicaSetState.update(server)) {","        // Primary lastIsMaster store it","        if(server.lastIsMaster() && server.lastIsMaster().ismaster) {","          self.ismaster = server.lastIsMaster();","        }","      }","","      // Add event handlers","      server.once('close', handleInitialConnectEvent(self, 'close'));","      server.once('timeout', handleInitialConnectEvent(self, 'timeout'));","      server.once('parseError', handleInitialConnectEvent(self, 'parseError'));","      server.once('error', handleInitialConnectEvent(self, 'error'));","      server.once('connect', handleInitialConnectEvent(self, 'connect'));","      // SDAM Monitoring events","      server.on('serverOpening', function(e) { self.emit('serverOpening', e); });","      server.on('serverDescriptionChanged', function(e) { self.emit('serverDescriptionChanged', e); });","      server.on('serverClosed', function(e) { self.emit('serverClosed', e); });","      // Start connection","      server.connect(self.s.connectOptions);","    }, timeoutInterval);","  }","","  // Start all the servers","  while(servers.length > 0) {","    connect(servers.shift(), timeoutInterval++);","  }","}","","/**"," * Emit event if it exists"," * @method"," */","function emitSDAMEvent(self, event, description) {","  if(self.listeners(event).length > 0) {","    self.emit(event, description);","  }","}","","/**"," * Initiate server connect"," * @method"," * @param {array} [options.auth=null] Array of auth options to apply on connect"," */","ReplSet.prototype.connect = function(options) {","  var self = this;","  // Add any connect level options to the internal state","  this.s.connectOptions = options || {};","  // Set connecting state","  stateTransition(this, CONNECTING);","  // Create server instances","  var servers = this.s.seedlist.map(function(x) {","    return new Server(assign({}, self.s.options, x, {","      authProviders: self.authProviders, reconnect:false, monitoring:false, inTopology: true","    }, {","      clientInfo: clone(self.s.clientInfo)","    }));","  });","","  // Error out as high availbility interval must be < than socketTimeout","  if(this.s.options.socketTimeout > 0 && this.s.options.socketTimeout <= this.s.options.haInterval) {","    return self.emit('error', new MongoError(f(\"haInterval [%s] MS must be set to less than socketTimeout [%s] MS\"","      , this.s.options.haInterval, this.s.options.socketTimeout)));","  }","","  // Emit the topology opening event","  emitSDAMEvent(this, 'topologyOpening', { topologyId: this.id });","  // Start all server connections","  connectServers(self, servers);","}","","/**"," * Destroy the server connection"," * @param {boolean} [options.force=false] Force destroy the pool"," * @method"," */","ReplSet.prototype.destroy = function(options) {","  options = options || {};","  // Transition state","  stateTransition(this, DESTROYED);","  // Clear out any monitoring process","  if(this.haTimeoutId) clearTimeout(this.haTimeoutId);","  // Destroy the replicaset","  this.s.replicaSetState.destroy(options);","  // Clear out authentication contexts","  this.s.authenticationContexts = [];","","  // Destroy all connecting servers","  this.s.connectingServers.forEach(function(x) {","    x.destroy(options);","  });","","  // Clear out all monitoring","  for(var i = 0; i < this.intervalIds.length; i++) {","    clearInterval(this.intervalIds[i]);","    clearTimeout(this.intervalIds[i]);","  }","","  // Reset list of intervalIds","  this.intervalIds = [];","","  // Emit toplogy closing event","  emitSDAMEvent(this, 'topologyClosed', { topologyId: this.id });","}","","/**"," * Unref all connections belong to this server"," * @method"," */","ReplSet.prototype.unref = function() {","  // Transition state","  stateTransition(this, UNREFERENCED);","","  this.s.replicaSetState.allServers().forEach(function(x) {","    x.unref();","  });","","  clearTimeout(this.haTimeoutId);","}","","/**"," * Returns the last known ismaster document for this server"," * @method"," * @return {object}"," */","ReplSet.prototype.lastIsMaster = function() {","  // If secondaryOnlyConnectionAllowed and no primary but secondary","  // return the secondaries ismaster result.","  if (this.s.options.secondaryOnlyConnectionAllowed","    && !this.s.replicaSetState.hasPrimary()","    && this.s.replicaSetState.hasSecondary()) {","      return this.s.replicaSetState.secondaries[0].lastIsMaster();","    }","","  return this.s.replicaSetState.primary","    ? this.s.replicaSetState.primary.lastIsMaster() : this.ismaster;","}","","/**"," * All raw connections"," * @method"," * @return {Connection[]}"," */","ReplSet.prototype.connections = function() {","  var servers = this.s.replicaSetState.allServers();","  var connections = [];","  for(var i = 0; i < servers.length; i++) {","    connections = connections.concat(servers[i].connections());","  }","","  return connections;","}","","/**"," * Figure out if the server is connected"," * @method"," * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it"," * @return {boolean}"," */","ReplSet.prototype.isConnected = function(options) {","  options = options || {};","","  // If we are authenticating signal not connected","  // To avoid interleaving of operations","  if(this.authenticating) return false;","","  // If we specified a read preference check if we are connected to something","  // than can satisfy this","  if(options.readPreference","    && options.readPreference.equals(ReadPreference.secondary)) {","    return this.s.replicaSetState.hasSecondary();","  }","","  if(options.readPreference","    && options.readPreference.equals(ReadPreference.primary)) {","    return this.s.replicaSetState.hasPrimary();","  }","","  if(options.readPreference","    && options.readPreference.equals(ReadPreference.primaryPreferred)) {","    return this.s.replicaSetState.hasSecondary() || this.s.replicaSetState.hasPrimary();","  }","","  if(options.readPreference","    && options.readPreference.equals(ReadPreference.secondaryPreferred)) {","    return this.s.replicaSetState.hasSecondary() || this.s.replicaSetState.hasPrimary();","  }","","  if(this.s.options.secondaryOnlyConnectionAllowed","    && this.s.replicaSetState.hasSecondary()) {","      return true;","  }","","  return this.s.replicaSetState.hasPrimary();","}","","/**"," * Figure out if the replicaset instance was destroyed by calling destroy"," * @method"," * @return {boolean}"," */","ReplSet.prototype.isDestroyed = function() {","  return this.state == DESTROYED;","}","","/**"," * Get server"," * @method"," * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it"," * @return {Server}"," */","ReplSet.prototype.getServer = function(options) {","  // Ensure we have no options","  options = options || {};","  // Pick the right server baspickServerd on readPreference","  var server = this.s.replicaSetState.pickServer(options.readPreference);","  if(this.s.debug) this.emit('pickedServer', options.readPreference, server);","  return server;","}","","/**"," * Get a direct connection"," * @method"," * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it"," * @return {Connection}"," */","ReplSet.prototype.getConnection = function(options) {","  var server = this.getServer(options);","  if(server) return server.getConnection();","}","","/**"," * Get all connected servers"," * @method"," * @return {Server[]}"," */","ReplSet.prototype.getServers = function() {","  return this.s.replicaSetState.allServers();","}","","//","// Execute write operation","var executeWriteOperation = function(self, op, ns, ops, options, callback) {","  if(typeof options == 'function') callback = options, options = {}, options = options || {};","  // Ensure we have no options","  options = options || {};","","  // No server returned we had an error","  if(self.s.replicaSetState.primary == null) {","    return callback(new MongoError(\"no primary server found\"));","  }","","  // Execute the command","  self.s.replicaSetState.primary[op](ns, ops, options, callback);","}","","/**"," * Insert one or more documents"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {array} ops An array of documents to insert"," * @param {boolean} [options.ordered=true] Execute in order or out of order"," * @param {object} [options.writeConcern={}] Write concern for the operation"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","ReplSet.prototype.insert = function(ns, ops, options, callback) {","  if(typeof options == 'function') callback = options, options = {}, options = options || {};","  if(this.state == DESTROYED) return callback(new MongoError(f('topology was destroyed')));","","  // Not connected but we have a disconnecthandler","  if(!this.s.replicaSetState.hasPrimary() && this.s.disconnectHandler != null) {","    return this.s.disconnectHandler.add('insert', ns, ops, options, callback);","  }","","  // Execute write operation","  executeWriteOperation(this, 'insert', ns, ops, options, callback);","}","","/**"," * Perform one or more update operations"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {array} ops An array of updates"," * @param {boolean} [options.ordered=true] Execute in order or out of order"," * @param {object} [options.writeConcern={}] Write concern for the operation"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","ReplSet.prototype.update = function(ns, ops, options, callback) {","  if(typeof options == 'function') callback = options, options = {}, options = options || {};","  if(this.state == DESTROYED) return callback(new MongoError(f('topology was destroyed')));","","  // Not connected but we have a disconnecthandler","  if(!this.s.replicaSetState.hasPrimary() && this.s.disconnectHandler != null) {","    return this.s.disconnectHandler.add('update', ns, ops, options, callback);","  }","","  // Execute write operation","  executeWriteOperation(this, 'update', ns, ops, options, callback);","}","","/**"," * Perform one or more remove operations"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {array} ops An array of removes"," * @param {boolean} [options.ordered=true] Execute in order or out of order"," * @param {object} [options.writeConcern={}] Write concern for the operation"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","ReplSet.prototype.remove = function(ns, ops, options, callback) {","  if(typeof options == 'function') callback = options, options = {}, options = options || {};","  if(this.state == DESTROYED) return callback(new MongoError(f('topology was destroyed')));","","  // Not connected but we have a disconnecthandler","  if(!this.s.replicaSetState.hasPrimary() && this.s.disconnectHandler != null) {","    return this.s.disconnectHandler.add('remove', ns, ops, options, callback);","  }","","  // Execute write operation","  executeWriteOperation(this, 'remove', ns, ops, options, callback);","}","","/**"," * Execute a command"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {object} cmd The command hash"," * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it"," * @param {Connection} [options.connection] Specify connection object to execute command against"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","ReplSet.prototype.command = function(ns, cmd, options, callback) {","  if(typeof options == 'function') callback = options, options = {}, options = options || {};","  if(this.state == DESTROYED) return callback(new MongoError(f('topology was destroyed')));","  var self = this;","","  // Establish readPreference","  var readPreference = options.readPreference ? options.readPreference : ReadPreference.primary;","","  // If the readPreference is primary and we have no primary, store it","  if(readPreference.preference == 'primary' && !this.s.replicaSetState.hasPrimary() && this.s.disconnectHandler != null) {","    return this.s.disconnectHandler.add('command', ns, cmd, options, callback);","  } else if(readPreference.preference == 'secondary' && !this.s.replicaSetState.hasSecondary() && this.s.disconnectHandler != null) {","    return this.s.disconnectHandler.add('command', ns, cmd, options, callback);","  } else if(readPreference.preference != 'primary' && !this.s.replicaSetState.hasSecondary() && !this.s.replicaSetState.hasPrimary() && this.s.disconnectHandler != null) {","    return this.s.disconnectHandler.add('command', ns, cmd, options, callback);","  }","","  // Pick a server","  var server = this.s.replicaSetState.pickServer(readPreference);","  // We received an error, return it","  if(!(server instanceof Server)) return callback(server);","  // Emit debug event","  if(self.s.debug) self.emit('pickedServer', ReadPreference.primary, server);","","  // No server returned we had an error","  if(server == null) {","    return callback(new MongoError(f(\"no server found that matches the provided readPreference %s\", readPreference)));","  }","","  // Execute the command","  server.command(ns, cmd, options, callback);","}","","/**"," * Authenticate using a specified mechanism"," * @method"," * @param {string} mechanism The Auth mechanism we are invoking"," * @param {string} db The db we are invoking the mechanism against"," * @param {...object} param Parameters for the specific mechanism"," * @param {authResultCallback} callback A callback function"," */","ReplSet.prototype.auth = function(mechanism, db) {","  var allArgs = Array.prototype.slice.call(arguments, 0).slice(0);","  var self = this;","  var args = Array.prototype.slice.call(arguments, 2);","  var callback = args.pop();","  var currentContextIndex = 0;","","  // If we don't have the mechanism fail","  if(this.authProviders[mechanism] == null && mechanism != 'default') {","    return callback(new MongoError(f(\"auth provider %s does not exist\", mechanism)));","  }","","  // Are we already authenticating, throw","  if(this.authenticating) {","    return callback(new MongoError('authentication or logout allready in process'));","  }","","  // Topology is not connected, save the call in the provided store to be","  // Executed at some point when the handler deems it's reconnected","  if(self.s.disconnectHandler != null) {","    if(!self.s.replicaSetState.hasPrimary() && !self.s.options.secondaryOnlyConnectionAllowed) {","      return self.s.disconnectHandler.add('auth', db, allArgs, {}, callback);","    } else if(!self.s.replicaSetState.hasSecondary() && self.s.options.secondaryOnlyConnectionAllowed) {","      return self.s.disconnectHandler.add('auth', db, allArgs, {}, callback);","    }","  }","","  // Set to authenticating","  this.authenticating = true;","  // All errors","  var errors = [];","","  // Get all the servers","  var servers = this.s.replicaSetState.allServers();","  // No servers return","  if(servers.length == 0) {","    this.authenticating = false;","    callback(null, true);","  }","","  // Authenticate","  function auth(server) {","    // Arguments without a callback","    var argsWithoutCallback = [mechanism, db].concat(args.slice(0));","    // Create arguments","    var finalArguments = argsWithoutCallback.concat([function(err) {","      count = count - 1;","      // Save all the errors","      if(err) errors.push({name: server.name, err: err});","      // We are done","      if(count == 0) {","        // Auth is done","        self.authenticating = false;","","        // Return the auth error","        if(errors.length) {","          // Remove the entry from the stored authentication contexts","          self.s.authenticationContexts.splice(currentContextIndex, 0);","          // Return error","          return callback(MongoError.create({","            message: 'authentication fail', errors: errors","          }), false);","        }","","        // Successfully authenticated session","        callback(null, self);","      }","    }]);","","    if(!server.lastIsMaster().arbiterOnly) {","      // Execute the auth only against non arbiter servers","      server.auth.apply(server, finalArguments);","    } else {","      // If we are authenticating against an arbiter just ignore it","      finalArguments.pop()(null);","    }","  }","","  // Get total count","  var count = servers.length;","","  // Save current context index","  currentContextIndex = this.s.authenticationContexts.length;","","  // Store the auth context and return the last index","  this.s.authenticationContexts.push([mechanism, db].concat(args.slice(0)));","","  // Authenticate against all servers","  while(servers.length > 0) {","    auth(servers.shift());","  }","}","","/**"," * Logout from a database"," * @method"," * @param {string} db The db we are logging out from"," * @param {authResultCallback} callback A callback function"," */","ReplSet.prototype.logout = function(dbName, callback) {","  var self = this;","  // Are we authenticating or logging out, throw","  if(this.authenticating) {","    throw new MongoError('authentication or logout allready in process');","  }","","  // Ensure no new members are processed while logging out","  this.authenticating = true;","","  // Remove from all auth providers (avoid any reaplication of the auth details)","  var providers = Object.keys(this.authProviders);","  for(var i = 0; i < providers.length; i++) {","    this.authProviders[providers[i]].logout(dbName);","  }","","  // Clear out any contexts associated with the db","  self.s.authenticationContexts = self.s.authenticationContexts.filter(function(context) {","    return context[1] !== dbName;","  });","","  // Now logout all the servers","  var servers = this.s.replicaSetState.allServers();","  var count = servers.length;","  if(count == 0) return callback();","  var errors = [];","","  function logoutServer(_server, cb) {","    _server.logout(dbName, function(err) {","      if(err) errors.push({name: _server.name, err: err});","      cb();","    });","  }","","  // Execute logout on all server instances","  for(i = 0; i < servers.length; i++) {","    logoutServer(servers[i], function() {","      count = count - 1;","","      if(count == 0) {","        // Do not block new operations","        self.authenticating = false;","        // If we have one or more errors","        if(errors.length) return callback(MongoError.create({","          message: f('logout failed against db %s', dbName), errors: errors","        }), false);","","        // No errors","        callback();","      }","    })","  }","}","","/**"," * Perform one or more remove operations"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {{object}|{Long}} cmd Can be either a command returning a cursor or a cursorId"," * @param {object} [options.batchSize=0] Batchsize for the operation"," * @param {array} [options.documents=[]] Initial documents list for cursor"," * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","ReplSet.prototype.cursor = function(ns, cmd, cursorOptions) {","  cursorOptions = cursorOptions || {};","  var FinalCursor = cursorOptions.cursorFactory || this.s.Cursor;","  return new FinalCursor(this.s.bson, ns, cmd, cursorOptions, this, this.s.options);","}","","/**"," * A replset connect event, used to verify that the connection is up and running"," *"," * @event ReplSet#connect"," * @type {ReplSet}"," */","","/**"," * A replset reconnect event, used to verify that the topology reconnected"," *"," * @event ReplSet#reconnect"," * @type {ReplSet}"," */","","/**"," * A replset fullsetup event, used to signal that all topology members have been contacted."," *"," * @event ReplSet#fullsetup"," * @type {ReplSet}"," */","","/**"," * A replset all event, used to signal that all topology members have been contacted."," *"," * @event ReplSet#all"," * @type {ReplSet}"," */","","/**"," * A replset failed event, used to signal that initial replset connection failed."," *"," * @event ReplSet#failed"," * @type {ReplSet}"," */","","/**"," * A server member left the replicaset"," *"," * @event ReplSet#left"," * @type {function}"," * @param {string} type The type of member that left (primary|secondary|arbiter)"," * @param {Server} server The server object that left"," */","","/**"," * A server member joined the replicaset"," *"," * @event ReplSet#joined"," * @type {function}"," * @param {string} type The type of member that joined (primary|secondary|arbiter)"," * @param {Server} server The server object that joined"," */","","/**"," * A server opening SDAM monitoring event"," *"," * @event ReplSet#serverOpening"," * @type {object}"," */","","/**"," * A server closed SDAM monitoring event"," *"," * @event ReplSet#serverClosed"," * @type {object}"," */","","/**"," * A server description SDAM change monitoring event"," *"," * @event ReplSet#serverDescriptionChanged"," * @type {object}"," */","","/**"," * A topology open SDAM event"," *"," * @event ReplSet#topologyOpening"," * @type {object}"," */","","/**"," * A topology closed SDAM event"," *"," * @event ReplSet#topologyClosed"," * @type {object}"," */","","/**"," * A topology structure SDAM change event"," *"," * @event ReplSet#topologyDescriptionChanged"," * @type {object}"," */","","/**"," * A topology serverHeartbeatStarted SDAM event"," *"," * @event ReplSet#serverHeartbeatStarted"," * @type {object}"," */","","/**"," * A topology serverHeartbeatFailed SDAM event"," *"," * @event ReplSet#serverHeartbeatFailed"," * @type {object}"," */","","/**"," * A topology serverHeartbeatSucceeded SDAM change event"," *"," * @event ReplSet#serverHeartbeatSucceeded"," * @type {object}"," */","","module.exports = ReplSet;",""],"l":{"3":1,"17":1,"24":1,"28":1,"29":1,"30":1,"31":1,"32":1,"34":1,"35":0,"44":0,"45":0,"46":0,"48":0,"55":1,"56":1,"107":1,"108":0,"109":0,"112":0,"114":0,"116":0,"117":0,"118":0,"122":0,"125":0,"128":0,"130":0,"133":0,"136":0,"176":0,"180":0,"183":0,"188":0,"195":0,"196":0,"197":0,"198":0,"203":0,"208":0,"209":0,"211":0,"213":0,"215":0,"218":1,"220":1,"221":12,"224":1,"226":12,"230":1,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"242":1,"244":0,"245":0,"248":0,"249":0,"250":0,"251":0,"254":0,"255":0,"258":0,"260":0,"261":0,"265":0,"267":0,"268":0,"272":0,"274":0,"276":0,"277":0,"281":0,"282":0,"286":0,"287":0,"288":0,"289":0,"292":0,"294":0,"297":0,"298":0,"299":0,"300":0,"304":0,"307":0,"312":0,"315":1,"316":0,"318":0,"319":0,"323":0,"333":0,"334":0,"335":0,"336":0,"337":0,"340":0,"341":0,"342":0,"343":0,"348":0,"349":0,"354":1,"356":0,"359":0,"364":0,"370":0,"371":0,"372":0,"376":0,"378":0,"380":0,"383":0,"385":0,"388":0,"391":0,"395":0,"396":0,"400":0,"401":0,"402":0,"409":0,"412":0,"414":0,"415":0,"420":0,"424":0,"427":0,"431":1,"432":0,"433":0,"435":0,"438":0,"439":0,"442":0,"445":0,"446":0,"447":0,"448":0,"449":0,"453":0,"456":0,"459":0,"460":0,"461":0,"462":0,"463":0,"467":0,"468":0,"475":0,"478":0,"479":0,"483":0,"486":0,"493":0,"496":0,"499":0,"500":0,"505":0,"509":0,"510":0,"512":0,"513":0,"514":0,"522":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"537":0,"538":0,"542":0,"543":0,"548":1,"549":0,"550":0,"551":0,"554":0,"555":0,"556":0,"558":0,"565":0,"569":0,"572":1,"573":0,"574":0,"577":0,"580":1,"581":0,"582":0,"584":0,"585":0,"589":0,"592":0,"595":0,"598":0,"599":0,"600":0,"603":0,"607":1,"608":0,"609":0,"613":0,"614":0,"619":0,"622":1,"623":0,"625":0,"627":0,"629":0,"630":0,"634":0,"638":0,"641":1,"642":0,"643":0,"645":0,"646":0,"650":0,"651":0,"655":0,"657":0,"659":0,"660":0,"664":0,"665":0,"667":0,"668":0,"672":0,"673":0,"677":0,"678":0,"682":0,"683":0,"684":0,"685":0,"688":0,"691":0,"694":0,"696":0,"697":0,"700":0,"702":0,"703":0,"704":0,"705":0,"707":0,"712":0,"714":0,"716":0,"719":0,"723":0,"724":0,"726":0,"727":0,"728":0,"733":0,"734":0,"735":0,"740":0,"741":0,"746":1,"748":0,"752":0,"754":1,"755":0,"757":0,"759":0,"760":0,"765":0,"766":0,"767":0,"768":0,"769":0,"771":0,"772":0,"773":0,"775":0,"780":0,"781":0,"789":1,"790":0,"791":0,"800":1,"801":0,"803":0,"805":0,"807":0,"808":0,"816":0,"817":0,"822":0,"824":0,"832":1,"833":0,"835":0,"837":0,"839":0,"841":0,"844":0,"845":0,"849":0,"850":0,"851":0,"855":0,"858":0,"865":1,"867":0,"869":0,"870":0,"873":0,"881":1,"884":0,"887":0,"890":0,"899":1,"900":0,"901":0,"902":0,"903":0,"906":0,"915":1,"916":0,"920":0,"924":0,"926":0,"929":0,"931":0,"934":0,"936":0,"939":0,"941":0,"944":0,"946":0,"949":0,"957":1,"958":0,"967":1,"969":0,"971":0,"972":0,"973":0,"982":1,"983":0,"984":0,"992":1,"993":0,"998":1,"999":0,"1001":0,"1004":0,"1005":0,"1009":0,"1023":1,"1024":0,"1025":0,"1028":0,"1029":0,"1033":0,"1047":1,"1048":0,"1049":0,"1052":0,"1053":0,"1057":0,"1071":1,"1072":0,"1073":0,"1076":0,"1077":0,"1081":0,"1095":1,"1096":0,"1097":0,"1098":0,"1101":0,"1104":0,"1105":0,"1106":0,"1107":0,"1108":0,"1109":0,"1113":0,"1115":0,"1117":0,"1120":0,"1121":0,"1125":0,"1136":1,"1137":0,"1138":0,"1139":0,"1140":0,"1141":0,"1144":0,"1145":0,"1149":0,"1150":0,"1155":0,"1156":0,"1157":0,"1158":0,"1159":0,"1164":0,"1166":0,"1169":0,"1171":0,"1172":0,"1173":0,"1177":1,"1179":0,"1181":0,"1182":0,"1184":0,"1186":0,"1188":0,"1191":0,"1193":0,"1195":0,"1201":0,"1205":0,"1207":0,"1210":0,"1215":0,"1218":0,"1221":0,"1224":0,"1225":0,"1235":1,"1236":0,"1238":0,"1239":0,"1243":0,"1246":0,"1247":0,"1248":0,"1252":0,"1253":0,"1257":0,"1258":0,"1259":0,"1260":0,"1262":1,"1263":0,"1264":0,"1265":0,"1270":0,"1271":0,"1272":0,"1274":0,"1276":0,"1278":0,"1283":0,"1301":1,"1302":0,"1303":0,"1304":0,"1423":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/topologies/replset_state.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/topologies/replset_state.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":1,"28":0,"29":1,"30":0,"31":1,"32":0,"33":1,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":1,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":1,"291":0,"292":0,"293":1,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":1,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":1,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":1,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":1,"393":0,"394":0,"395":0,"396":0,"397":1,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":1,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":1,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":1,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":1,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0,0,0,0,0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0,0],"47":[0,0],"48":[0,0],"49":[0,0,0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0,0,0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0,0,0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0,0,0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":19},"end":{"line":22,"column":37}}},"2":{"name":"(anonymous_2)","line":69,"loc":{"start":{"line":69,"column":48},"end":{"line":69,"column":59}}},"3":{"name":"(anonymous_3)","line":73,"loc":{"start":{"line":73,"column":47},"end":{"line":73,"column":58}}},"4":{"name":"(anonymous_4)","line":77,"loc":{"start":{"line":77,"column":36},"end":{"line":77,"column":47}}},"5":{"name":"(anonymous_5)","line":81,"loc":{"start":{"line":81,"column":38},"end":{"line":81,"column":49}}},"6":{"name":"(anonymous_6)","line":85,"loc":{"start":{"line":85,"column":29},"end":{"line":85,"column":44}}},"7":{"name":"(anonymous_7)","line":97,"loc":{"start":{"line":97,"column":36},"end":{"line":97,"column":54}}},"8":{"name":"(anonymous_8)","line":106,"loc":{"start":{"line":106,"column":33},"end":{"line":106,"column":51}}},"9":{"name":"(anonymous_9)","line":109,"loc":{"start":{"line":109,"column":27},"end":{"line":109,"column":39}}},"10":{"name":"(anonymous_10)","line":110,"loc":{"start":{"line":110,"column":24},"end":{"line":110,"column":36}}},"11":{"name":"(anonymous_11)","line":111,"loc":{"start":{"line":111,"column":24},"end":{"line":111,"column":36}}},"12":{"name":"(anonymous_12)","line":112,"loc":{"start":{"line":112,"column":22},"end":{"line":112,"column":34}}},"13":{"name":"(anonymous_13)","line":122,"loc":{"start":{"line":122,"column":32},"end":{"line":122,"column":58}}},"14":{"name":"(anonymous_14)","line":178,"loc":{"start":{"line":178,"column":32},"end":{"line":178,"column":49}}},"15":{"name":"(anonymous_15)","line":194,"loc":{"start":{"line":194,"column":22},"end":{"line":194,"column":34}}},"16":{"name":"(anonymous_16)","line":358,"loc":{"start":{"line":358,"column":45},"end":{"line":358,"column":57}}},"17":{"name":"(anonymous_17)","line":571,"loc":{"start":{"line":571,"column":50},"end":{"line":571,"column":79}}},"18":{"name":"(anonymous_18)","line":596,"loc":{"start":{"line":596,"column":55},"end":{"line":596,"column":76}}},"19":{"name":"(anonymous_19)","line":607,"loc":{"start":{"line":607,"column":36},"end":{"line":607,"column":61}}},"20":{"name":"(anonymous_20)","line":710,"loc":{"start":{"line":710,"column":19},"end":{"line":710,"column":53}}},"21":{"name":"pickNearestMaxStalenessSeconds","line":743,"loc":{"start":{"line":743,"column":0},"end":{"line":743,"column":62}}},"22":{"name":"(anonymous_22)","line":774,"loc":{"start":{"line":774,"column":27},"end":{"line":774,"column":39}}},"23":{"name":"(anonymous_23)","line":779,"loc":{"start":{"line":779,"column":15},"end":{"line":779,"column":30}}},"24":{"name":"pickNearest","line":800,"loc":{"start":{"line":800,"column":0},"end":{"line":800,"column":43}}},"25":{"name":"(anonymous_25)","line":818,"loc":{"start":{"line":818,"column":15},"end":{"line":818,"column":30}}},"26":{"name":"(anonymous_26)","line":827,"loc":{"start":{"line":827,"column":27},"end":{"line":827,"column":39}}},"27":{"name":"inList","line":846,"loc":{"start":{"line":846,"column":0},"end":{"line":846,"column":40}}},"28":{"name":"addToList","line":855,"loc":{"start":{"line":855,"column":0},"end":{"line":855,"column":55}}},"29":{"name":"compareObjectIds","line":866,"loc":{"start":{"line":866,"column":0},"end":{"line":866,"column":36}}},"30":{"name":"removeFrom","line":896,"loc":{"start":{"line":896,"column":0},"end":{"line":896,"column":34}}},"31":{"name":"emitTopologyDescriptionChanged","line":911,"loc":{"start":{"line":911,"column":0},"end":{"line":911,"column":46}}},"32":{"name":"(anonymous_32)","line":937,"loc":{"start":{"line":937,"column":74},"end":{"line":937,"column":86}}},"33":{"name":"(anonymous_33)","line":944,"loc":{"start":{"line":944,"column":71},"end":{"line":944,"column":83}}},"34":{"name":"(anonymous_34)","line":951,"loc":{"start":{"line":951,"column":71},"end":{"line":951,"column":83}}},"35":{"name":"diff","line":973,"loc":{"start":{"line":973,"column":0},"end":{"line":973,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":8,"column":35}},"2":{"start":{"line":10,"column":0},"end":{"line":14,"column":2}},"3":{"start":{"line":16,"column":0},"end":{"line":20,"column":2}},"4":{"start":{"line":22,"column":0},"end":{"line":65,"column":1}},"5":{"start":{"line":23,"column":2},"end":{"line":23,"column":26}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":26}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":55}},"8":{"start":{"line":28,"column":2},"end":{"line":28,"column":33}},"9":{"start":{"line":31,"column":2},"end":{"line":31,"column":16}},"10":{"start":{"line":34,"column":2},"end":{"line":34,"column":23}},"11":{"start":{"line":35,"column":2},"end":{"line":35,"column":33}},"12":{"start":{"line":38,"column":2},"end":{"line":38,"column":61}},"13":{"start":{"line":41,"column":2},"end":{"line":41,"column":17}},"14":{"start":{"line":43,"column":2},"end":{"line":43,"column":59}},"15":{"start":{"line":46,"column":2},"end":{"line":46,"column":68}},"16":{"start":{"line":49,"column":2},"end":{"line":49,"column":22}},"17":{"start":{"line":50,"column":2},"end":{"line":50,"column":24}},"18":{"start":{"line":51,"column":2},"end":{"line":51,"column":21}},"19":{"start":{"line":52,"column":2},"end":{"line":52,"column":21}},"20":{"start":{"line":53,"column":2},"end":{"line":53,"column":19}},"21":{"start":{"line":55,"column":2},"end":{"line":55,"column":27}},"22":{"start":{"line":57,"column":2},"end":{"line":57,"column":16}},"23":{"start":{"line":59,"column":2},"end":{"line":59,"column":28}},"24":{"start":{"line":60,"column":2},"end":{"line":60,"column":25}},"25":{"start":{"line":62,"column":2},"end":{"line":64,"column":4}},"26":{"start":{"line":67,"column":0},"end":{"line":67,"column":37}},"27":{"start":{"line":69,"column":0},"end":{"line":71,"column":1}},"28":{"start":{"line":70,"column":2},"end":{"line":70,"column":61}},"29":{"start":{"line":73,"column":0},"end":{"line":75,"column":1}},"30":{"start":{"line":74,"column":2},"end":{"line":74,"column":50}},"31":{"start":{"line":77,"column":0},"end":{"line":79,"column":1}},"32":{"start":{"line":78,"column":2},"end":{"line":78,"column":30}},"33":{"start":{"line":81,"column":0},"end":{"line":83,"column":1}},"34":{"start":{"line":82,"column":2},"end":{"line":82,"column":37}},"35":{"start":{"line":85,"column":0},"end":{"line":95,"column":1}},"36":{"start":{"line":86,"column":2},"end":{"line":86,"column":34}},"37":{"start":{"line":88,"column":2},"end":{"line":92,"column":3}},"38":{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},"39":{"start":{"line":90,"column":6},"end":{"line":90,"column":24}},"40":{"start":{"line":94,"column":2},"end":{"line":94,"column":14}},"41":{"start":{"line":97,"column":0},"end":{"line":104,"column":1}},"42":{"start":{"line":98,"column":2},"end":{"line":98,"column":26}},"43":{"start":{"line":99,"column":2},"end":{"line":99,"column":51}},"44":{"start":{"line":100,"column":2},"end":{"line":100,"column":45}},"45":{"start":{"line":101,"column":2},"end":{"line":101,"column":70}},"46":{"start":{"line":101,"column":30},"end":{"line":101,"column":70}},"47":{"start":{"line":102,"column":2},"end":{"line":102,"column":42}},"48":{"start":{"line":103,"column":2},"end":{"line":103,"column":17}},"49":{"start":{"line":106,"column":0},"end":{"line":120,"column":1}},"50":{"start":{"line":108,"column":2},"end":{"line":108,"column":49}},"51":{"start":{"line":108,"column":19},"end":{"line":108,"column":49}},"52":{"start":{"line":109,"column":2},"end":{"line":109,"column":64}},"53":{"start":{"line":109,"column":41},"end":{"line":109,"column":60}},"54":{"start":{"line":110,"column":2},"end":{"line":110,"column":61}},"55":{"start":{"line":110,"column":38},"end":{"line":110,"column":57}},"56":{"start":{"line":111,"column":2},"end":{"line":111,"column":61}},"57":{"start":{"line":111,"column":38},"end":{"line":111,"column":57}},"58":{"start":{"line":112,"column":2},"end":{"line":112,"column":59}},"59":{"start":{"line":112,"column":36},"end":{"line":112,"column":55}},"60":{"start":{"line":114,"column":2},"end":{"line":114,"column":24}},"61":{"start":{"line":115,"column":2},"end":{"line":115,"column":21}},"62":{"start":{"line":116,"column":2},"end":{"line":116,"column":21}},"63":{"start":{"line":117,"column":2},"end":{"line":117,"column":19}},"64":{"start":{"line":118,"column":2},"end":{"line":118,"column":27}},"65":{"start":{"line":119,"column":2},"end":{"line":119,"column":16}},"66":{"start":{"line":122,"column":0},"end":{"line":176,"column":1}},"67":{"start":{"line":123,"column":2},"end":{"line":123,"column":26}},"68":{"start":{"line":126,"column":2},"end":{"line":126,"column":45}},"69":{"start":{"line":129,"column":2},"end":{"line":129,"column":51}},"70":{"start":{"line":130,"column":2},"end":{"line":130,"column":45}},"71":{"start":{"line":131,"column":2},"end":{"line":131,"column":42}},"72":{"start":{"line":132,"column":2},"end":{"line":132,"column":42}},"73":{"start":{"line":135,"column":2},"end":{"line":142,"column":3}},"74":{"start":{"line":136,"column":4},"end":{"line":141,"column":5}},"75":{"start":{"line":140,"column":6},"end":{"line":140,"column":13}},"76":{"start":{"line":145,"column":2},"end":{"line":150,"column":3}},"77":{"start":{"line":146,"column":4},"end":{"line":146,"column":51}},"78":{"start":{"line":147,"column":4},"end":{"line":147,"column":43}},"79":{"start":{"line":148,"column":4},"end":{"line":148,"column":40}},"80":{"start":{"line":149,"column":4},"end":{"line":149,"column":43}},"81":{"start":{"line":153,"column":2},"end":{"line":153,"column":24}},"82":{"start":{"line":156,"column":2},"end":{"line":160,"column":3}},"83":{"start":{"line":157,"column":4},"end":{"line":157,"column":24}},"84":{"start":{"line":158,"column":4},"end":{"line":158,"column":57}},"85":{"start":{"line":159,"column":4},"end":{"line":159,"column":27}},"86":{"start":{"line":163,"column":2},"end":{"line":163,"column":79}},"87":{"start":{"line":164,"column":2},"end":{"line":164,"column":74}},"88":{"start":{"line":165,"column":2},"end":{"line":165,"column":76}},"89":{"start":{"line":166,"column":2},"end":{"line":166,"column":34}},"90":{"start":{"line":167,"column":2},"end":{"line":167,"column":42}},"91":{"start":{"line":170,"column":2},"end":{"line":170,"column":39}},"92":{"start":{"line":173,"column":2},"end":{"line":175,"column":3}},"93":{"start":{"line":174,"column":4},"end":{"line":174,"column":42}},"94":{"start":{"line":178,"column":0},"end":{"line":565,"column":1}},"95":{"start":{"line":179,"column":2},"end":{"line":179,"column":18}},"96":{"start":{"line":181,"column":2},"end":{"line":181,"column":39}},"97":{"start":{"line":184,"column":2},"end":{"line":184,"column":45}},"98":{"start":{"line":189,"column":2},"end":{"line":213,"column":3}},"99":{"start":{"line":191,"column":4},"end":{"line":191,"column":68}},"100":{"start":{"line":192,"column":4},"end":{"line":192,"column":84}},"101":{"start":{"line":193,"column":4},"end":{"line":193,"column":84}},"102":{"start":{"line":194,"column":4},"end":{"line":194,"column":62}},"103":{"start":{"line":194,"column":36},"end":{"line":194,"column":59}},"104":{"start":{"line":197,"column":4},"end":{"line":212,"column":5}},"105":{"start":{"line":199,"column":6},"end":{"line":202,"column":7}},"106":{"start":{"line":201,"column":8},"end":{"line":201,"column":57}},"107":{"start":{"line":204,"column":6},"end":{"line":211,"column":7}},"108":{"start":{"line":205,"column":8},"end":{"line":210,"column":9}},"109":{"start":{"line":218,"column":2},"end":{"line":234,"column":3}},"110":{"start":{"line":219,"column":4},"end":{"line":221,"column":5}},"111":{"start":{"line":223,"column":4},"end":{"line":223,"column":51}},"112":{"start":{"line":224,"column":4},"end":{"line":224,"column":80}},"113":{"start":{"line":225,"column":4},"end":{"line":225,"column":74}},"114":{"start":{"line":226,"column":4},"end":{"line":226,"column":80}},"115":{"start":{"line":228,"column":4},"end":{"line":230,"column":5}},"116":{"start":{"line":229,"column":6},"end":{"line":229,"column":43}},"117":{"start":{"line":233,"column":4},"end":{"line":233,"column":17}},"118":{"start":{"line":239,"column":2},"end":{"line":241,"column":3}},"119":{"start":{"line":240,"column":4},"end":{"line":240,"column":17}},"120":{"start":{"line":244,"column":2},"end":{"line":254,"column":3}},"121":{"start":{"line":246,"column":4},"end":{"line":249,"column":5}},"122":{"start":{"line":251,"column":4},"end":{"line":251,"column":109}},"123":{"start":{"line":252,"column":4},"end":{"line":252,"column":57}},"124":{"start":{"line":252,"column":25},"end":{"line":252,"column":57}},"125":{"start":{"line":253,"column":4},"end":{"line":253,"column":17}},"126":{"start":{"line":257,"column":2},"end":{"line":269,"column":3}},"127":{"start":{"line":258,"column":4},"end":{"line":261,"column":5}},"128":{"start":{"line":264,"column":4},"end":{"line":264,"column":109}},"129":{"start":{"line":265,"column":4},"end":{"line":265,"column":57}},"130":{"start":{"line":265,"column":25},"end":{"line":265,"column":57}},"131":{"start":{"line":268,"column":4},"end":{"line":268,"column":17}},"132":{"start":{"line":274,"column":2},"end":{"line":278,"column":3}},"133":{"start":{"line":275,"column":4},"end":{"line":275,"column":97}},"134":{"start":{"line":276,"column":4},"end":{"line":276,"column":38}},"135":{"start":{"line":277,"column":4},"end":{"line":277,"column":17}},"136":{"start":{"line":283,"column":2},"end":{"line":286,"column":3}},"137":{"start":{"line":284,"column":4},"end":{"line":284,"column":38}},"138":{"start":{"line":285,"column":4},"end":{"line":285,"column":17}},"139":{"start":{"line":291,"column":2},"end":{"line":324,"column":3}},"140":{"start":{"line":292,"column":4},"end":{"line":294,"column":5}},"141":{"start":{"line":293,"column":6},"end":{"line":293,"column":149}},"142":{"start":{"line":297,"column":4},"end":{"line":297,"column":32}},"143":{"start":{"line":299,"column":4},"end":{"line":299,"column":44}},"144":{"start":{"line":302,"column":4},"end":{"line":302,"column":21}},"145":{"start":{"line":305,"column":4},"end":{"line":309,"column":5}},"146":{"start":{"line":306,"column":6},"end":{"line":306,"column":61}},"147":{"start":{"line":308,"column":6},"end":{"line":308,"column":59}},"148":{"start":{"line":314,"column":4},"end":{"line":321,"column":5}},"149":{"start":{"line":315,"column":6},"end":{"line":320,"column":7}},"150":{"start":{"line":323,"column":4},"end":{"line":323,"column":17}},"151":{"start":{"line":329,"column":2},"end":{"line":476,"column":3}},"152":{"start":{"line":330,"column":4},"end":{"line":330,"column":62}},"153":{"start":{"line":331,"column":4},"end":{"line":334,"column":5}},"154":{"start":{"line":332,"column":6},"end":{"line":332,"column":59}},"155":{"start":{"line":333,"column":6},"end":{"line":333,"column":144}},"156":{"start":{"line":336,"column":4},"end":{"line":355,"column":5}},"157":{"start":{"line":337,"column":6},"end":{"line":337,"column":46}},"158":{"start":{"line":338,"column":11},"end":{"line":355,"column":5}},"159":{"start":{"line":339,"column":6},"end":{"line":339,"column":76}},"160":{"start":{"line":341,"column":6},"end":{"line":341,"column":64}},"161":{"start":{"line":343,"column":6},"end":{"line":351,"column":7}},"162":{"start":{"line":344,"column":8},"end":{"line":344,"column":61}},"163":{"start":{"line":345,"column":8},"end":{"line":345,"column":21}},"164":{"start":{"line":346,"column":13},"end":{"line":351,"column":7}},"165":{"start":{"line":347,"column":8},"end":{"line":350,"column":9}},"166":{"start":{"line":348,"column":10},"end":{"line":348,"column":63}},"167":{"start":{"line":349,"column":10},"end":{"line":349,"column":23}},"168":{"start":{"line":353,"column":6},"end":{"line":353,"column":46}},"169":{"start":{"line":354,"column":6},"end":{"line":354,"column":46}},"170":{"start":{"line":358,"column":4},"end":{"line":358,"column":85}},"171":{"start":{"line":358,"column":59},"end":{"line":358,"column":82}},"172":{"start":{"line":359,"column":4},"end":{"line":359,"column":60}},"173":{"start":{"line":362,"column":4},"end":{"line":380,"column":5}},"174":{"start":{"line":363,"column":6},"end":{"line":363,"column":28}},"175":{"start":{"line":364,"column":6},"end":{"line":369,"column":7}},"176":{"start":{"line":372,"column":6},"end":{"line":372,"column":61}},"177":{"start":{"line":373,"column":6},"end":{"line":373,"column":59}},"178":{"start":{"line":373,"column":27},"end":{"line":373,"column":59}},"179":{"start":{"line":374,"column":6},"end":{"line":374,"column":46}},"180":{"start":{"line":375,"column":6},"end":{"line":375,"column":43}},"181":{"start":{"line":376,"column":6},"end":{"line":376,"column":40}},"182":{"start":{"line":377,"column":6},"end":{"line":377,"column":45}},"183":{"start":{"line":379,"column":6},"end":{"line":379,"column":59}},"184":{"start":{"line":382,"column":4},"end":{"line":382,"column":41}},"185":{"start":{"line":383,"column":4},"end":{"line":383,"column":16}},"186":{"start":{"line":384,"column":9},"end":{"line":476,"column":3}},"187":{"start":{"line":386,"column":4},"end":{"line":386,"column":81}},"188":{"start":{"line":387,"column":4},"end":{"line":387,"column":81}},"189":{"start":{"line":388,"column":4},"end":{"line":388,"column":75}},"190":{"start":{"line":389,"column":4},"end":{"line":389,"column":58}},"191":{"start":{"line":390,"column":4},"end":{"line":390,"column":58}},"192":{"start":{"line":391,"column":4},"end":{"line":391,"column":56}},"193":{"start":{"line":394,"column":4},"end":{"line":397,"column":5}},"194":{"start":{"line":396,"column":8},"end":{"line":396,"column":21}},"195":{"start":{"line":400,"column":4},"end":{"line":408,"column":5}},"196":{"start":{"line":401,"column":6},"end":{"line":405,"column":7}},"197":{"start":{"line":402,"column":8},"end":{"line":402,"column":63}},"198":{"start":{"line":404,"column":8},"end":{"line":404,"column":61}},"199":{"start":{"line":407,"column":6},"end":{"line":407,"column":19}},"200":{"start":{"line":411,"column":4},"end":{"line":424,"column":5}},"201":{"start":{"line":412,"column":6},"end":{"line":412,"column":71}},"202":{"start":{"line":414,"column":6},"end":{"line":418,"column":7}},"203":{"start":{"line":415,"column":8},"end":{"line":415,"column":21}},"204":{"start":{"line":416,"column":13},"end":{"line":418,"column":7}},"205":{"start":{"line":417,"column":8},"end":{"line":417,"column":21}},"206":{"start":{"line":419,"column":11},"end":{"line":424,"column":5}},"207":{"start":{"line":421,"column":8},"end":{"line":423,"column":9}},"208":{"start":{"line":422,"column":10},"end":{"line":422,"column":23}},"209":{"start":{"line":426,"column":4},"end":{"line":447,"column":5}},"210":{"start":{"line":427,"column":6},"end":{"line":427,"column":46}},"211":{"start":{"line":428,"column":11},"end":{"line":447,"column":5}},"212":{"start":{"line":429,"column":6},"end":{"line":429,"column":72}},"213":{"start":{"line":431,"column":6},"end":{"line":441,"column":7}},"214":{"start":{"line":432,"column":8},"end":{"line":432,"column":21}},"215":{"start":{"line":433,"column":13},"end":{"line":441,"column":7}},"216":{"start":{"line":434,"column":8},"end":{"line":436,"column":9}},"217":{"start":{"line":435,"column":10},"end":{"line":435,"column":23}},"218":{"start":{"line":438,"column":8},"end":{"line":440,"column":9}},"219":{"start":{"line":439,"column":10},"end":{"line":439,"column":23}},"220":{"start":{"line":443,"column":6},"end":{"line":443,"column":46}},"221":{"start":{"line":444,"column":6},"end":{"line":444,"column":46}},"222":{"start":{"line":446,"column":6},"end":{"line":446,"column":46}},"223":{"start":{"line":450,"column":4},"end":{"line":453,"column":5}},"224":{"start":{"line":456,"column":4},"end":{"line":456,"column":47}},"225":{"start":{"line":458,"column":4},"end":{"line":458,"column":27}},"226":{"start":{"line":460,"column":4},"end":{"line":460,"column":26}},"227":{"start":{"line":462,"column":4},"end":{"line":465,"column":5}},"228":{"start":{"line":468,"column":4},"end":{"line":468,"column":59}},"229":{"start":{"line":469,"column":4},"end":{"line":469,"column":57}},"230":{"start":{"line":469,"column":25},"end":{"line":469,"column":57}},"231":{"start":{"line":470,"column":4},"end":{"line":470,"column":44}},"232":{"start":{"line":471,"column":4},"end":{"line":471,"column":41}},"233":{"start":{"line":472,"column":4},"end":{"line":472,"column":38}},"234":{"start":{"line":473,"column":4},"end":{"line":473,"column":43}},"235":{"start":{"line":474,"column":4},"end":{"line":474,"column":41}},"236":{"start":{"line":475,"column":4},"end":{"line":475,"column":16}},"237":{"start":{"line":479,"column":2},"end":{"line":484,"column":3}},"238":{"start":{"line":480,"column":4},"end":{"line":483,"column":5}},"239":{"start":{"line":489,"column":2},"end":{"line":509,"column":3}},"240":{"start":{"line":492,"column":4},"end":{"line":492,"column":80}},"241":{"start":{"line":494,"column":4},"end":{"line":494,"column":109}},"242":{"start":{"line":495,"column":4},"end":{"line":495,"column":57}},"243":{"start":{"line":495,"column":25},"end":{"line":495,"column":57}},"244":{"start":{"line":496,"column":4},"end":{"line":496,"column":44}},"245":{"start":{"line":499,"column":4},"end":{"line":504,"column":5}},"246":{"start":{"line":501,"column":8},"end":{"line":501,"column":25}},"247":{"start":{"line":502,"column":8},"end":{"line":502,"column":28}},"248":{"start":{"line":503,"column":8},"end":{"line":503,"column":45}},"249":{"start":{"line":506,"column":4},"end":{"line":506,"column":45}},"250":{"start":{"line":507,"column":4},"end":{"line":507,"column":41}},"251":{"start":{"line":508,"column":4},"end":{"line":508,"column":16}},"252":{"start":{"line":514,"column":2},"end":{"line":525,"column":3}},"253":{"start":{"line":517,"column":4},"end":{"line":517,"column":75}},"254":{"start":{"line":519,"column":4},"end":{"line":519,"column":109}},"255":{"start":{"line":520,"column":4},"end":{"line":520,"column":57}},"256":{"start":{"line":520,"column":25},"end":{"line":520,"column":57}},"257":{"start":{"line":521,"column":4},"end":{"line":521,"column":44}},"258":{"start":{"line":522,"column":4},"end":{"line":522,"column":43}},"259":{"start":{"line":523,"column":4},"end":{"line":523,"column":41}},"260":{"start":{"line":524,"column":4},"end":{"line":524,"column":16}},"261":{"start":{"line":530,"column":2},"end":{"line":550,"column":3}},"262":{"start":{"line":533,"column":4},"end":{"line":533,"column":77}},"263":{"start":{"line":535,"column":4},"end":{"line":535,"column":109}},"264":{"start":{"line":536,"column":4},"end":{"line":536,"column":57}},"265":{"start":{"line":536,"column":25},"end":{"line":536,"column":57}},"266":{"start":{"line":537,"column":4},"end":{"line":537,"column":44}},"267":{"start":{"line":540,"column":4},"end":{"line":545,"column":5}},"268":{"start":{"line":542,"column":8},"end":{"line":542,"column":25}},"269":{"start":{"line":543,"column":8},"end":{"line":543,"column":28}},"270":{"start":{"line":544,"column":8},"end":{"line":544,"column":45}},"271":{"start":{"line":547,"column":4},"end":{"line":547,"column":45}},"272":{"start":{"line":548,"column":4},"end":{"line":548,"column":41}},"273":{"start":{"line":549,"column":4},"end":{"line":549,"column":16}},"274":{"start":{"line":555,"column":2},"end":{"line":561,"column":3}},"275":{"start":{"line":556,"column":4},"end":{"line":556,"column":47}},"276":{"start":{"line":557,"column":4},"end":{"line":557,"column":27}},"277":{"start":{"line":558,"column":4},"end":{"line":558,"column":24}},"278":{"start":{"line":559,"column":4},"end":{"line":559,"column":57}},"279":{"start":{"line":560,"column":4},"end":{"line":560,"column":17}},"280":{"start":{"line":563,"column":2},"end":{"line":563,"column":107}},"281":{"start":{"line":564,"column":2},"end":{"line":564,"column":15}},"282":{"start":{"line":571,"column":0},"end":{"line":590,"column":1}},"283":{"start":{"line":573,"column":2},"end":{"line":573,"column":14}},"284":{"start":{"line":575,"column":2},"end":{"line":577,"column":3}},"285":{"start":{"line":576,"column":4},"end":{"line":576,"column":59}},"286":{"start":{"line":580,"column":2},"end":{"line":589,"column":3}},"287":{"start":{"line":583,"column":4},"end":{"line":585,"column":19}},"288":{"start":{"line":586,"column":9},"end":{"line":589,"column":3}},"289":{"start":{"line":588,"column":4},"end":{"line":588,"column":63}},"290":{"start":{"line":596,"column":0},"end":{"line":600,"column":1}},"291":{"start":{"line":597,"column":2},"end":{"line":599,"column":3}},"292":{"start":{"line":598,"column":4},"end":{"line":598,"column":67}},"293":{"start":{"line":607,"column":0},"end":{"line":706,"column":1}},"294":{"start":{"line":609,"column":2},"end":{"line":609,"column":60}},"295":{"start":{"line":612,"column":2},"end":{"line":614,"column":3}},"296":{"start":{"line":613,"column":4},"end":{"line":613,"column":90}},"297":{"start":{"line":617,"column":2},"end":{"line":617,"column":54}},"298":{"start":{"line":618,"column":2},"end":{"line":618,"column":51}},"299":{"start":{"line":622,"column":2},"end":{"line":628,"column":3}},"300":{"start":{"line":623,"column":4},"end":{"line":627,"column":5}},"301":{"start":{"line":624,"column":6},"end":{"line":626,"column":7}},"302":{"start":{"line":625,"column":8},"end":{"line":625,"column":109}},"303":{"start":{"line":631,"column":2},"end":{"line":635,"column":3}},"304":{"start":{"line":632,"column":4},"end":{"line":632,"column":45}},"305":{"start":{"line":633,"column":9},"end":{"line":635,"column":3}},"306":{"start":{"line":634,"column":4},"end":{"line":634,"column":64}},"307":{"start":{"line":638,"column":2},"end":{"line":638,"column":37}},"308":{"start":{"line":641,"column":2},"end":{"line":644,"column":5}},"309":{"start":{"line":643,"column":6},"end":{"line":643,"column":61}},"310":{"start":{"line":646,"column":2},"end":{"line":650,"column":5}},"311":{"start":{"line":649,"column":6},"end":{"line":649,"column":72}},"312":{"start":{"line":652,"column":2},"end":{"line":655,"column":5}},"313":{"start":{"line":654,"column":6},"end":{"line":654,"column":59}},"314":{"start":{"line":658,"column":2},"end":{"line":682,"column":3}},"315":{"start":{"line":661,"column":4},"end":{"line":675,"column":5}},"316":{"start":{"line":663,"column":6},"end":{"line":663,"column":53}},"317":{"start":{"line":665,"column":6},"end":{"line":667,"column":7}},"318":{"start":{"line":666,"column":8},"end":{"line":666,"column":22}},"319":{"start":{"line":668,"column":11},"end":{"line":675,"column":5}},"320":{"start":{"line":670,"column":6},"end":{"line":670,"column":68}},"321":{"start":{"line":672,"column":6},"end":{"line":674,"column":7}},"322":{"start":{"line":673,"column":8},"end":{"line":673,"column":22}},"323":{"start":{"line":677,"column":4},"end":{"line":679,"column":5}},"324":{"start":{"line":678,"column":6},"end":{"line":678,"column":26}},"325":{"start":{"line":681,"column":4},"end":{"line":681,"column":16}},"326":{"start":{"line":685,"column":2},"end":{"line":702,"column":3}},"327":{"start":{"line":686,"column":4},"end":{"line":686,"column":18}},"328":{"start":{"line":689,"column":4},"end":{"line":691,"column":5}},"329":{"start":{"line":690,"column":6},"end":{"line":690,"column":26}},"330":{"start":{"line":694,"column":4},"end":{"line":698,"column":5}},"331":{"start":{"line":695,"column":6},"end":{"line":695,"column":49}},"332":{"start":{"line":696,"column":11},"end":{"line":698,"column":5}},"333":{"start":{"line":697,"column":6},"end":{"line":697,"column":68}},"334":{"start":{"line":701,"column":4},"end":{"line":701,"column":29}},"335":{"start":{"line":701,"column":15},"end":{"line":701,"column":29}},"336":{"start":{"line":705,"column":2},"end":{"line":705,"column":22}},"337":{"start":{"line":710,"column":0},"end":{"line":741,"column":1}},"338":{"start":{"line":711,"column":2},"end":{"line":711,"column":49}},"339":{"start":{"line":711,"column":34},"end":{"line":711,"column":49}},"340":{"start":{"line":712,"column":2},"end":{"line":712,"column":27}},"341":{"start":{"line":713,"column":2},"end":{"line":713,"column":99}},"342":{"start":{"line":716,"column":2},"end":{"line":737,"column":3}},"343":{"start":{"line":717,"column":4},"end":{"line":717,"column":28}},"344":{"start":{"line":720,"column":4},"end":{"line":736,"column":5}},"345":{"start":{"line":721,"column":6},"end":{"line":721,"column":59}},"346":{"start":{"line":724,"column":6},"end":{"line":724,"column":23}},"347":{"start":{"line":726,"column":6},"end":{"line":730,"column":7}},"348":{"start":{"line":727,"column":8},"end":{"line":729,"column":9}},"349":{"start":{"line":728,"column":10},"end":{"line":728,"column":24}},"350":{"start":{"line":733,"column":6},"end":{"line":735,"column":7}},"351":{"start":{"line":734,"column":8},"end":{"line":734,"column":41}},"352":{"start":{"line":740,"column":2},"end":{"line":740,"column":25}},"353":{"start":{"line":743,"column":0},"end":{"line":798,"column":1}},"354":{"start":{"line":745,"column":2},"end":{"line":745,"column":19}},"355":{"start":{"line":746,"column":2},"end":{"line":746,"column":55}},"356":{"start":{"line":749,"column":2},"end":{"line":749,"column":65}},"357":{"start":{"line":752,"column":2},"end":{"line":754,"column":3}},"358":{"start":{"line":753,"column":4},"end":{"line":753,"column":84}},"359":{"start":{"line":757,"column":2},"end":{"line":759,"column":3}},"360":{"start":{"line":758,"column":4},"end":{"line":758,"column":31}},"361":{"start":{"line":762,"column":2},"end":{"line":764,"column":3}},"362":{"start":{"line":763,"column":4},"end":{"line":763,"column":38}},"363":{"start":{"line":767,"column":2},"end":{"line":767,"column":50}},"364":{"start":{"line":774,"column":2},"end":{"line":776,"column":5}},"365":{"start":{"line":775,"column":4},"end":{"line":775,"column":41}},"366":{"start":{"line":779,"column":2},"end":{"line":782,"column":5}},"367":{"start":{"line":781,"column":4},"end":{"line":781,"column":46}},"368":{"start":{"line":785,"column":2},"end":{"line":787,"column":3}},"369":{"start":{"line":786,"column":4},"end":{"line":786,"column":15}},"370":{"start":{"line":790,"column":2},"end":{"line":790,"column":43}},"371":{"start":{"line":793,"column":2},"end":{"line":793,"column":35}},"372":{"start":{"line":795,"column":2},"end":{"line":795,"column":30}},"373":{"start":{"line":797,"column":2},"end":{"line":797,"column":16}},"374":{"start":{"line":800,"column":0},"end":{"line":844,"column":1}},"375":{"start":{"line":802,"column":2},"end":{"line":802,"column":19}},"376":{"start":{"line":805,"column":2},"end":{"line":807,"column":3}},"377":{"start":{"line":806,"column":4},"end":{"line":806,"column":31}},"378":{"start":{"line":810,"column":2},"end":{"line":812,"column":3}},"379":{"start":{"line":811,"column":4},"end":{"line":811,"column":38}},"380":{"start":{"line":815,"column":2},"end":{"line":815,"column":50}},"381":{"start":{"line":818,"column":2},"end":{"line":821,"column":5}},"382":{"start":{"line":820,"column":4},"end":{"line":820,"column":46}},"383":{"start":{"line":824,"column":2},"end":{"line":824,"column":66}},"384":{"start":{"line":827,"column":2},"end":{"line":829,"column":5}},"385":{"start":{"line":828,"column":4},"end":{"line":828,"column":63}},"386":{"start":{"line":832,"column":2},"end":{"line":834,"column":3}},"387":{"start":{"line":833,"column":4},"end":{"line":833,"column":15}},"388":{"start":{"line":837,"column":2},"end":{"line":837,"column":43}},"389":{"start":{"line":839,"column":2},"end":{"line":839,"column":35}},"390":{"start":{"line":841,"column":2},"end":{"line":841,"column":30}},"391":{"start":{"line":843,"column":2},"end":{"line":843,"column":16}},"392":{"start":{"line":846,"column":0},"end":{"line":853,"column":1}},"393":{"start":{"line":847,"column":2},"end":{"line":850,"column":3}},"394":{"start":{"line":848,"column":4},"end":{"line":849,"column":78}},"395":{"start":{"line":849,"column":66},"end":{"line":849,"column":78}},"396":{"start":{"line":852,"column":2},"end":{"line":852,"column":15}},"397":{"start":{"line":855,"column":0},"end":{"line":864,"column":1}},"398":{"start":{"line":856,"column":2},"end":{"line":856,"column":45}},"399":{"start":{"line":858,"column":2},"end":{"line":858,"column":35}},"400":{"start":{"line":859,"column":2},"end":{"line":859,"column":78}},"401":{"start":{"line":860,"column":2},"end":{"line":860,"column":72}},"402":{"start":{"line":861,"column":2},"end":{"line":861,"column":78}},"403":{"start":{"line":863,"column":2},"end":{"line":863,"column":20}},"404":{"start":{"line":866,"column":0},"end":{"line":894,"column":1}},"405":{"start":{"line":867,"column":2},"end":{"line":867,"column":47}},"406":{"start":{"line":868,"column":2},"end":{"line":868,"column":47}},"407":{"start":{"line":870,"column":2},"end":{"line":872,"column":3}},"408":{"start":{"line":871,"column":4},"end":{"line":871,"column":13}},"409":{"start":{"line":874,"column":2},"end":{"line":876,"column":3}},"410":{"start":{"line":875,"column":4},"end":{"line":875,"column":32}},"411":{"start":{"line":878,"column":2},"end":{"line":878,"column":19}},"412":{"start":{"line":879,"column":2},"end":{"line":879,"column":19}},"413":{"start":{"line":880,"column":2},"end":{"line":880,"column":27}},"414":{"start":{"line":882,"column":2},"end":{"line":886,"column":3}},"415":{"start":{"line":883,"column":4},"end":{"line":885,"column":5}},"416":{"start":{"line":884,"column":6},"end":{"line":884,"column":12}},"417":{"start":{"line":888,"column":2},"end":{"line":891,"column":3}},"418":{"start":{"line":889,"column":4},"end":{"line":889,"column":13}},"419":{"start":{"line":890,"column":4},"end":{"line":890,"column":13}},"420":{"start":{"line":893,"column":2},"end":{"line":893,"column":36}},"421":{"start":{"line":896,"column":0},"end":{"line":909,"column":1}},"422":{"start":{"line":897,"column":2},"end":{"line":906,"column":3}},"423":{"start":{"line":898,"column":4},"end":{"line":905,"column":5}},"424":{"start":{"line":899,"column":6},"end":{"line":899,"column":24}},"425":{"start":{"line":900,"column":6},"end":{"line":900,"column":18}},"426":{"start":{"line":901,"column":11},"end":{"line":905,"column":5}},"427":{"start":{"line":903,"column":8},"end":{"line":903,"column":26}},"428":{"start":{"line":904,"column":8},"end":{"line":904,"column":20}},"429":{"start":{"line":908,"column":2},"end":{"line":908,"column":15}},"430":{"start":{"line":911,"column":0},"end":{"line":971,"column":1}},"431":{"start":{"line":912,"column":2},"end":{"line":970,"column":3}},"432":{"start":{"line":913,"column":4},"end":{"line":913,"column":29}},"433":{"start":{"line":914,"column":4},"end":{"line":914,"column":31}},"434":{"start":{"line":916,"column":4},"end":{"line":920,"column":5}},"435":{"start":{"line":917,"column":6},"end":{"line":917,"column":41}},"436":{"start":{"line":918,"column":11},"end":{"line":920,"column":5}},"437":{"start":{"line":919,"column":6},"end":{"line":919,"column":39}},"438":{"start":{"line":923,"column":4},"end":{"line":927,"column":5}},"439":{"start":{"line":930,"column":4},"end":{"line":934,"column":5}},"440":{"start":{"line":931,"column":6},"end":{"line":931,"column":47}},"441":{"start":{"line":932,"column":6},"end":{"line":932,"column":30}},"442":{"start":{"line":933,"column":6},"end":{"line":933,"column":37}},"443":{"start":{"line":937,"column":4},"end":{"line":941,"column":8}},"444":{"start":{"line":938,"column":6},"end":{"line":938,"column":43}},"445":{"start":{"line":939,"column":6},"end":{"line":939,"column":39}},"446":{"start":{"line":940,"column":6},"end":{"line":940,"column":25}},"447":{"start":{"line":944,"column":4},"end":{"line":948,"column":8}},"448":{"start":{"line":945,"column":6},"end":{"line":945,"column":43}},"449":{"start":{"line":946,"column":6},"end":{"line":946,"column":37}},"450":{"start":{"line":947,"column":6},"end":{"line":947,"column":25}},"451":{"start":{"line":951,"column":4},"end":{"line":955,"column":8}},"452":{"start":{"line":952,"column":6},"end":{"line":952,"column":43}},"453":{"start":{"line":953,"column":6},"end":{"line":953,"column":39}},"454":{"start":{"line":954,"column":6},"end":{"line":954,"column":25}},"455":{"start":{"line":958,"column":4},"end":{"line":963,"column":6}},"456":{"start":{"line":966,"column":4},"end":{"line":966,"column":52}},"457":{"start":{"line":969,"column":4},"end":{"line":969,"column":45}},"458":{"start":{"line":973,"column":0},"end":{"line":1008,"column":1}},"459":{"start":{"line":975,"column":2},"end":{"line":977,"column":3}},"460":{"start":{"line":980,"column":2},"end":{"line":982,"column":3}},"461":{"start":{"line":981,"column":4},"end":{"line":981,"column":31}},"462":{"start":{"line":985,"column":2},"end":{"line":1004,"column":3}},"463":{"start":{"line":986,"column":4},"end":{"line":986,"column":41}},"464":{"start":{"line":989,"column":4},"end":{"line":1003,"column":5}},"465":{"start":{"line":990,"column":6},"end":{"line":990,"column":42}},"466":{"start":{"line":993,"column":6},"end":{"line":1002,"column":7}},"467":{"start":{"line":995,"column":8},"end":{"line":1001,"column":9}},"468":{"start":{"line":996,"column":10},"end":{"line":1000,"column":13}},"469":{"start":{"line":1007,"column":2},"end":{"line":1007,"column":14}},"470":{"start":{"line":1010,"column":0},"end":{"line":1010,"column":30}}},"branchMap":{"1":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":12},"end":{"line":23,"column":19}},{"start":{"line":23,"column":23},"end":{"line":23,"column":25}}]},"2":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":16},"end":{"line":38,"column":30}},{"start":{"line":38,"column":34},"end":{"line":38,"column":60}}]},"3":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":27},"end":{"line":43,"column":52}},{"start":{"line":43,"column":56},"end":{"line":43,"column":58}}]},"4":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":30},"end":{"line":46,"column":58}},{"start":{"line":46,"column":62},"end":{"line":46,"column":67}}]},"5":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":9},"end":{"line":70,"column":29}},{"start":{"line":70,"column":33},"end":{"line":70,"column":60}}]},"6":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":9},"end":{"line":74,"column":26}},{"start":{"line":74,"column":30},"end":{"line":74,"column":49}}]},"7":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":4}},{"start":{"line":89,"column":4},"end":{"line":89,"column":4}}]},"8":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":12},"end":{"line":98,"column":19}},{"start":{"line":98,"column":23},"end":{"line":98,"column":25}}]},"9":{"line":99,"type":"cond-expr","locations":[{"start":{"line":99,"column":31},"end":{"line":99,"column":45}},{"start":{"line":99,"column":48},"end":{"line":99,"column":50}}]},"10":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":2},"end":{"line":101,"column":2}},{"start":{"line":101,"column":2},"end":{"line":101,"column":2}}]},"11":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":2},"end":{"line":108,"column":2}},{"start":{"line":108,"column":2},"end":{"line":108,"column":2}}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":12},"end":{"line":123,"column":19}},{"start":{"line":123,"column":23},"end":{"line":123,"column":25}}]},"13":{"line":129,"type":"cond-expr","locations":[{"start":{"line":129,"column":31},"end":{"line":129,"column":45}},{"start":{"line":129,"column":48},"end":{"line":129,"column":50}}]},"14":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":136,"column":4}},{"start":{"line":136,"column":4},"end":{"line":136,"column":4}}]},"15":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":7},"end":{"line":136,"column":21}},{"start":{"line":137,"column":9},"end":{"line":137,"column":34}},{"start":{"line":138,"column":9},"end":{"line":138,"column":31}},{"start":{"line":139,"column":9},"end":{"line":139,"column":33}}]},"16":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":2},"end":{"line":145,"column":2}},{"start":{"line":145,"column":2},"end":{"line":145,"column":2}}]},"17":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":2},"end":{"line":156,"column":2}},{"start":{"line":156,"column":2},"end":{"line":156,"column":2}}]},"18":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":5},"end":{"line":156,"column":17}},{"start":{"line":156,"column":21},"end":{"line":156,"column":48}}]},"19":{"line":163,"type":"cond-expr","locations":[{"start":{"line":163,"column":54},"end":{"line":163,"column":65}},{"start":{"line":163,"column":68},"end":{"line":163,"column":78}}]},"20":{"line":164,"type":"cond-expr","locations":[{"start":{"line":164,"column":51},"end":{"line":164,"column":60}},{"start":{"line":164,"column":63},"end":{"line":164,"column":73}}]},"21":{"line":165,"type":"cond-expr","locations":[{"start":{"line":165,"column":51},"end":{"line":165,"column":62}},{"start":{"line":165,"column":65},"end":{"line":165,"column":75}}]},"22":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":2},"end":{"line":173,"column":2}},{"start":{"line":173,"column":2},"end":{"line":173,"column":2}}]},"23":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":2},"end":{"line":189,"column":2}},{"start":{"line":189,"column":2},"end":{"line":189,"column":2}}]},"24":{"line":191,"type":"cond-expr","locations":[{"start":{"line":191,"column":48},"end":{"line":191,"column":62}},{"start":{"line":191,"column":65},"end":{"line":191,"column":67}}]},"25":{"line":192,"type":"cond-expr","locations":[{"start":{"line":192,"column":60},"end":{"line":192,"column":77}},{"start":{"line":192,"column":80},"end":{"line":192,"column":82}}]},"26":{"line":193,"type":"cond-expr","locations":[{"start":{"line":193,"column":60},"end":{"line":193,"column":77}},{"start":{"line":193,"column":80},"end":{"line":193,"column":82}}]},"27":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":6},"end":{"line":199,"column":6}},{"start":{"line":199,"column":6},"end":{"line":199,"column":6}}]},"28":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":9},"end":{"line":199,"column":52}},{"start":{"line":200,"column":12},"end":{"line":200,"column":31}},{"start":{"line":200,"column":35},"end":{"line":200,"column":80}}]},"29":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":6},"end":{"line":204,"column":6}},{"start":{"line":204,"column":6},"end":{"line":204,"column":6}}]},"30":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":2},"end":{"line":218,"column":2}},{"start":{"line":218,"column":2},"end":{"line":218,"column":2}}]},"31":{"line":218,"type":"binary-expr","locations":[{"start":{"line":218,"column":5},"end":{"line":218,"column":14}},{"start":{"line":218,"column":18},"end":{"line":218,"column":64}}]},"32":{"line":224,"type":"cond-expr","locations":[{"start":{"line":224,"column":49},"end":{"line":224,"column":68}},{"start":{"line":224,"column":71},"end":{"line":224,"column":79}}]},"33":{"line":225,"type":"cond-expr","locations":[{"start":{"line":225,"column":46},"end":{"line":225,"column":62}},{"start":{"line":225,"column":65},"end":{"line":225,"column":73}}]},"34":{"line":226,"type":"cond-expr","locations":[{"start":{"line":226,"column":49},"end":{"line":226,"column":68}},{"start":{"line":226,"column":71},"end":{"line":226,"column":79}}]},"35":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":4},"end":{"line":228,"column":4}},{"start":{"line":228,"column":4},"end":{"line":228,"column":4}}]},"36":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":2},"end":{"line":239,"column":2}},{"start":{"line":239,"column":2},"end":{"line":239,"column":2}}]},"37":{"line":239,"type":"binary-expr","locations":[{"start":{"line":239,"column":5},"end":{"line":239,"column":13}},{"start":{"line":239,"column":17},"end":{"line":239,"column":43}}]},"38":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":2},"end":{"line":244,"column":2}},{"start":{"line":244,"column":2},"end":{"line":244,"column":2}}]},"39":{"line":244,"type":"binary-expr","locations":[{"start":{"line":244,"column":6},"end":{"line":244,"column":22}},{"start":{"line":244,"column":26},"end":{"line":244,"column":41}},{"start":{"line":245,"column":8},"end":{"line":245,"column":24}},{"start":{"line":245,"column":28},"end":{"line":245,"column":46}},{"start":{"line":245,"column":50},"end":{"line":245,"column":69}},{"start":{"line":245,"column":73},"end":{"line":245,"column":94}},{"start":{"line":245,"column":98},"end":{"line":245,"column":115}}]},"40":{"line":251,"type":"cond-expr","locations":[{"start":{"line":251,"column":39},"end":{"line":251,"column":73}},{"start":{"line":251,"column":76},"end":{"line":251,"column":108}}]},"41":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":4},"end":{"line":252,"column":4}},{"start":{"line":252,"column":4},"end":{"line":252,"column":4}}]},"42":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":2},"end":{"line":257,"column":2}},{"start":{"line":257,"column":2},"end":{"line":257,"column":2}}]},"43":{"line":264,"type":"cond-expr","locations":[{"start":{"line":264,"column":39},"end":{"line":264,"column":73}},{"start":{"line":264,"column":76},"end":{"line":264,"column":108}}]},"44":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":4},"end":{"line":265,"column":4}},{"start":{"line":265,"column":4},"end":{"line":265,"column":4}}]},"45":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":2},"end":{"line":274,"column":2}},{"start":{"line":274,"column":2},"end":{"line":274,"column":2}}]},"46":{"line":274,"type":"binary-expr","locations":[{"start":{"line":274,"column":5},"end":{"line":274,"column":13}},{"start":{"line":274,"column":17},"end":{"line":274,"column":34}},{"start":{"line":274,"column":38},"end":{"line":274,"column":55}}]},"47":{"line":275,"type":"cond-expr","locations":[{"start":{"line":275,"column":39},"end":{"line":275,"column":73}},{"start":{"line":275,"column":76},"end":{"line":275,"column":96}}]},"48":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":2},"end":{"line":283,"column":2}},{"start":{"line":283,"column":2},"end":{"line":283,"column":2}}]},"49":{"line":283,"type":"binary-expr","locations":[{"start":{"line":283,"column":5},"end":{"line":283,"column":13}},{"start":{"line":283,"column":17},"end":{"line":283,"column":35}},{"start":{"line":283,"column":39},"end":{"line":283,"column":58}},{"start":{"line":283,"column":62},"end":{"line":283,"column":83}}]},"50":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":2},"end":{"line":291,"column":2}},{"start":{"line":291,"column":2},"end":{"line":291,"column":2}}]},"51":{"line":291,"type":"binary-expr","locations":[{"start":{"line":291,"column":5},"end":{"line":291,"column":16}},{"start":{"line":291,"column":20},"end":{"line":291,"column":59}}]},"52":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":4},"end":{"line":292,"column":4}},{"start":{"line":292,"column":4},"end":{"line":292,"column":4}}]},"53":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":4},"end":{"line":305,"column":4}},{"start":{"line":305,"column":4},"end":{"line":305,"column":4}}]},"54":{"line":305,"type":"binary-expr","locations":[{"start":{"line":305,"column":7},"end":{"line":305,"column":19}},{"start":{"line":305,"column":23},"end":{"line":305,"column":51}}]},"55":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":4},"end":{"line":314,"column":4}},{"start":{"line":314,"column":4},"end":{"line":314,"column":4}}]},"56":{"line":314,"type":"binary-expr","locations":[{"start":{"line":314,"column":7},"end":{"line":314,"column":20}},{"start":{"line":314,"column":24},"end":{"line":314,"column":40}}]},"57":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":2},"end":{"line":329,"column":2}},{"start":{"line":329,"column":2},"end":{"line":329,"column":2}}]},"58":{"line":329,"type":"binary-expr","locations":[{"start":{"line":329,"column":5},"end":{"line":329,"column":18}},{"start":{"line":329,"column":22},"end":{"line":329,"column":39}},{"start":{"line":329,"column":43},"end":{"line":329,"column":59}}]},"59":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":4},"end":{"line":331,"column":4}},{"start":{"line":331,"column":4},"end":{"line":331,"column":4}}]},"60":{"line":331,"type":"binary-expr","locations":[{"start":{"line":331,"column":7},"end":{"line":331,"column":19}},{"start":{"line":331,"column":23},"end":{"line":331,"column":55}}]},"61":{"line":336,"type":"if","locations":[{"start":{"line":336,"column":4},"end":{"line":336,"column":4}},{"start":{"line":336,"column":4},"end":{"line":336,"column":4}}]},"62":{"line":336,"type":"binary-expr","locations":[{"start":{"line":336,"column":7},"end":{"line":336,"column":26}},{"start":{"line":336,"column":30},"end":{"line":336,"column":48}}]},"63":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":11},"end":{"line":338,"column":11}},{"start":{"line":338,"column":11},"end":{"line":338,"column":11}}]},"64":{"line":338,"type":"binary-expr","locations":[{"start":{"line":338,"column":14},"end":{"line":338,"column":32}},{"start":{"line":338,"column":36},"end":{"line":338,"column":54}}]},"65":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":6},"end":{"line":343,"column":6}},{"start":{"line":343,"column":6},"end":{"line":343,"column":6}}]},"66":{"line":346,"type":"if","locations":[{"start":{"line":346,"column":13},"end":{"line":346,"column":13}},{"start":{"line":346,"column":13},"end":{"line":346,"column":13}}]},"67":{"line":346,"type":"binary-expr","locations":[{"start":{"line":346,"column":16},"end":{"line":346,"column":27}},{"start":{"line":346,"column":31},"end":{"line":346,"column":49}}]},"68":{"line":347,"type":"if","locations":[{"start":{"line":347,"column":8},"end":{"line":347,"column":8}},{"start":{"line":347,"column":8},"end":{"line":347,"column":8}}]},"69":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":4},"end":{"line":362,"column":4}},{"start":{"line":362,"column":4},"end":{"line":362,"column":4}}]},"70":{"line":373,"type":"if","locations":[{"start":{"line":373,"column":6},"end":{"line":373,"column":6}},{"start":{"line":373,"column":6},"end":{"line":373,"column":6}}]},"71":{"line":384,"type":"if","locations":[{"start":{"line":384,"column":9},"end":{"line":384,"column":9}},{"start":{"line":384,"column":9},"end":{"line":384,"column":9}}]},"72":{"line":384,"type":"binary-expr","locations":[{"start":{"line":384,"column":12},"end":{"line":384,"column":29}},{"start":{"line":384,"column":33},"end":{"line":384,"column":49}}]},"73":{"line":394,"type":"if","locations":[{"start":{"line":394,"column":4},"end":{"line":394,"column":4}},{"start":{"line":394,"column":4},"end":{"line":394,"column":4}}]},"74":{"line":394,"type":"binary-expr","locations":[{"start":{"line":394,"column":7},"end":{"line":394,"column":34}},{"start":{"line":395,"column":9},"end":{"line":395,"column":42}}]},"75":{"line":400,"type":"if","locations":[{"start":{"line":400,"column":4},"end":{"line":400,"column":4}},{"start":{"line":400,"column":4},"end":{"line":400,"column":4}}]},"76":{"line":400,"type":"binary-expr","locations":[{"start":{"line":400,"column":7},"end":{"line":400,"column":21}},{"start":{"line":400,"column":25},"end":{"line":400,"column":58}}]},"77":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":6},"end":{"line":401,"column":6}},{"start":{"line":401,"column":6},"end":{"line":401,"column":6}}]},"78":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":4},"end":{"line":411,"column":4}},{"start":{"line":411,"column":4},"end":{"line":411,"column":4}}]},"79":{"line":411,"type":"binary-expr","locations":[{"start":{"line":411,"column":7},"end":{"line":411,"column":24}},{"start":{"line":411,"column":28},"end":{"line":411,"column":46}}]},"80":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":6},"end":{"line":414,"column":6}},{"start":{"line":414,"column":6},"end":{"line":414,"column":6}}]},"81":{"line":416,"type":"if","locations":[{"start":{"line":416,"column":13},"end":{"line":416,"column":13}},{"start":{"line":416,"column":13},"end":{"line":416,"column":13}}]},"82":{"line":416,"type":"binary-expr","locations":[{"start":{"line":416,"column":16},"end":{"line":416,"column":27}},{"start":{"line":416,"column":32},"end":{"line":416,"column":70}}]},"83":{"line":419,"type":"if","locations":[{"start":{"line":419,"column":11},"end":{"line":419,"column":11}},{"start":{"line":419,"column":11},"end":{"line":419,"column":11}}]},"84":{"line":419,"type":"binary-expr","locations":[{"start":{"line":419,"column":14},"end":{"line":419,"column":32}},{"start":{"line":419,"column":36},"end":{"line":419,"column":54}},{"start":{"line":420,"column":9},"end":{"line":420,"column":27}}]},"85":{"line":421,"type":"if","locations":[{"start":{"line":421,"column":8},"end":{"line":421,"column":8}},{"start":{"line":421,"column":8},"end":{"line":421,"column":8}}]},"86":{"line":426,"type":"if","locations":[{"start":{"line":426,"column":4},"end":{"line":426,"column":4}},{"start":{"line":426,"column":4},"end":{"line":426,"column":4}}]},"87":{"line":426,"type":"binary-expr","locations":[{"start":{"line":426,"column":7},"end":{"line":426,"column":26}},{"start":{"line":426,"column":30},"end":{"line":426,"column":48}}]},"88":{"line":428,"type":"if","locations":[{"start":{"line":428,"column":11},"end":{"line":428,"column":11}},{"start":{"line":428,"column":11},"end":{"line":428,"column":11}}]},"89":{"line":428,"type":"binary-expr","locations":[{"start":{"line":428,"column":14},"end":{"line":428,"column":32}},{"start":{"line":428,"column":36},"end":{"line":428,"column":54}}]},"90":{"line":431,"type":"if","locations":[{"start":{"line":431,"column":6},"end":{"line":431,"column":6}},{"start":{"line":431,"column":6},"end":{"line":431,"column":6}}]},"91":{"line":433,"type":"if","locations":[{"start":{"line":433,"column":13},"end":{"line":433,"column":13}},{"start":{"line":433,"column":13},"end":{"line":433,"column":13}}]},"92":{"line":433,"type":"binary-expr","locations":[{"start":{"line":433,"column":16},"end":{"line":433,"column":27}},{"start":{"line":433,"column":31},"end":{"line":433,"column":48}},{"start":{"line":433,"column":52},"end":{"line":433,"column":70}}]},"93":{"line":434,"type":"if","locations":[{"start":{"line":434,"column":8},"end":{"line":434,"column":8}},{"start":{"line":434,"column":8},"end":{"line":434,"column":8}}]},"94":{"line":438,"type":"if","locations":[{"start":{"line":438,"column":8},"end":{"line":438,"column":8}},{"start":{"line":438,"column":8},"end":{"line":438,"column":8}}]},"95":{"line":469,"type":"if","locations":[{"start":{"line":469,"column":4},"end":{"line":469,"column":4}},{"start":{"line":469,"column":4},"end":{"line":469,"column":4}}]},"96":{"line":479,"type":"if","locations":[{"start":{"line":479,"column":2},"end":{"line":479,"column":2}},{"start":{"line":479,"column":2},"end":{"line":479,"column":2}}]},"97":{"line":479,"type":"binary-expr","locations":[{"start":{"line":479,"column":5},"end":{"line":479,"column":18}},{"start":{"line":479,"column":22},"end":{"line":479,"column":38}}]},"98":{"line":489,"type":"if","locations":[{"start":{"line":489,"column":2},"end":{"line":489,"column":2}},{"start":{"line":489,"column":2},"end":{"line":489,"column":2}}]},"99":{"line":489,"type":"binary-expr","locations":[{"start":{"line":489,"column":5},"end":{"line":489,"column":23}},{"start":{"line":489,"column":27},"end":{"line":489,"column":43}},{"start":{"line":490,"column":7},"end":{"line":490,"column":50}},{"start":{"line":491,"column":7},"end":{"line":491,"column":19}},{"start":{"line":491,"column":23},"end":{"line":491,"column":55}}]},"100":{"line":494,"type":"cond-expr","locations":[{"start":{"line":494,"column":39},"end":{"line":494,"column":73}},{"start":{"line":494,"column":76},"end":{"line":494,"column":108}}]},"101":{"line":495,"type":"if","locations":[{"start":{"line":495,"column":4},"end":{"line":495,"column":4}},{"start":{"line":495,"column":4},"end":{"line":495,"column":4}}]},"102":{"line":499,"type":"if","locations":[{"start":{"line":499,"column":4},"end":{"line":499,"column":4}},{"start":{"line":499,"column":4},"end":{"line":499,"column":4}}]},"103":{"line":499,"type":"binary-expr","locations":[{"start":{"line":499,"column":7},"end":{"line":499,"column":19}},{"start":{"line":500,"column":9},"end":{"line":500,"column":54}}]},"104":{"line":514,"type":"if","locations":[{"start":{"line":514,"column":2},"end":{"line":514,"column":2}},{"start":{"line":514,"column":2},"end":{"line":514,"column":2}}]},"105":{"line":514,"type":"binary-expr","locations":[{"start":{"line":514,"column":5},"end":{"line":514,"column":25}},{"start":{"line":514,"column":29},"end":{"line":514,"column":45}},{"start":{"line":515,"column":7},"end":{"line":515,"column":47}},{"start":{"line":516,"column":7},"end":{"line":516,"column":19}},{"start":{"line":516,"column":23},"end":{"line":516,"column":55}}]},"106":{"line":519,"type":"cond-expr","locations":[{"start":{"line":519,"column":39},"end":{"line":519,"column":73}},{"start":{"line":519,"column":76},"end":{"line":519,"column":108}}]},"107":{"line":520,"type":"if","locations":[{"start":{"line":520,"column":4},"end":{"line":520,"column":4}},{"start":{"line":520,"column":4},"end":{"line":520,"column":4}}]},"108":{"line":530,"type":"if","locations":[{"start":{"line":530,"column":2},"end":{"line":530,"column":2}},{"start":{"line":530,"column":2},"end":{"line":530,"column":2}}]},"109":{"line":530,"type":"binary-expr","locations":[{"start":{"line":530,"column":5},"end":{"line":530,"column":21}},{"start":{"line":530,"column":25},"end":{"line":530,"column":41}},{"start":{"line":531,"column":7},"end":{"line":531,"column":47}},{"start":{"line":532,"column":7},"end":{"line":532,"column":19}},{"start":{"line":532,"column":23},"end":{"line":532,"column":55}}]},"110":{"line":535,"type":"cond-expr","locations":[{"start":{"line":535,"column":39},"end":{"line":535,"column":73}},{"start":{"line":535,"column":76},"end":{"line":535,"column":108}}]},"111":{"line":536,"type":"if","locations":[{"start":{"line":536,"column":4},"end":{"line":536,"column":4}},{"start":{"line":536,"column":4},"end":{"line":536,"column":4}}]},"112":{"line":540,"type":"if","locations":[{"start":{"line":540,"column":4},"end":{"line":540,"column":4}},{"start":{"line":540,"column":4},"end":{"line":540,"column":4}}]},"113":{"line":540,"type":"binary-expr","locations":[{"start":{"line":540,"column":7},"end":{"line":540,"column":19}},{"start":{"line":541,"column":9},"end":{"line":541,"column":54}}]},"114":{"line":555,"type":"if","locations":[{"start":{"line":555,"column":2},"end":{"line":555,"column":2}},{"start":{"line":555,"column":2},"end":{"line":555,"column":2}}]},"115":{"line":555,"type":"binary-expr","locations":[{"start":{"line":555,"column":5},"end":{"line":555,"column":25}},{"start":{"line":555,"column":29},"end":{"line":555,"column":78}}]},"116":{"line":563,"type":"cond-expr","locations":[{"start":{"line":563,"column":37},"end":{"line":563,"column":71}},{"start":{"line":563,"column":74},"end":{"line":563,"column":106}}]},"117":{"line":580,"type":"if","locations":[{"start":{"line":580,"column":2},"end":{"line":580,"column":2}},{"start":{"line":580,"column":2},"end":{"line":580,"column":2}}]},"118":{"line":580,"type":"binary-expr","locations":[{"start":{"line":580,"column":5},"end":{"line":580,"column":40}},{"start":{"line":581,"column":7},"end":{"line":581,"column":32}},{"start":{"line":582,"column":7},"end":{"line":582,"column":24}}]},"119":{"line":586,"type":"if","locations":[{"start":{"line":586,"column":9},"end":{"line":586,"column":9}},{"start":{"line":586,"column":9},"end":{"line":586,"column":9}}]},"120":{"line":586,"type":"binary-expr","locations":[{"start":{"line":586,"column":12},"end":{"line":586,"column":47}},{"start":{"line":587,"column":7},"end":{"line":587,"column":32}}]},"121":{"line":609,"type":"binary-expr","locations":[{"start":{"line":609,"column":19},"end":{"line":609,"column":33}},{"start":{"line":609,"column":37},"end":{"line":609,"column":59}}]},"122":{"line":612,"type":"if","locations":[{"start":{"line":612,"column":2},"end":{"line":612,"column":2}},{"start":{"line":612,"column":2},"end":{"line":612,"column":2}}]},"123":{"line":612,"type":"binary-expr","locations":[{"start":{"line":612,"column":5},"end":{"line":612,"column":43}},{"start":{"line":612,"column":47},"end":{"line":612,"column":89}}]},"124":{"line":617,"type":"cond-expr","locations":[{"start":{"line":617,"column":34},"end":{"line":617,"column":48}},{"start":{"line":617,"column":51},"end":{"line":617,"column":53}}]},"125":{"line":622,"type":"if","locations":[{"start":{"line":622,"column":2},"end":{"line":622,"column":2}},{"start":{"line":622,"column":2},"end":{"line":622,"column":2}}]},"126":{"line":624,"type":"if","locations":[{"start":{"line":624,"column":6},"end":{"line":624,"column":6}},{"start":{"line":624,"column":6},"end":{"line":624,"column":6}}]},"127":{"line":631,"type":"if","locations":[{"start":{"line":631,"column":2},"end":{"line":631,"column":2}},{"start":{"line":631,"column":2},"end":{"line":631,"column":2}}]},"128":{"line":631,"type":"binary-expr","locations":[{"start":{"line":631,"column":5},"end":{"line":631,"column":43}},{"start":{"line":631,"column":47},"end":{"line":631,"column":89}}]},"129":{"line":633,"type":"if","locations":[{"start":{"line":633,"column":9},"end":{"line":633,"column":9}},{"start":{"line":633,"column":9},"end":{"line":633,"column":9}}]},"130":{"line":633,"type":"binary-expr","locations":[{"start":{"line":633,"column":12},"end":{"line":633,"column":50}},{"start":{"line":633,"column":54},"end":{"line":633,"column":96}}]},"131":{"line":641,"type":"if","locations":[{"start":{"line":641,"column":2},"end":{"line":641,"column":2}},{"start":{"line":641,"column":2},"end":{"line":641,"column":2}}]},"132":{"line":641,"type":"binary-expr","locations":[{"start":{"line":641,"column":5},"end":{"line":641,"column":52}},{"start":{"line":642,"column":7},"end":{"line":642,"column":30}}]},"133":{"line":646,"type":"if","locations":[{"start":{"line":646,"column":2},"end":{"line":646,"column":2}},{"start":{"line":646,"column":2},"end":{"line":646,"column":2}}]},"134":{"line":646,"type":"binary-expr","locations":[{"start":{"line":646,"column":5},"end":{"line":646,"column":61}},{"start":{"line":647,"column":7},"end":{"line":647,"column":30}},{"start":{"line":648,"column":7},"end":{"line":648,"column":27}}]},"135":{"line":652,"type":"if","locations":[{"start":{"line":652,"column":2},"end":{"line":652,"column":2}},{"start":{"line":652,"column":2},"end":{"line":652,"column":2}}]},"136":{"line":652,"type":"binary-expr","locations":[{"start":{"line":652,"column":5},"end":{"line":652,"column":50}},{"start":{"line":653,"column":7},"end":{"line":653,"column":27}}]},"137":{"line":658,"type":"if","locations":[{"start":{"line":658,"column":2},"end":{"line":658,"column":2}},{"start":{"line":658,"column":2},"end":{"line":658,"column":2}}]},"138":{"line":658,"type":"binary-expr","locations":[{"start":{"line":658,"column":5},"end":{"line":658,"column":61}},{"start":{"line":659,"column":7},"end":{"line":659,"column":54}}]},"139":{"line":661,"type":"if","locations":[{"start":{"line":661,"column":4},"end":{"line":661,"column":4}},{"start":{"line":661,"column":4},"end":{"line":661,"column":4}}]},"140":{"line":661,"type":"binary-expr","locations":[{"start":{"line":661,"column":7},"end":{"line":661,"column":29}},{"start":{"line":661,"column":33},"end":{"line":661,"column":75}}]},"141":{"line":665,"type":"if","locations":[{"start":{"line":665,"column":6},"end":{"line":665,"column":6}},{"start":{"line":665,"column":6},"end":{"line":665,"column":6}}]},"142":{"line":668,"type":"if","locations":[{"start":{"line":668,"column":11},"end":{"line":668,"column":11}},{"start":{"line":668,"column":11},"end":{"line":668,"column":11}}]},"143":{"line":668,"type":"binary-expr","locations":[{"start":{"line":668,"column":14},"end":{"line":668,"column":36}},{"start":{"line":668,"column":40},"end":{"line":668,"column":82}}]},"144":{"line":672,"type":"if","locations":[{"start":{"line":672,"column":6},"end":{"line":672,"column":6}},{"start":{"line":672,"column":6},"end":{"line":672,"column":6}}]},"145":{"line":677,"type":"if","locations":[{"start":{"line":677,"column":4},"end":{"line":677,"column":4}},{"start":{"line":677,"column":4},"end":{"line":677,"column":4}}]},"146":{"line":685,"type":"if","locations":[{"start":{"line":685,"column":2},"end":{"line":685,"column":2}},{"start":{"line":685,"column":2},"end":{"line":685,"column":2}}]},"147":{"line":689,"type":"if","locations":[{"start":{"line":689,"column":4},"end":{"line":689,"column":4}},{"start":{"line":689,"column":4},"end":{"line":689,"column":4}}]},"148":{"line":694,"type":"if","locations":[{"start":{"line":694,"column":4},"end":{"line":694,"column":4}},{"start":{"line":694,"column":4},"end":{"line":694,"column":4}}]},"149":{"line":694,"type":"binary-expr","locations":[{"start":{"line":694,"column":7},"end":{"line":694,"column":29}},{"start":{"line":694,"column":33},"end":{"line":694,"column":75}}]},"150":{"line":696,"type":"if","locations":[{"start":{"line":696,"column":11},"end":{"line":696,"column":11}},{"start":{"line":696,"column":11},"end":{"line":696,"column":11}}]},"151":{"line":696,"type":"binary-expr","locations":[{"start":{"line":696,"column":14},"end":{"line":696,"column":36}},{"start":{"line":696,"column":40},"end":{"line":696,"column":82}}]},"152":{"line":701,"type":"if","locations":[{"start":{"line":701,"column":4},"end":{"line":701,"column":4}},{"start":{"line":701,"column":4},"end":{"line":701,"column":4}}]},"153":{"line":711,"type":"if","locations":[{"start":{"line":711,"column":2},"end":{"line":711,"column":2}},{"start":{"line":711,"column":2},"end":{"line":711,"column":2}}]},"154":{"line":713,"type":"cond-expr","locations":[{"start":{"line":713,"column":55},"end":{"line":713,"column":74}},{"start":{"line":713,"column":77},"end":{"line":713,"column":98}}]},"155":{"line":721,"type":"binary-expr","locations":[{"start":{"line":721,"column":22},"end":{"line":721,"column":52}},{"start":{"line":721,"column":56},"end":{"line":721,"column":58}}]},"156":{"line":727,"type":"if","locations":[{"start":{"line":727,"column":8},"end":{"line":727,"column":8}},{"start":{"line":727,"column":8},"end":{"line":727,"column":8}}]},"157":{"line":733,"type":"if","locations":[{"start":{"line":733,"column":6},"end":{"line":733,"column":6}},{"start":{"line":733,"column":6},"end":{"line":733,"column":6}}]},"158":{"line":752,"type":"if","locations":[{"start":{"line":752,"column":2},"end":{"line":752,"column":2}},{"start":{"line":752,"column":2},"end":{"line":752,"column":2}}]},"159":{"line":757,"type":"if","locations":[{"start":{"line":757,"column":2},"end":{"line":757,"column":2}},{"start":{"line":757,"column":2},"end":{"line":757,"column":2}}]},"160":{"line":757,"type":"binary-expr","locations":[{"start":{"line":757,"column":5},"end":{"line":757,"column":17}},{"start":{"line":757,"column":21},"end":{"line":757,"column":61}}]},"161":{"line":785,"type":"if","locations":[{"start":{"line":785,"column":2},"end":{"line":785,"column":2}},{"start":{"line":785,"column":2},"end":{"line":785,"column":2}}]},"162":{"line":805,"type":"if","locations":[{"start":{"line":805,"column":2},"end":{"line":805,"column":2}},{"start":{"line":805,"column":2},"end":{"line":805,"column":2}}]},"163":{"line":805,"type":"binary-expr","locations":[{"start":{"line":805,"column":5},"end":{"line":805,"column":17}},{"start":{"line":805,"column":21},"end":{"line":805,"column":61}}]},"164":{"line":824,"type":"cond-expr","locations":[{"start":{"line":824,"column":36},"end":{"line":824,"column":61}},{"start":{"line":824,"column":64},"end":{"line":824,"column":65}}]},"165":{"line":832,"type":"if","locations":[{"start":{"line":832,"column":2},"end":{"line":832,"column":2}},{"start":{"line":832,"column":2},"end":{"line":832,"column":2}}]},"166":{"line":848,"type":"if","locations":[{"start":{"line":848,"column":4},"end":{"line":848,"column":4}},{"start":{"line":848,"column":4},"end":{"line":848,"column":4}}]},"167":{"line":848,"type":"binary-expr","locations":[{"start":{"line":848,"column":7},"end":{"line":848,"column":14}},{"start":{"line":848,"column":18},"end":{"line":848,"column":30}},{"start":{"line":849,"column":9},"end":{"line":849,"column":64}}]},"168":{"line":859,"type":"cond-expr","locations":[{"start":{"line":859,"column":47},"end":{"line":859,"column":66}},{"start":{"line":859,"column":69},"end":{"line":859,"column":77}}]},"169":{"line":860,"type":"cond-expr","locations":[{"start":{"line":860,"column":44},"end":{"line":860,"column":60}},{"start":{"line":860,"column":63},"end":{"line":860,"column":71}}]},"170":{"line":861,"type":"cond-expr","locations":[{"start":{"line":861,"column":47},"end":{"line":861,"column":66}},{"start":{"line":861,"column":69},"end":{"line":861,"column":77}}]},"171":{"line":870,"type":"if","locations":[{"start":{"line":870,"column":2},"end":{"line":870,"column":2}},{"start":{"line":870,"column":2},"end":{"line":870,"column":2}}]},"172":{"line":874,"type":"if","locations":[{"start":{"line":874,"column":2},"end":{"line":874,"column":2}},{"start":{"line":874,"column":2},"end":{"line":874,"column":2}}]},"173":{"line":883,"type":"if","locations":[{"start":{"line":883,"column":4},"end":{"line":883,"column":4}},{"start":{"line":883,"column":4},"end":{"line":883,"column":4}}]},"174":{"line":888,"type":"if","locations":[{"start":{"line":888,"column":2},"end":{"line":888,"column":2}},{"start":{"line":888,"column":2},"end":{"line":888,"column":2}}]},"175":{"line":893,"type":"cond-expr","locations":[{"start":{"line":893,"column":17},"end":{"line":893,"column":19}},{"start":{"line":893,"column":22},"end":{"line":893,"column":35}}]},"176":{"line":893,"type":"cond-expr","locations":[{"start":{"line":893,"column":30},"end":{"line":893,"column":31}},{"start":{"line":893,"column":34},"end":{"line":893,"column":35}}]},"177":{"line":898,"type":"if","locations":[{"start":{"line":898,"column":4},"end":{"line":898,"column":4}},{"start":{"line":898,"column":4},"end":{"line":898,"column":4}}]},"178":{"line":898,"type":"binary-expr","locations":[{"start":{"line":898,"column":7},"end":{"line":898,"column":21}},{"start":{"line":898,"column":25},"end":{"line":898,"column":47}}]},"179":{"line":901,"type":"if","locations":[{"start":{"line":901,"column":11},"end":{"line":901,"column":11}},{"start":{"line":901,"column":11},"end":{"line":901,"column":11}}]},"180":{"line":901,"type":"binary-expr","locations":[{"start":{"line":901,"column":14},"end":{"line":901,"column":40}},{"start":{"line":902,"column":9},"end":{"line":902,"column":59}}]},"181":{"line":912,"type":"if","locations":[{"start":{"line":912,"column":2},"end":{"line":912,"column":2}},{"start":{"line":912,"column":2},"end":{"line":912,"column":2}}]},"182":{"line":916,"type":"if","locations":[{"start":{"line":916,"column":4},"end":{"line":916,"column":4}},{"start":{"line":916,"column":4},"end":{"line":916,"column":4}}]},"183":{"line":918,"type":"if","locations":[{"start":{"line":918,"column":11},"end":{"line":918,"column":11}},{"start":{"line":918,"column":11},"end":{"line":918,"column":11}}]},"184":{"line":918,"type":"binary-expr","locations":[{"start":{"line":918,"column":14},"end":{"line":918,"column":32}},{"start":{"line":918,"column":36},"end":{"line":918,"column":55}}]},"185":{"line":930,"type":"if","locations":[{"start":{"line":930,"column":4},"end":{"line":930,"column":4}},{"start":{"line":930,"column":4},"end":{"line":930,"column":4}}]},"186":{"line":980,"type":"if","locations":[{"start":{"line":980,"column":2},"end":{"line":980,"column":2}},{"start":{"line":980,"column":2},"end":{"line":980,"column":2}}]},"187":{"line":993,"type":"if","locations":[{"start":{"line":993,"column":6},"end":{"line":993,"column":6}},{"start":{"line":993,"column":6},"end":{"line":993,"column":6}}]},"188":{"line":995,"type":"if","locations":[{"start":{"line":995,"column":8},"end":{"line":995,"column":8}},{"start":{"line":995,"column":8},"end":{"line":995,"column":8}}]}},"code":["\"use strict\"","","var inherits = require('util').inherits,","  f = require('util').format,","  EventEmitter = require('events').EventEmitter,","  Logger = require('../connection/logger'),","  ReadPreference = require('./read_preference'),","  MongoError = require('../error');","","var TopologyType = {","  'Single': 'Single', 'ReplicaSetNoPrimary': 'ReplicaSetNoPrimary',","  'ReplicaSetWithPrimary': 'ReplicaSetWithPrimary', 'Sharded': 'Sharded',","  'Unknown': 'Unknown'","};","","var ServerType = {","  'Standalone': 'Standalone', 'Mongos': 'Mongos', 'PossiblePrimary': 'PossiblePrimary',","  'RSPrimary': 'RSPrimary', 'RSSecondary': 'RSSecondary', 'RSArbiter': 'RSArbiter',","  'RSOther': 'RSOther', 'RSGhost': 'RSGhost', 'Unknown': 'Unknown'","};","","var ReplSetState = function(options) {","  options = options || {};","  // Add event listener","  EventEmitter.call(this);","  // Topology state","  this.topologyType = TopologyType.ReplicaSetNoPrimary;","  this.setName = options.setName;","","  // Server set","  this.set = {};","","  // Unpacked options","  this.id = options.id;","  this.setName = options.setName;","","  // Replicaset logger","  this.logger = options.logger || Logger('ReplSet', options);","","  // Server selection index","  this.index = 0;","  // Acceptable latency","  this.acceptableLatency = options.acceptableLatency || 15;","","  // heartbeatFrequencyMS","  this.heartbeatFrequencyMS = options.heartbeatFrequencyMS || 10000;","","  // Server side","  this.primary = null;","  this.secondaries = [];","  this.arbiters = [];","  this.passives = [];","  this.ghosts = [];","  // Current unknown hosts","  this.unknownServers = [];","  // In set status","  this.set = {};","  // Status","  this.maxElectionId = null;","  this.maxSetVersion = 0;","  // Description of the Replicaset","  this.replicasetDescription = {","    \"topologyType\": \"Unknown\", \"servers\": []","  };","}","","inherits(ReplSetState, EventEmitter);","","ReplSetState.prototype.hasPrimaryAndSecondary = function() {","  return this.primary != null && this.secondaries.length > 0;","}","","ReplSetState.prototype.hasPrimaryOrSecondary = function() {","  return this.hasPrimary() || this.hasSecondary();","}","","ReplSetState.prototype.hasPrimary = function() {","  return this.primary != null;","}","","ReplSetState.prototype.hasSecondary = function() {","  return this.secondaries.length > 0;","}","","ReplSetState.prototype.get = function(host) {","  var servers = this.allServers();","","  for(var i = 0; i < servers.length; i++) {","    if(servers[i].name.toLowerCase() === host.toLowerCase()) {","      return servers[i];","    }","  }","","  return null;","}","","ReplSetState.prototype.allServers = function(options) {","  options = options || {};","  var servers = this.primary ? [this.primary] : [];","  servers = servers.concat(this.secondaries);","  if(!options.ignoreArbiters) servers = servers.concat(this.arbiters);","  servers = servers.concat(this.passives);","  return servers;","}","","ReplSetState.prototype.destroy = function(options) {","  // Destroy all sockets","  if(this.primary) this.primary.destroy(options);","  this.secondaries.forEach(function(x) { x.destroy(options); });","  this.arbiters.forEach(function(x) { x.destroy(options); });","  this.passives.forEach(function(x) { x.destroy(options); });","  this.ghosts.forEach(function(x) { x.destroy(options); });","  // Clear out the complete state","  this.secondaries = [];","  this.arbiters = [];","  this.passives = [];","  this.ghosts = [];","  this.unknownServers = [];","  this.set = {};","}","","ReplSetState.prototype.remove = function(server, options) {","  options = options || {};","","  // Get the server name and lowerCase it","  var serverName = server.name.toLowerCase();","","  // Only remove if the current server is not connected","  var servers = this.primary ? [this.primary] : [];","  servers = servers.concat(this.secondaries);","  servers = servers.concat(this.arbiters);","  servers = servers.concat(this.passives);","","  // Check if it's active and this is just a failed connection attempt","  for(var i = 0; i < servers.length; i++) {","    if(!options.force","      && servers[i].equals(server)","      && servers[i].isConnected","      && servers[i].isConnected()) {","      return;","    }","  }","","  // If we have it in the set remove it","  if(this.set[serverName]) {","    this.set[serverName].type = ServerType.Unknown;","    this.set[serverName].electionId = null;","    this.set[serverName].setName = null;","    this.set[serverName].setVersion = null;","  }","","  // Remove type","  var removeType = null;","","  // Remove from any lists","  if(this.primary && this.primary.equals(server)) {","    this.primary = null;","    this.topologyType = TopologyType.ReplicaSetNoPrimary;","    removeType = 'primary';","  }","","  // Remove from any other server lists","  removeType = removeFrom(server, this.secondaries) ? 'secondary' : removeType;","  removeType = removeFrom(server, this.arbiters) ? 'arbiter' : removeType;","  removeType = removeFrom(server, this.passives) ? 'secondary' : removeType;","  removeFrom(server, this.ghosts);","  removeFrom(server, this.unknownServers);","","  // Push to unknownServers","  this.unknownServers.push(serverName);","","  // Do we have a removeType","  if(removeType) {","    this.emit('left', removeType, server);","  }","}","","ReplSetState.prototype.update = function(server) {","  var self = this;","  // Get the current ismaster","  var ismaster = server.lastIsMaster();","","  // Get the server name and lowerCase it","  var serverName = server.name.toLowerCase();","","  //","  // Add any hosts","  //","  if(ismaster) {","    // Join all the possible new hosts","    var hosts = Array.isArray(ismaster.hosts) ? ismaster.hosts : [];","    hosts = hosts.concat(Array.isArray(ismaster.arbiters) ? ismaster.arbiters : []);","    hosts = hosts.concat(Array.isArray(ismaster.passives) ? ismaster.passives : []);","    hosts = hosts.map(function(s) { return s.toLowerCase() });","","    // Add all hosts as unknownServers","    for(var i = 0; i < hosts.length; i++) {","      // Add to the list of unknown server","      if(this.unknownServers.indexOf(hosts[i]) == -1","        && (!this.set[hosts[i]] || this.set[hosts[i]].type == ServerType.Unknown)) {","        this.unknownServers.push(hosts[i].toLowerCase());","      }","","      if(!this.set[hosts[i]]) {","        this.set[hosts[i]] = {","          type: ServerType.Unknown,","          electionId: null,","          setName: null,","          setVersion: null","        }","      }","    }","  }","","  //","  // Unknown server","  //","  if(!ismaster && !inList(ismaster, server, this.unknownServers)) {","    self.set[serverName] = {","      type: ServerType.Unknown, setVersion: null, electionId: null, setName: null","    }","    // Update set information about the server instance","    self.set[serverName].type = ServerType.Unknown;","    self.set[serverName].electionId = ismaster ? ismaster.electionId : ismaster;","    self.set[serverName].setName = ismaster ? ismaster.setName : ismaster;","    self.set[serverName].setVersion = ismaster ? ismaster.setVersion : ismaster;","","    if(self.unknownServers.indexOf(server.name) == -1) {","      self.unknownServers.push(serverName);","    }","","    // Set the topology","    return false;","  }","","  //","  // Is this a mongos","  //","  if(ismaster && ismaster.msg == 'isdbgrid') {","    return false;","  }","","  // A RSOther instance","  if((ismaster.setName && ismaster.hidden)","    || (ismaster.setName && !ismaster.ismaster && !ismaster.secondary && !ismaster.arbiterOnly && !ismaster.passive)) {","    self.set[serverName] = {","      type: ServerType.RSOther, setVersion: null,","      electionId: null, setName: ismaster.setName","    }","    // Set the topology","    this.topologyType = this.primary ? TopologyType.ReplicaSetWithPrimary : TopologyType.ReplicaSetNoPrimary;","    if(ismaster.setName) this.setName = ismaster.setName;","    return false;","  }","","  // A RSGhost instance","  if(ismaster.isreplicaset) {","    self.set[serverName] = {","      type: ServerType.RSGhost, setVersion: null,","      electionId: null, setName: null","    }","","    // Set the topology","    this.topologyType = this.primary ? TopologyType.ReplicaSetWithPrimary : TopologyType.ReplicaSetNoPrimary;","    if(ismaster.setName) this.setName = ismaster.setName;","","    // Set the topology","    return false;","  }","","  //","  // Standalone server, destroy and return","  //","  if(ismaster && ismaster.ismaster && !ismaster.setName) {","    this.topologyType = this.primary ? TopologyType.ReplicaSetWithPrimary : TopologyType.Unknown;","    this.remove(server, {force:true});","    return false;","  }","","  //","  // Server in maintanance mode","  //","  if(ismaster && !ismaster.ismaster && !ismaster.secondary && !ismaster.arbiterOnly) {","    this.remove(server, {force:true});","    return false;","  }","","  //","  // If the .me field does not match the passed in server","  //","  if(ismaster.me && ismaster.me.toLowerCase() != serverName) {","    if(this.logger.isWarn()) {","      this.logger.warn(f('the seedlist server was removed due to its address %s not matching its ismaster.me address %s', server.name, ismaster.me));","    }","","    // Delete from the set","    delete this.set[serverName];","    // Delete unknown servers","    removeFrom(server, self.unknownServers);","","    // Destroy the instance","    server.destroy();","","    // Set the type of topology we have","    if(this.primary && !this.primary.equals(server)) {","      this.topologyType = TopologyType.ReplicaSetWithPrimary;","    } else {","      this.topologyType = TopologyType.ReplicaSetNoPrimary;","    }","","    //","    // We have a potential primary","    //","    if(!this.primary && ismaster.primary) {","      this.set[ismaster.primary.toLowerCase()] = {","        type: ServerType.PossiblePrimary,","        setName: null,","        electionId: null,","        setVersion: null,","      }","    }","","    return false;","  }","","  //","  // Primary handling","  //","  if(!this.primary && ismaster.ismaster && ismaster.setName) {","    var ismasterElectionId = server.lastIsMaster().electionId;","    if(this.setName && this.setName != ismaster.setName) {","      this.topologyType = TopologyType.ReplicaSetNoPrimary;","      return new MongoError(f('setName from ismaster does not match provided connection setName [%s] != [%s]', ismaster.setName, this.setName));","    }","","    if(!this.maxElectionId && ismasterElectionId) {","      this.maxElectionId = ismasterElectionId;","    } else if(this.maxElectionId && ismasterElectionId) {","      var result = compareObjectIds(this.maxElectionId, ismasterElectionId);","      // Get the electionIds","      var ismasterSetVersion = server.lastIsMaster().setVersion;","","      if(result == 1) {","        this.topologyType = TopologyType.ReplicaSetNoPrimary;","        return false;","      } else if(result == 0 && ismasterSetVersion) {","        if(ismasterSetVersion < this.maxSetVersion) {","          this.topologyType = TopologyType.ReplicaSetNoPrimary;","          return false;","        }","      }","","      this.maxSetVersion = ismasterSetVersion;","      this.maxElectionId = ismasterElectionId;","    }","","    // Hande normalization of server names","    var normalizedHosts = ismaster.hosts.map(function(x) { return x.toLowerCase() });","    var locationIndex = normalizedHosts.indexOf(serverName);","","    // Validate that the server exists in the host list","    if(locationIndex != -1) {","      self.primary = server;","      self.set[serverName] = {","        type: ServerType.RSPrimary,","        setVersion: ismaster.setVersion,","        electionId: ismaster.electionId,","        setName: ismaster.setName","      }","","      // Set the topology","      this.topologyType = TopologyType.ReplicaSetWithPrimary;","      if(ismaster.setName) this.setName = ismaster.setName;","      removeFrom(server, self.unknownServers);","      removeFrom(server, self.secondaries);","      removeFrom(server, self.passives);","      self.emit('joined', 'primary', server);","    } else {","      this.topologyType = TopologyType.ReplicaSetNoPrimary;","    }","","    emitTopologyDescriptionChanged(self);","    return true;","  } else if(ismaster.ismaster && ismaster.setName) {","    // Get the electionIds","    var currentElectionId = self.set[self.primary.name.toLowerCase()].electionId;","    var currentSetVersion = self.set[self.primary.name.toLowerCase()].setVersion;","    var currentSetName = self.set[self.primary.name.toLowerCase()].setName;","    ismasterElectionId = server.lastIsMaster().electionId;","    ismasterSetVersion = server.lastIsMaster().setVersion;","    var ismasterSetName = server.lastIsMaster().setName;","","    // Is it the same server instance","    if(this.primary.equals(server)","      && currentSetName == ismasterSetName) {","        return false;","    }","","    // If we do not have the same rs name","    if(currentSetName && currentSetName != ismasterSetName) {","      if(!this.primary.equals(server)) {","        this.topologyType = TopologyType.ReplicaSetWithPrimary;","      } else {","        this.topologyType = TopologyType.ReplicaSetNoPrimary;","      }","","      return false;","    }","","    // Check if we need to replace the server","    if(currentElectionId && ismasterElectionId) {","      result = compareObjectIds(currentElectionId, ismasterElectionId);","","      if(result == 1) {","        return false;","      } else if(result == 0 && (currentSetVersion > ismasterSetVersion)) {","        return false;","      }","    } else if(!currentElectionId && ismasterElectionId","      && ismasterSetVersion) {","        if(ismasterSetVersion < this.maxSetVersion) {","          return false;","        }","    }","","    if(!this.maxElectionId && ismasterElectionId) {","      this.maxElectionId = ismasterElectionId;","    } else if(this.maxElectionId && ismasterElectionId) {","      result = compareObjectIds(this.maxElectionId, ismasterElectionId);","","      if(result == 1) {","        return false;","      } else if(result == 0 && currentSetVersion && ismasterSetVersion) {","        if(ismasterSetVersion < this.maxSetVersion) {","          return false;","        }","      } else {","        if(ismasterSetVersion < this.maxSetVersion) {","          return false;","        }","      }","","      this.maxElectionId = ismasterElectionId;","      this.maxSetVersion = ismasterSetVersion;","    } else {","      this.maxSetVersion = ismasterSetVersion;","    }","","    // Modify the entry to unknown","    self.set[self.primary.name.toLowerCase()] = {","      type: ServerType.Unknown, setVersion: null,","      electionId: null, setName: null","    }","","    // Signal primary left","    self.emit('left', 'primary', this.primary);","    // Destroy the instance","    self.primary.destroy();","    // Set the new instance","    self.primary = server;","    // Set the set information","    self.set[serverName] = {","      type: ServerType.RSPrimary, setVersion: ismaster.setVersion,","      electionId: ismaster.electionId, setName: ismaster.setName","    }","","    // Set the topology","    this.topologyType = TopologyType.ReplicaSetWithPrimary;","    if(ismaster.setName) this.setName = ismaster.setName;","    removeFrom(server, self.unknownServers);","    removeFrom(server, self.secondaries);","    removeFrom(server, self.passives);","    self.emit('joined', 'primary', server);","    emitTopologyDescriptionChanged(self);","    return true;","  }","","  // A possible instance","  if(!this.primary && ismaster.primary) {","    self.set[ismaster.primary.toLowerCase()] = {","      type: ServerType.PossiblePrimary, setVersion: null,","      electionId: null, setName: null","    }","  }","","  //","  // Secondary handling","  //","  if(ismaster.secondary && ismaster.setName","    && !inList(ismaster, server, this.secondaries)","    && this.setName && this.setName == ismaster.setName) {","    addToList(self, ServerType.RSSecondary, ismaster, server, this.secondaries);","    // Set the topology","    this.topologyType = this.primary ? TopologyType.ReplicaSetWithPrimary : TopologyType.ReplicaSetNoPrimary;","    if(ismaster.setName) this.setName = ismaster.setName;","    removeFrom(server, self.unknownServers);","","    // Remove primary","    if(this.primary","      && this.primary.name.toLowerCase() == serverName) {","        server.destroy();","        this.primary = null;","        self.emit('left', 'primary', server);","    }","","    self.emit('joined', 'secondary', server);","    emitTopologyDescriptionChanged(self);","    return true;","  }","","  //","  // Arbiter handling","  //","  if(ismaster.arbiterOnly && ismaster.setName","    && !inList(ismaster, server, this.arbiters)","    && this.setName && this.setName == ismaster.setName) {","    addToList(self, ServerType.RSArbiter, ismaster, server, this.arbiters);","    // Set the topology","    this.topologyType = this.primary ? TopologyType.ReplicaSetWithPrimary : TopologyType.ReplicaSetNoPrimary;","    if(ismaster.setName) this.setName = ismaster.setName;","    removeFrom(server, self.unknownServers);","    self.emit('joined', 'arbiter', server);","    emitTopologyDescriptionChanged(self);","    return true;","  }","","  //","  // Passive handling","  //","  if(ismaster.passive && ismaster.setName","    && !inList(ismaster, server, this.passives)","    && this.setName && this.setName == ismaster.setName) {","    addToList(self, ServerType.RSSecondary, ismaster, server, this.passives);","    // Set the topology","    this.topologyType = this.primary ? TopologyType.ReplicaSetWithPrimary : TopologyType.ReplicaSetNoPrimary;","    if(ismaster.setName) this.setName = ismaster.setName;","    removeFrom(server, self.unknownServers);","","    // Remove primary","    if(this.primary","      && this.primary.name.toLowerCase() == serverName) {","        server.destroy();","        this.primary = null;","        self.emit('left', 'primary', server);","    }","","    self.emit('joined', 'secondary', server);","    emitTopologyDescriptionChanged(self);","    return true;","  }","","  //","  // Remove the primary","  //","  if(this.set[serverName] && this.set[serverName].type == ServerType.RSPrimary) {","    self.emit('left', 'primary', this.primary);","    this.primary.destroy();","    this.primary = null;","    this.topologyType = TopologyType.ReplicaSetNoPrimary;","    return false;","  }","","  this.topologyType = this.primary ? TopologyType.ReplicaSetWithPrimary : TopologyType.ReplicaSetNoPrimary;","  return false;","}","","/**"," * Recalculate single server max staleness"," * @method"," */","ReplSetState.prototype.updateServerMaxStaleness = function(server, haInterval) {","  // Locate the max secondary lastwrite","  var max = 0;","  // Go over all secondaries","  for(var i = 0; i < this.secondaries.length; i++) {","    max = Math.max(max, this.secondaries[i].lastWriteDate);","  }","","  // Perform this servers staleness calculation","  if(server.ismaster.maxWireVersion >= 5","    && server.ismaster.secondary","    && this.hasPrimary()) {","    server.staleness = (server.lastUpdateTime - server.lastWriteDate)","      - (this.primary.lastUpdateTime - this.primary.lastWriteDate)","      + haInterval;","  } else if(server.ismaster.maxWireVersion >= 5","    && server.ismaster.secondary){","    server.staleness = max - server.lastWriteDate + haInterval;","  }","}","","/**"," * Recalculate all the stalness values for secodaries"," * @method"," */","ReplSetState.prototype.updateSecondariesMaxStaleness = function(haInterval) {","  for(var i = 0; i < this.secondaries.length; i++) {","    this.updateServerMaxStaleness(this.secondaries[i], haInterval);","  }","}","","/**"," * Pick a server by the passed in ReadPreference"," * @method"," * @param {ReadPreference} readPreference The ReadPreference instance to use"," */","ReplSetState.prototype.pickServer = function(readPreference) {","  // If no read Preference set to primary by default","  readPreference = readPreference || ReadPreference.primary;","","  // maxStalenessSeconds is not allowed with a primary read","  if(readPreference.preference == 'primary' && readPreference.maxStalenessSeconds != null) {","    return new MongoError('primary readPreference incompatible with maxStalenessSeconds');","  }","","  // Check if we have any non compatible servers for maxStalenessSeconds","  var allservers = this.primary ? [this.primary] : [];","  allservers = allservers.concat(this.secondaries);","","  // Does any of the servers not support the right wire protocol version","  // for maxStalenessSeconds when maxStalenessSeconds specified on readPreference. Then error out","  if(readPreference.maxStalenessSeconds != null) {","    for(var i = 0; i < allservers.length; i++) {","      if(allservers[i].ismaster.maxWireVersion < 5) {","        return new MongoError('maxStalenessSeconds not supported by at least one of the replicaset members');","      }","    }","  }","","  // Do we have the nearest readPreference","  if(readPreference.preference == 'nearest' && readPreference.maxStalenessSeconds == null) {","    return pickNearest(this, readPreference);","  } else if(readPreference.preference == 'nearest' && readPreference.maxStalenessSeconds != null) {","    return pickNearestMaxStalenessSeconds(this, readPreference);","  }","","  // Get all the secondaries","  var secondaries = this.secondaries;","","  // Check if we can satisfy and of the basic read Preferences","  if(readPreference.equals(ReadPreference.secondary)","    && secondaries.length == 0) {","      return new MongoError(\"no secondary server available\");","    }","","  if(readPreference.equals(ReadPreference.secondaryPreferred)","    && secondaries.length == 0","    && this.primary == null) {","      return new MongoError(\"no secondary or primary server available\");","    }","","  if(readPreference.equals(ReadPreference.primary)","    && this.primary == null) {","      return new MongoError(\"no primary server available\");","    }","","  // Secondary preferred or just secondaries","  if(readPreference.equals(ReadPreference.secondaryPreferred)","    || readPreference.equals(ReadPreference.secondary)) {","","    if(secondaries.length > 0 && readPreference.maxStalenessSeconds == null) {","      // Pick nearest of any other servers available","      var server = pickNearest(this, readPreference);","      // No server in the window return primary","      if(server) {","        return server;","      }","    } else if(secondaries.length > 0 && readPreference.maxStalenessSeconds != null) {","      // Pick nearest of any other servers available","      server = pickNearestMaxStalenessSeconds(this, readPreference);","      // No server in the window return primary","      if(server) {","        return server;","      }","    }","","    if(readPreference.equals(ReadPreference.secondaryPreferred)){","      return this.primary;","    }","","    return null;","  }","","  // Primary preferred","  if(readPreference.equals(ReadPreference.primaryPreferred)) {","    server = null;","","    // We prefer the primary if it's available","    if(this.primary) {","      return this.primary;","    }","","    // Pick a secondary","    if(secondaries.length > 0 && readPreference.maxStalenessSeconds == null) {","      server = pickNearest(this, readPreference);","    } else if(secondaries.length > 0 && readPreference.maxStalenessSeconds != null) {","      server = pickNearestMaxStalenessSeconds(this, readPreference);","    }","","    //  Did we find a server","    if(server) return server;","  }","","  // Return the primary","  return this.primary;","}","","//","// Filter serves by tags","var filterByTags = function(readPreference, servers) {","  if(readPreference.tags == null) return servers;","  var filteredServers = [];","  var tagsArray = Array.isArray(readPreference.tags) ? readPreference.tags : [readPreference.tags];","","  // Iterate over the tags","  for(var j = 0; j < tagsArray.length; j++) {","    var tags = tagsArray[j];","","    // Iterate over all the servers","    for(var i = 0; i < servers.length; i++) {","      var serverTag = servers[i].lastIsMaster().tags || {};","","      // Did we find the a matching server","      var found = true;","      // Check if the server is valid","      for(var name in tags) {","        if(serverTag[name] != tags[name]) {","          found = false;","        }","      }","","      // Add to candidate list","      if(found) {","        filteredServers.push(servers[i]);","      }","    }","  }","","  // Returned filtered servers","  return filteredServers;","}","","function pickNearestMaxStalenessSeconds(self, readPreference) {","  // Only get primary and secondaries as seeds","  var servers = [];","  var heartbeatFrequencyMS = self.heartbeatFrequencyMS;","","  // Get the maxStalenessMS","  var maxStalenessMS = readPreference.maxStalenessSeconds * 1000;","","  // Check if the maxStalenessMS > 90 seconds","  if(maxStalenessMS < 90 * 1000) {","    return new MongoError('maxStalenessSeconds must be set to at least 90 seconds');","  }","","  // Add primary to list if not a secondary read preference","  if(self.primary && readPreference.preference != 'secondary') {","    servers.push(self.primary);","  }","","  // Add all the secondaries","  for(var i = 0; i < self.secondaries.length; i++) {","    servers.push(self.secondaries[i]);","  }","","  // Filter by tags","  servers = filterByTags(readPreference, servers);","","  //","  // Locate lowest time (picked servers are lowest time + acceptable Latency margin)","  // var lowest = servers.length > 0 ? servers[0].lastIsMasterMS : 0;","","  // Filter by latency","  servers = servers.filter(function(s) {","    return s.staleness <= maxStalenessMS;","  });","","  // Sort by time","  servers.sort(function(a, b) {","    // return a.time > b.time;","    return a.lastIsMasterMS > b.lastIsMasterMS","  });","","  // No servers, default to primary","  if(servers.length == 0) {","    return null","  }","","  // Ensure index does not overflow the number of available servers","  self.index = self.index % servers.length;","","  // Get the server","  var server = servers[self.index];","  // Add to the index","  self.index = self.index + 1;","  // Return the first server of the sorted and filtered list","  return server;","}","","function pickNearest(self, readPreference) {","  // Only get primary and secondaries as seeds","  var servers = [];","","  // Add primary to list if not a secondary read preference","  if(self.primary && readPreference.preference != 'secondary') {","    servers.push(self.primary);","  }","","  // Add all the secondaries","  for(var i = 0; i < self.secondaries.length; i++) {","    servers.push(self.secondaries[i]);","  }","","  // Filter by tags","  servers = filterByTags(readPreference, servers);","","  // Sort by time","  servers.sort(function(a, b) {","    // return a.time > b.time;","    return a.lastIsMasterMS > b.lastIsMasterMS","  });","","  // Locate lowest time (picked servers are lowest time + acceptable Latency margin)","  var lowest = servers.length > 0 ? servers[0].lastIsMasterMS : 0;","","  // Filter by latency","  servers = servers.filter(function(s) {","    return s.lastIsMasterMS <= lowest + self.acceptableLatency;","  });","","  // No servers, default to primary","  if(servers.length == 0) {","    return null","  }","","  // Ensure index does not overflow the number of available servers","  self.index = self.index % servers.length;","  // Get the server","  var server = servers[self.index];","  // Add to the index","  self.index = self.index + 1;","  // Return the first server of the sorted and filtered list","  return server;","}","","function inList(ismaster, server, list) {","  for(var i = 0; i < list.length; i++) {","    if(list[i] && list[i].name","      && list[i].name.toLowerCase() == server.name.toLowerCase()) return true;","  }","","  return false;","}","","function addToList(self, type, ismaster, server, list) {","  var serverName = server.name.toLowerCase();","  // Update set information about the server instance","  self.set[serverName].type = type;","  self.set[serverName].electionId = ismaster ? ismaster.electionId : ismaster;","  self.set[serverName].setName = ismaster ? ismaster.setName : ismaster;","  self.set[serverName].setVersion = ismaster ? ismaster.setVersion : ismaster;","  // Add to the list","  list.push(server);","}","","function compareObjectIds(id1, id2) {","  var a = new Buffer(id1.toHexString(), 'hex');","  var b = new Buffer(id2.toHexString(), 'hex');","","  if(a === b) {","    return 0;","  }","","  if(typeof Buffer.compare === 'function') {","    return Buffer.compare(a, b);","  }","","  var x = a.length;","  var y = b.length;","  var len = Math.min(x, y);","","  for (var i = 0; i < len; i++) {","    if (a[i] !== b[i]) {","      break;","    }","  }","","  if (i !== len) {","    x = a[i];","    y = b[i];","  }","","  return x < y ? -1 : y < x ? 1 : 0;","}","","function removeFrom(server, list) {","  for(var i = 0; i < list.length; i++) {","    if(list[i].equals && list[i].equals(server)) {","      list.splice(i, 1);","      return true;","    } else if(typeof list[i] == 'string'","      && list[i].toLowerCase() == server.name.toLowerCase()) {","        list.splice(i, 1);","        return true;","    }","  }","","  return false;","}","","function emitTopologyDescriptionChanged(self) {","  if(self.listeners('topologyDescriptionChanged').length > 0) {","    var topology = 'Unknown';","    var setName = self.setName;","","    if(self.hasPrimaryAndSecondary()) {","      topology = 'ReplicaSetWithPrimary';","    } else if(!self.hasPrimary() && self.hasSecondary()) {","      topology = 'ReplicaSetNoPrimary';","    }","","    // Generate description","    var description = {","      topologyType: topology,","      setName: setName,","      servers: []","    }","","    // Add the primary to the list","    if(self.hasPrimary()) {","      var desc = self.primary.getDescription();","      desc.type = 'RSPrimary';","      description.servers.push(desc);","    }","","    // Add all the secondaries","    description.servers = description.servers.concat(self.secondaries.map(function(x) {","      var description = x.getDescription();","      description.type = 'RSSecondary';","      return description;","    }));","","    // Add all the arbiters","    description.servers = description.servers.concat(self.arbiters.map(function(x) {","      var description = x.getDescription();","      description.type = 'RSArbiter';","      return description;","    }));","","    // Add all the passives","    description.servers = description.servers.concat(self.passives.map(function(x) {","      var description = x.getDescription();","      description.type = 'RSSecondary';","      return description;","    }));","","    // Create the result","    var result = {","      topologyId: self.id,","      previousDescription: self.replicasetDescription,","      newDescription: description,","      diff: diff(self.replicasetDescription, description)","    };","","    // Emit the topologyDescription change","    self.emit('topologyDescriptionChanged', result);","","    // Set the new description","    self.replicasetDescription = description;","  }","}","","function diff(previous, current) {","  // Difference document","  var diff = {","    servers: []","  }","","  // Previous entry","  if(!previous) {","    previous = { servers: [] };","  }","","  // Got through all the servers","  for(var i = 0; i < previous.servers.length; i++) {","    var prevServer = previous.servers[i];","","    // Go through all current servers","    for(var j = 0; j < current.servers.length; j++) {","      var currServer = current.servers[j];","","      // Matching server","      if(prevServer.address.toLowerCase() === currServer.address.toLowerCase()) {","        // We had a change in state","        if(prevServer.type != currServer.type) {","          diff.servers.push({","            address: prevServer.address,","            from: prevServer.type,","            to: currServer.type","          });","        }","      }","    }","  }","","  // Return difference","  return diff;","}","","module.exports = ReplSetState;",""],"l":{"3":1,"10":1,"16":1,"22":1,"23":0,"25":0,"27":0,"28":0,"31":0,"34":0,"35":0,"38":0,"41":0,"43":0,"46":0,"49":0,"50":0,"51":0,"52":0,"53":0,"55":0,"57":0,"59":0,"60":0,"62":0,"67":1,"69":1,"70":0,"73":1,"74":0,"77":1,"78":0,"81":1,"82":0,"85":1,"86":0,"88":0,"89":0,"90":0,"94":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"106":1,"108":0,"109":0,"110":0,"111":0,"112":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"122":1,"123":0,"126":0,"129":0,"130":0,"131":0,"132":0,"135":0,"136":0,"140":0,"145":0,"146":0,"147":0,"148":0,"149":0,"153":0,"156":0,"157":0,"158":0,"159":0,"163":0,"164":0,"165":0,"166":0,"167":0,"170":0,"173":0,"174":0,"178":1,"179":0,"181":0,"184":0,"189":0,"191":0,"192":0,"193":0,"194":0,"197":0,"199":0,"201":0,"204":0,"205":0,"218":0,"219":0,"223":0,"224":0,"225":0,"226":0,"228":0,"229":0,"233":0,"239":0,"240":0,"244":0,"246":0,"251":0,"252":0,"253":0,"257":0,"258":0,"264":0,"265":0,"268":0,"274":0,"275":0,"276":0,"277":0,"283":0,"284":0,"285":0,"291":0,"292":0,"293":0,"297":0,"299":0,"302":0,"305":0,"306":0,"308":0,"314":0,"315":0,"323":0,"329":0,"330":0,"331":0,"332":0,"333":0,"336":0,"337":0,"338":0,"339":0,"341":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"353":0,"354":0,"358":0,"359":0,"362":0,"363":0,"364":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"379":0,"382":0,"383":0,"384":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"394":0,"396":0,"400":0,"401":0,"402":0,"404":0,"407":0,"411":0,"412":0,"414":0,"415":0,"416":0,"417":0,"419":0,"421":0,"422":0,"426":0,"427":0,"428":0,"429":0,"431":0,"432":0,"433":0,"434":0,"435":0,"438":0,"439":0,"443":0,"444":0,"446":0,"450":0,"456":0,"458":0,"460":0,"462":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"479":0,"480":0,"489":0,"492":0,"494":0,"495":0,"496":0,"499":0,"501":0,"502":0,"503":0,"506":0,"507":0,"508":0,"514":0,"517":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"530":0,"533":0,"535":0,"536":0,"537":0,"540":0,"542":0,"543":0,"544":0,"547":0,"548":0,"549":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"563":0,"564":0,"571":1,"573":0,"575":0,"576":0,"580":0,"583":0,"586":0,"588":0,"596":1,"597":0,"598":0,"607":1,"609":0,"612":0,"613":0,"617":0,"618":0,"622":0,"623":0,"624":0,"625":0,"631":0,"632":0,"633":0,"634":0,"638":0,"641":0,"643":0,"646":0,"649":0,"652":0,"654":0,"658":0,"661":0,"663":0,"665":0,"666":0,"668":0,"670":0,"672":0,"673":0,"677":0,"678":0,"681":0,"685":0,"686":0,"689":0,"690":0,"694":0,"695":0,"696":0,"697":0,"701":0,"705":0,"710":1,"711":0,"712":0,"713":0,"716":0,"717":0,"720":0,"721":0,"724":0,"726":0,"727":0,"728":0,"733":0,"734":0,"740":0,"743":1,"745":0,"746":0,"749":0,"752":0,"753":0,"757":0,"758":0,"762":0,"763":0,"767":0,"774":0,"775":0,"779":0,"781":0,"785":0,"786":0,"790":0,"793":0,"795":0,"797":0,"800":1,"802":0,"805":0,"806":0,"810":0,"811":0,"815":0,"818":0,"820":0,"824":0,"827":0,"828":0,"832":0,"833":0,"837":0,"839":0,"841":0,"843":0,"846":1,"847":0,"848":0,"849":0,"852":0,"855":1,"856":0,"858":0,"859":0,"860":0,"861":0,"863":0,"866":1,"867":0,"868":0,"870":0,"871":0,"874":0,"875":0,"878":0,"879":0,"880":0,"882":0,"883":0,"884":0,"888":0,"889":0,"890":0,"893":0,"896":1,"897":0,"898":0,"899":0,"900":0,"901":0,"903":0,"904":0,"908":0,"911":1,"912":0,"913":0,"914":0,"916":0,"917":0,"918":0,"919":0,"923":0,"930":0,"931":0,"932":0,"933":0,"937":0,"938":0,"939":0,"940":0,"944":0,"945":0,"946":0,"947":0,"951":0,"952":0,"953":0,"954":0,"958":0,"966":0,"969":0,"973":1,"975":0,"980":0,"981":0,"985":0,"986":0,"989":0,"990":0,"993":0,"995":0,"996":0,"1007":0,"1010":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/topologies/mongos.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/topologies/mongos.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":1,"36":12,"37":1,"38":12,"39":1,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0,"103":0,"104":1,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":1,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":1,"143":0,"144":0,"145":0,"146":1,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":1,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":1,"195":0,"196":0,"197":0,"198":1,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":1,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":1,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":1,"259":0,"260":1,"261":0,"262":0,"263":0,"264":0,"265":0,"266":1,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":1,"276":0,"277":1,"278":0,"279":1,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":1,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":1,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":1,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":1,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":1,"332":0,"333":0,"334":0,"335":1,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":1,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":1,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":1,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":1,"399":0,"400":0,"401":0,"402":0,"403":1,"404":0,"405":0,"406":0,"407":1,"408":0,"409":0,"410":0,"411":0,"412":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,12],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0]},"f":{"1":0,"2":0,"3":12,"4":12,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0},"fnMap":{"1":{"name":"stateTransition","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":41}}},"2":{"name":"(anonymous_2)","line":120,"loc":{"start":{"line":120,"column":13},"end":{"line":120,"column":41}}},"3":{"name":"(anonymous_3)","line":201,"loc":{"start":{"line":201,"column":24},"end":{"line":201,"column":35}}},"4":{"name":"(anonymous_4)","line":205,"loc":{"start":{"line":205,"column":24},"end":{"line":205,"column":35}}},"5":{"name":"emitSDAMEvent","line":214,"loc":{"start":{"line":214,"column":0},"end":{"line":214,"column":49}}},"6":{"name":"(anonymous_6)","line":225,"loc":{"start":{"line":225,"column":27},"end":{"line":225,"column":45}}},"7":{"name":"(anonymous_7)","line":232,"loc":{"start":{"line":232,"column":36},"end":{"line":232,"column":48}}},"8":{"name":"handleEvent","line":247,"loc":{"start":{"line":247,"column":0},"end":{"line":247,"column":27}}},"9":{"name":"(anonymous_9)","line":248,"loc":{"start":{"line":248,"column":9},"end":{"line":248,"column":20}}},"10":{"name":"handleInitialConnectEvent","line":257,"loc":{"start":{"line":257,"column":0},"end":{"line":257,"column":48}}},"11":{"name":"(anonymous_11)","line":258,"loc":{"start":{"line":258,"column":9},"end":{"line":258,"column":20}}},"12":{"name":"(anonymous_12)","line":271,"loc":{"start":{"line":271,"column":47},"end":{"line":271,"column":58}}},"13":{"name":"connectProxies","line":357,"loc":{"start":{"line":357,"column":0},"end":{"line":357,"column":39}}},"14":{"name":"connect","line":365,"loc":{"start":{"line":365,"column":2},"end":{"line":365,"column":44}}},"15":{"name":"(anonymous_15)","line":366,"loc":{"start":{"line":366,"column":15},"end":{"line":366,"column":26}}},"16":{"name":"(anonymous_16)","line":374,"loc":{"start":{"line":374,"column":33},"end":{"line":374,"column":45}}},"17":{"name":"(anonymous_17)","line":375,"loc":{"start":{"line":375,"column":44},"end":{"line":375,"column":56}}},"18":{"name":"(anonymous_18)","line":376,"loc":{"start":{"line":376,"column":32},"end":{"line":376,"column":44}}},"19":{"name":"pickProxy","line":387,"loc":{"start":{"line":387,"column":0},"end":{"line":387,"column":25}}},"20":{"name":"(anonymous_20)","line":402,"loc":{"start":{"line":402,"column":45},"end":{"line":402,"column":62}}},"21":{"name":"moveServerFrom","line":422,"loc":{"start":{"line":422,"column":0},"end":{"line":422,"column":41}}},"22":{"name":"removeProxyFrom","line":438,"loc":{"start":{"line":438,"column":0},"end":{"line":438,"column":38}}},"23":{"name":"reconnectProxies","line":446,"loc":{"start":{"line":446,"column":0},"end":{"line":446,"column":51}}},"24":{"name":"(anonymous_24)","line":451,"loc":{"start":{"line":451,"column":21},"end":{"line":451,"column":43}}},"25":{"name":"(anonymous_25)","line":452,"loc":{"start":{"line":452,"column":11},"end":{"line":452,"column":22}}},"26":{"name":"(anonymous_26)","line":464,"loc":{"start":{"line":464,"column":49},"end":{"line":464,"column":60}}},"27":{"name":"execute","line":506,"loc":{"start":{"line":506,"column":2},"end":{"line":506,"column":31}}},"28":{"name":"(anonymous_28)","line":507,"loc":{"start":{"line":507,"column":15},"end":{"line":507,"column":26}}},"29":{"name":"(anonymous_29)","line":531,"loc":{"start":{"line":531,"column":33},"end":{"line":531,"column":45}}},"30":{"name":"(anonymous_30)","line":532,"loc":{"start":{"line":532,"column":44},"end":{"line":532,"column":56}}},"31":{"name":"(anonymous_31)","line":533,"loc":{"start":{"line":533,"column":32},"end":{"line":533,"column":44}}},"32":{"name":"applyAuthenticationContexts","line":544,"loc":{"start":{"line":544,"column":0},"end":{"line":544,"column":61}}},"33":{"name":"applyAuth","line":554,"loc":{"start":{"line":554,"column":2},"end":{"line":554,"column":53}}},"34":{"name":"(anonymous_34)","line":561,"loc":{"start":{"line":561,"column":27},"end":{"line":561,"column":41}}},"35":{"name":"topologyMonitor","line":573,"loc":{"start":{"line":573,"column":0},"end":{"line":573,"column":40}}},"36":{"name":"(anonymous_36)","line":577,"loc":{"start":{"line":577,"column":32},"end":{"line":577,"column":43}}},"37":{"name":"pingServer","line":591,"loc":{"start":{"line":591,"column":4},"end":{"line":591,"column":44}}},"38":{"name":"(anonymous_38)","line":604,"loc":{"start":{"line":604,"column":9},"end":{"line":604,"column":26}}},"39":{"name":"(anonymous_39)","line":644,"loc":{"start":{"line":644,"column":62},"end":{"line":644,"column":73}}},"40":{"name":"(anonymous_40)","line":665,"loc":{"start":{"line":665,"column":35},"end":{"line":665,"column":46}}},"41":{"name":"(anonymous_41)","line":672,"loc":{"start":{"line":672,"column":59},"end":{"line":672,"column":70}}},"42":{"name":"(anonymous_42)","line":688,"loc":{"start":{"line":688,"column":32},"end":{"line":688,"column":43}}},"43":{"name":"(anonymous_43)","line":696,"loc":{"start":{"line":696,"column":25},"end":{"line":696,"column":36}}},"44":{"name":"(anonymous_44)","line":701,"loc":{"start":{"line":701,"column":18},"end":{"line":701,"column":30}}},"45":{"name":"(anonymous_45)","line":713,"loc":{"start":{"line":713,"column":27},"end":{"line":713,"column":45}}},"46":{"name":"(anonymous_46)","line":724,"loc":{"start":{"line":724,"column":18},"end":{"line":724,"column":30}}},"47":{"name":"(anonymous_47)","line":737,"loc":{"start":{"line":737,"column":31},"end":{"line":737,"column":42}}},"48":{"name":"(anonymous_48)","line":746,"loc":{"start":{"line":746,"column":31},"end":{"line":746,"column":42}}},"49":{"name":"(anonymous_49)","line":755,"loc":{"start":{"line":755,"column":28},"end":{"line":755,"column":75}}},"50":{"name":"(anonymous_50)","line":778,"loc":{"start":{"line":778,"column":26},"end":{"line":778,"column":63}}},"51":{"name":"(anonymous_51)","line":807,"loc":{"start":{"line":807,"column":26},"end":{"line":807,"column":63}}},"52":{"name":"(anonymous_52)","line":836,"loc":{"start":{"line":836,"column":26},"end":{"line":836,"column":63}}},"53":{"name":"(anonymous_53)","line":865,"loc":{"start":{"line":865,"column":27},"end":{"line":865,"column":64}}},"54":{"name":"(anonymous_54)","line":904,"loc":{"start":{"line":904,"column":26},"end":{"line":904,"column":59}}},"55":{"name":"(anonymous_55)","line":918,"loc":{"start":{"line":918,"column":24},"end":{"line":918,"column":48}}},"56":{"name":"auth","line":955,"loc":{"start":{"line":955,"column":2},"end":{"line":955,"column":24}}},"57":{"name":"(anonymous_57)","line":959,"loc":{"start":{"line":959,"column":53},"end":{"line":959,"column":67}}},"58":{"name":"(anonymous_58)","line":1008,"loc":{"start":{"line":1008,"column":26},"end":{"line":1008,"column":53}}},"59":{"name":"logoutServer","line":1030,"loc":{"start":{"line":1030,"column":2},"end":{"line":1030,"column":37}}},"60":{"name":"(anonymous_60)","line":1031,"loc":{"start":{"line":1031,"column":27},"end":{"line":1031,"column":41}}},"61":{"name":"(anonymous_61)","line":1039,"loc":{"start":{"line":1039,"column":29},"end":{"line":1039,"column":40}}},"62":{"name":"(anonymous_62)","line":1062,"loc":{"start":{"line":1062,"column":29},"end":{"line":1062,"column":40}}},"63":{"name":"(anonymous_63)","line":1073,"loc":{"start":{"line":1073,"column":33},"end":{"line":1073,"column":44}}},"64":{"name":"(anonymous_64)","line":1083,"loc":{"start":{"line":1083,"column":31},"end":{"line":1083,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":14,"column":58}},"2":{"start":{"line":16,"column":0},"end":{"line":16,"column":26}},"3":{"start":{"line":37,"column":0},"end":{"line":42,"column":41}},"4":{"start":{"line":46,"column":0},"end":{"line":46,"column":34}},"5":{"start":{"line":47,"column":0},"end":{"line":47,"column":30}},"6":{"start":{"line":48,"column":0},"end":{"line":48,"column":28}},"7":{"start":{"line":49,"column":0},"end":{"line":49,"column":34}},"8":{"start":{"line":50,"column":0},"end":{"line":50,"column":28}},"9":{"start":{"line":52,"column":0},"end":{"line":69,"column":1}},"10":{"start":{"line":53,"column":2},"end":{"line":59,"column":3}},"11":{"start":{"line":62,"column":2},"end":{"line":62,"column":49}},"12":{"start":{"line":63,"column":2},"end":{"line":68,"column":3}},"13":{"start":{"line":64,"column":4},"end":{"line":64,"column":26}},"14":{"start":{"line":66,"column":4},"end":{"line":67,"column":53}},"15":{"start":{"line":73,"column":0},"end":{"line":73,"column":11}},"16":{"start":{"line":74,"column":0},"end":{"line":74,"column":70}},"17":{"start":{"line":120,"column":0},"end":{"line":196,"column":1}},"18":{"start":{"line":121,"column":2},"end":{"line":121,"column":26}},"19":{"start":{"line":124,"column":2},"end":{"line":124,"column":17}},"20":{"start":{"line":127,"column":2},"end":{"line":155,"column":3}},"21":{"start":{"line":158,"column":2},"end":{"line":158,"column":56}},"22":{"start":{"line":162,"column":2},"end":{"line":167,"column":3}},"23":{"start":{"line":165,"column":6},"end":{"line":166,"column":60}},"24":{"start":{"line":170,"column":2},"end":{"line":174,"column":3}},"25":{"start":{"line":177,"column":2},"end":{"line":177,"column":28}},"26":{"start":{"line":180,"column":2},"end":{"line":180,"column":30}},"27":{"start":{"line":182,"column":2},"end":{"line":182,"column":29}},"28":{"start":{"line":184,"column":2},"end":{"line":184,"column":32}},"29":{"start":{"line":186,"column":2},"end":{"line":186,"column":30}},"30":{"start":{"line":188,"column":2},"end":{"line":188,"column":17}},"31":{"start":{"line":190,"column":2},"end":{"line":190,"column":26}},"32":{"start":{"line":192,"column":2},"end":{"line":192,"column":23}},"33":{"start":{"line":195,"column":2},"end":{"line":195,"column":26}},"34":{"start":{"line":198,"column":0},"end":{"line":198,"column":31}},"35":{"start":{"line":200,"column":0},"end":{"line":202,"column":3}},"36":{"start":{"line":201,"column":37},"end":{"line":201,"column":53}},"37":{"start":{"line":204,"column":0},"end":{"line":208,"column":3}},"38":{"start":{"line":206,"column":4},"end":{"line":206,"column":38}},"39":{"start":{"line":214,"column":0},"end":{"line":218,"column":1}},"40":{"start":{"line":215,"column":2},"end":{"line":217,"column":3}},"41":{"start":{"line":216,"column":4},"end":{"line":216,"column":34}},"42":{"start":{"line":225,"column":0},"end":{"line":245,"column":1}},"43":{"start":{"line":226,"column":2},"end":{"line":226,"column":18}},"44":{"start":{"line":228,"column":2},"end":{"line":228,"column":40}},"45":{"start":{"line":230,"column":2},"end":{"line":230,"column":36}},"46":{"start":{"line":232,"column":2},"end":{"line":238,"column":5}},"47":{"start":{"line":233,"column":4},"end":{"line":237,"column":8}},"48":{"start":{"line":241,"column":2},"end":{"line":241,"column":66}},"49":{"start":{"line":244,"column":2},"end":{"line":244,"column":32}},"50":{"start":{"line":247,"column":0},"end":{"line":255,"column":1}},"51":{"start":{"line":248,"column":2},"end":{"line":254,"column":3}},"52":{"start":{"line":249,"column":4},"end":{"line":249,"column":39}},"53":{"start":{"line":249,"column":32},"end":{"line":249,"column":39}},"54":{"start":{"line":251,"column":4},"end":{"line":251,"column":74}},"55":{"start":{"line":253,"column":4},"end":{"line":253,"column":38}},"56":{"start":{"line":257,"column":0},"end":{"line":355,"column":1}},"57":{"start":{"line":258,"column":2},"end":{"line":354,"column":4}},"58":{"start":{"line":259,"column":4},"end":{"line":259,"column":21}},"59":{"start":{"line":262,"column":4},"end":{"line":266,"column":5}},"60":{"start":{"line":264,"column":6},"end":{"line":264,"column":77}},"61":{"start":{"line":265,"column":6},"end":{"line":265,"column":28}},"62":{"start":{"line":269,"column":4},"end":{"line":329,"column":5}},"63":{"start":{"line":271,"column":6},"end":{"line":322,"column":9}},"64":{"start":{"line":273,"column":8},"end":{"line":273,"column":45}},"65":{"start":{"line":276,"column":8},"end":{"line":321,"column":9}},"66":{"start":{"line":278,"column":10},"end":{"line":285,"column":11}},"67":{"start":{"line":279,"column":12},"end":{"line":284,"column":13}},"68":{"start":{"line":281,"column":14},"end":{"line":281,"column":86}},"69":{"start":{"line":282,"column":14},"end":{"line":282,"column":30}},"70":{"start":{"line":283,"column":14},"end":{"line":283,"column":48}},"71":{"start":{"line":288,"column":10},"end":{"line":290,"column":11}},"72":{"start":{"line":289,"column":12},"end":{"line":289,"column":50}},"73":{"start":{"line":293,"column":10},"end":{"line":293,"column":56}},"74":{"start":{"line":294,"column":10},"end":{"line":294,"column":56}},"75":{"start":{"line":295,"column":10},"end":{"line":295,"column":60}},"76":{"start":{"line":296,"column":10},"end":{"line":296,"column":66}},"77":{"start":{"line":299,"column":10},"end":{"line":299,"column":79}},"78":{"start":{"line":301,"column":10},"end":{"line":301,"column":47}},"79":{"start":{"line":305,"column":10},"end":{"line":313,"column":11}},"80":{"start":{"line":306,"column":12},"end":{"line":306,"column":100}},"81":{"start":{"line":308,"column":12},"end":{"line":310,"column":13}},"82":{"start":{"line":309,"column":14},"end":{"line":309,"column":91}},"83":{"start":{"line":312,"column":12},"end":{"line":312,"column":55}},"84":{"start":{"line":316,"column":10},"end":{"line":316,"column":57}},"85":{"start":{"line":318,"column":10},"end":{"line":318,"column":45}},"86":{"start":{"line":320,"column":10},"end":{"line":320,"column":37}},"87":{"start":{"line":324,"column":6},"end":{"line":324,"column":77}},"88":{"start":{"line":326,"column":6},"end":{"line":326,"column":40}},"89":{"start":{"line":328,"column":6},"end":{"line":328,"column":32}},"90":{"start":{"line":332,"column":4},"end":{"line":353,"column":5}},"91":{"start":{"line":334,"column":6},"end":{"line":349,"column":7}},"92":{"start":{"line":336,"column":8},"end":{"line":336,"column":41}},"93":{"start":{"line":338,"column":8},"end":{"line":338,"column":35}},"94":{"start":{"line":339,"column":8},"end":{"line":339,"column":37}},"95":{"start":{"line":340,"column":8},"end":{"line":340,"column":31}},"96":{"start":{"line":341,"column":13},"end":{"line":349,"column":7}},"97":{"start":{"line":343,"column":8},"end":{"line":345,"column":9}},"98":{"start":{"line":344,"column":10},"end":{"line":344,"column":113}},"99":{"start":{"line":348,"column":8},"end":{"line":348,"column":90}},"100":{"start":{"line":352,"column":6},"end":{"line":352,"column":49}},"101":{"start":{"line":357,"column":0},"end":{"line":385,"column":1}},"102":{"start":{"line":359,"column":2},"end":{"line":359,"column":66}},"103":{"start":{"line":363,"column":2},"end":{"line":363,"column":26}},"104":{"start":{"line":365,"column":2},"end":{"line":380,"column":3}},"105":{"start":{"line":366,"column":4},"end":{"line":379,"column":24}},"106":{"start":{"line":368,"column":6},"end":{"line":368,"column":69}},"107":{"start":{"line":369,"column":6},"end":{"line":369,"column":73}},"108":{"start":{"line":370,"column":6},"end":{"line":370,"column":79}},"109":{"start":{"line":371,"column":6},"end":{"line":371,"column":69}},"110":{"start":{"line":372,"column":6},"end":{"line":372,"column":73}},"111":{"start":{"line":374,"column":6},"end":{"line":374,"column":81}},"112":{"start":{"line":374,"column":47},"end":{"line":374,"column":77}},"113":{"start":{"line":375,"column":6},"end":{"line":375,"column":103}},"114":{"start":{"line":375,"column":58},"end":{"line":375,"column":99}},"115":{"start":{"line":376,"column":6},"end":{"line":376,"column":79}},"116":{"start":{"line":376,"column":46},"end":{"line":376,"column":75}},"117":{"start":{"line":378,"column":6},"end":{"line":378,"column":44}},"118":{"start":{"line":382,"column":2},"end":{"line":384,"column":3}},"119":{"start":{"line":383,"column":4},"end":{"line":383,"column":48}},"120":{"start":{"line":387,"column":0},"end":{"line":420,"column":1}},"121":{"start":{"line":389,"column":2},"end":{"line":389,"column":56}},"122":{"start":{"line":392,"column":2},"end":{"line":392,"column":43}},"123":{"start":{"line":395,"column":2},"end":{"line":399,"column":3}},"124":{"start":{"line":396,"column":4},"end":{"line":398,"column":5}},"125":{"start":{"line":397,"column":6},"end":{"line":397,"column":61}},"126":{"start":{"line":402,"column":2},"end":{"line":407,"column":5}},"127":{"start":{"line":403,"column":4},"end":{"line":406,"column":5}},"128":{"start":{"line":405,"column":6},"end":{"line":405,"column":18}},"129":{"start":{"line":410,"column":2},"end":{"line":412,"column":3}},"130":{"start":{"line":411,"column":4},"end":{"line":411,"column":36}},"131":{"start":{"line":415,"column":2},"end":{"line":415,"column":69}},"132":{"start":{"line":417,"column":2},"end":{"line":417,"column":58}},"133":{"start":{"line":419,"column":2},"end":{"line":419,"column":15}},"134":{"start":{"line":422,"column":0},"end":{"line":436,"column":1}},"135":{"start":{"line":423,"column":2},"end":{"line":427,"column":3}},"136":{"start":{"line":424,"column":4},"end":{"line":426,"column":5}},"137":{"start":{"line":425,"column":6},"end":{"line":425,"column":24}},"138":{"start":{"line":429,"column":2},"end":{"line":433,"column":3}},"139":{"start":{"line":430,"column":4},"end":{"line":432,"column":5}},"140":{"start":{"line":431,"column":6},"end":{"line":431,"column":22}},"141":{"start":{"line":435,"column":2},"end":{"line":435,"column":17}},"142":{"start":{"line":438,"column":0},"end":{"line":444,"column":1}},"143":{"start":{"line":439,"column":2},"end":{"line":443,"column":3}},"144":{"start":{"line":440,"column":4},"end":{"line":442,"column":5}},"145":{"start":{"line":441,"column":6},"end":{"line":441,"column":24}},"146":{"start":{"line":446,"column":0},"end":{"line":542,"column":1}},"147":{"start":{"line":448,"column":2},"end":{"line":448,"column":29}},"148":{"start":{"line":451,"column":2},"end":{"line":498,"column":3}},"149":{"start":{"line":452,"column":4},"end":{"line":497,"column":5}},"150":{"start":{"line":453,"column":6},"end":{"line":453,"column":23}},"151":{"start":{"line":454,"column":6},"end":{"line":454,"column":24}},"152":{"start":{"line":457,"column":6},"end":{"line":460,"column":7}},"153":{"start":{"line":458,"column":8},"end":{"line":458,"column":80}},"154":{"start":{"line":459,"column":8},"end":{"line":459,"column":30}},"155":{"start":{"line":462,"column":6},"end":{"line":491,"column":7}},"156":{"start":{"line":464,"column":8},"end":{"line":486,"column":11}},"157":{"start":{"line":466,"column":10},"end":{"line":469,"column":11}},"158":{"start":{"line":467,"column":12},"end":{"line":467,"column":84}},"159":{"start":{"line":468,"column":12},"end":{"line":468,"column":35}},"160":{"start":{"line":472,"column":10},"end":{"line":474,"column":11}},"161":{"start":{"line":473,"column":12},"end":{"line":473,"column":50}},"162":{"start":{"line":477,"column":10},"end":{"line":477,"column":56}},"163":{"start":{"line":478,"column":10},"end":{"line":478,"column":56}},"164":{"start":{"line":479,"column":10},"end":{"line":479,"column":60}},"165":{"start":{"line":480,"column":10},"end":{"line":480,"column":66}},"166":{"start":{"line":483,"column":10},"end":{"line":483,"column":81}},"167":{"start":{"line":485,"column":10},"end":{"line":485,"column":47}},"168":{"start":{"line":487,"column":13},"end":{"line":491,"column":7}},"169":{"start":{"line":489,"column":8},"end":{"line":489,"column":80}},"170":{"start":{"line":490,"column":8},"end":{"line":490,"column":23}},"171":{"start":{"line":494,"column":6},"end":{"line":496,"column":7}},"172":{"start":{"line":495,"column":8},"end":{"line":495,"column":19}},"173":{"start":{"line":501,"column":2},"end":{"line":503,"column":3}},"174":{"start":{"line":502,"column":4},"end":{"line":502,"column":22}},"175":{"start":{"line":506,"column":2},"end":{"line":536,"column":3}},"176":{"start":{"line":507,"column":4},"end":{"line":535,"column":10}},"177":{"start":{"line":509,"column":6},"end":{"line":511,"column":7}},"178":{"start":{"line":510,"column":8},"end":{"line":510,"column":15}},"179":{"start":{"line":514,"column":6},"end":{"line":521,"column":10}},"180":{"start":{"line":524,"column":6},"end":{"line":524,"column":60}},"181":{"start":{"line":525,"column":6},"end":{"line":525,"column":56}},"182":{"start":{"line":526,"column":6},"end":{"line":526,"column":60}},"183":{"start":{"line":527,"column":6},"end":{"line":527,"column":56}},"184":{"start":{"line":528,"column":6},"end":{"line":528,"column":66}},"185":{"start":{"line":531,"column":6},"end":{"line":531,"column":81}},"186":{"start":{"line":531,"column":47},"end":{"line":531,"column":77}},"187":{"start":{"line":532,"column":6},"end":{"line":532,"column":103}},"188":{"start":{"line":532,"column":58},"end":{"line":532,"column":99}},"189":{"start":{"line":533,"column":6},"end":{"line":533,"column":79}},"190":{"start":{"line":533,"column":46},"end":{"line":533,"column":75}},"191":{"start":{"line":534,"column":6},"end":{"line":534,"column":44}},"192":{"start":{"line":539,"column":2},"end":{"line":541,"column":3}},"193":{"start":{"line":540,"column":4},"end":{"line":540,"column":27}},"194":{"start":{"line":544,"column":0},"end":{"line":571,"column":1}},"195":{"start":{"line":545,"column":2},"end":{"line":547,"column":3}},"196":{"start":{"line":546,"column":4},"end":{"line":546,"column":22}},"197":{"start":{"line":551,"column":2},"end":{"line":551,"column":60}},"198":{"start":{"line":554,"column":2},"end":{"line":567,"column":3}},"199":{"start":{"line":555,"column":4},"end":{"line":555,"column":51}},"200":{"start":{"line":555,"column":33},"end":{"line":555,"column":51}},"201":{"start":{"line":557,"column":4},"end":{"line":557,"column":43}},"202":{"start":{"line":559,"column":4},"end":{"line":559,"column":49}},"203":{"start":{"line":561,"column":4},"end":{"line":563,"column":7}},"204":{"start":{"line":562,"column":6},"end":{"line":562,"column":48}},"205":{"start":{"line":566,"column":4},"end":{"line":566,"column":48}},"206":{"start":{"line":570,"column":2},"end":{"line":570,"column":44}},"207":{"start":{"line":573,"column":0},"end":{"line":681,"column":1}},"208":{"start":{"line":574,"column":2},"end":{"line":574,"column":26}},"209":{"start":{"line":577,"column":2},"end":{"line":680,"column":24}},"210":{"start":{"line":578,"column":4},"end":{"line":578,"column":69}},"211":{"start":{"line":578,"column":62},"end":{"line":578,"column":69}},"212":{"start":{"line":581,"column":4},"end":{"line":583,"column":5}},"213":{"start":{"line":582,"column":6},"end":{"line":582,"column":41}},"214":{"start":{"line":586,"column":4},"end":{"line":586,"column":49}},"215":{"start":{"line":588,"column":4},"end":{"line":588,"column":31}},"216":{"start":{"line":591,"column":4},"end":{"line":632,"column":5}},"217":{"start":{"line":593,"column":6},"end":{"line":593,"column":39}},"218":{"start":{"line":596,"column":6},"end":{"line":596,"column":84}},"219":{"start":{"line":599,"column":6},"end":{"line":631,"column":9}},"220":{"start":{"line":605,"column":8},"end":{"line":610,"column":9}},"221":{"start":{"line":607,"column":10},"end":{"line":607,"column":83}},"222":{"start":{"line":608,"column":10},"end":{"line":608,"column":28}},"223":{"start":{"line":609,"column":10},"end":{"line":609,"column":28}},"224":{"start":{"line":613,"column":8},"end":{"line":613,"column":53}},"225":{"start":{"line":616,"column":8},"end":{"line":628,"column":9}},"226":{"start":{"line":618,"column":10},"end":{"line":618,"column":124}},"227":{"start":{"line":620,"column":10},"end":{"line":620,"column":83}},"228":{"start":{"line":623,"column":10},"end":{"line":623,"column":38}},"229":{"start":{"line":624,"column":10},"end":{"line":624,"column":45}},"230":{"start":{"line":627,"column":10},"end":{"line":627,"column":130}},"231":{"start":{"line":630,"column":8},"end":{"line":630,"column":19}},"232":{"start":{"line":635,"column":4},"end":{"line":661,"column":5}},"233":{"start":{"line":637,"column":6},"end":{"line":641,"column":7}},"234":{"start":{"line":638,"column":8},"end":{"line":638,"column":72}},"235":{"start":{"line":640,"column":8},"end":{"line":640,"column":33}},"236":{"start":{"line":644,"column":6},"end":{"line":660,"column":9}},"237":{"start":{"line":645,"column":8},"end":{"line":645,"column":73}},"238":{"start":{"line":645,"column":66},"end":{"line":645,"column":73}},"239":{"start":{"line":648,"column":8},"end":{"line":656,"column":9}},"240":{"start":{"line":649,"column":10},"end":{"line":649,"column":37}},"241":{"start":{"line":650,"column":10},"end":{"line":650,"column":39}},"242":{"start":{"line":651,"column":10},"end":{"line":651,"column":33}},"243":{"start":{"line":652,"column":15},"end":{"line":656,"column":9}},"244":{"start":{"line":653,"column":10},"end":{"line":653,"column":39}},"245":{"start":{"line":654,"column":15},"end":{"line":656,"column":9}},"246":{"start":{"line":655,"column":10},"end":{"line":655,"column":35}},"247":{"start":{"line":659,"column":8},"end":{"line":659,"column":30}},"248":{"start":{"line":664,"column":4},"end":{"line":679,"column":5}},"249":{"start":{"line":665,"column":6},"end":{"line":678,"column":9}},"250":{"start":{"line":666,"column":8},"end":{"line":666,"column":26}},"251":{"start":{"line":668,"column":8},"end":{"line":677,"column":9}},"252":{"start":{"line":669,"column":10},"end":{"line":669,"column":75}},"253":{"start":{"line":669,"column":68},"end":{"line":669,"column":75}},"254":{"start":{"line":672,"column":10},"end":{"line":676,"column":13}},"255":{"start":{"line":673,"column":12},"end":{"line":673,"column":77}},"256":{"start":{"line":673,"column":70},"end":{"line":673,"column":77}},"257":{"start":{"line":675,"column":12},"end":{"line":675,"column":34}},"258":{"start":{"line":688,"column":0},"end":{"line":690,"column":1}},"259":{"start":{"line":689,"column":2},"end":{"line":689,"column":23}},"260":{"start":{"line":696,"column":0},"end":{"line":706,"column":1}},"261":{"start":{"line":698,"column":2},"end":{"line":698,"column":38}},"262":{"start":{"line":700,"column":2},"end":{"line":700,"column":69}},"263":{"start":{"line":701,"column":2},"end":{"line":703,"column":5}},"264":{"start":{"line":702,"column":4},"end":{"line":702,"column":14}},"265":{"start":{"line":705,"column":2},"end":{"line":705,"column":33}},"266":{"start":{"line":713,"column":0},"end":{"line":730,"column":1}},"267":{"start":{"line":715,"column":2},"end":{"line":715,"column":35}},"268":{"start":{"line":717,"column":2},"end":{"line":717,"column":69}},"269":{"start":{"line":719,"column":2},"end":{"line":719,"column":54}},"270":{"start":{"line":719,"column":23},"end":{"line":719,"column":54}},"271":{"start":{"line":721,"column":2},"end":{"line":721,"column":37}},"272":{"start":{"line":724,"column":2},"end":{"line":726,"column":5}},"273":{"start":{"line":725,"column":4},"end":{"line":725,"column":23}},"274":{"start":{"line":729,"column":2},"end":{"line":729,"column":65}},"275":{"start":{"line":737,"column":0},"end":{"line":739,"column":1}},"276":{"start":{"line":738,"column":2},"end":{"line":738,"column":42}},"277":{"start":{"line":746,"column":0},"end":{"line":748,"column":1}},"278":{"start":{"line":747,"column":2},"end":{"line":747,"column":33}},"279":{"start":{"line":755,"column":0},"end":{"line":765,"column":1}},"280":{"start":{"line":756,"column":2},"end":{"line":756,"column":93}},"281":{"start":{"line":756,"column":35},"end":{"line":756,"column":93}},"282":{"start":{"line":758,"column":2},"end":{"line":758,"column":26}},"283":{"start":{"line":760,"column":2},"end":{"line":760,"column":31}},"284":{"start":{"line":762,"column":2},"end":{"line":762,"column":75}},"285":{"start":{"line":762,"column":14},"end":{"line":762,"column":75}},"286":{"start":{"line":764,"column":2},"end":{"line":764,"column":41}},"287":{"start":{"line":778,"column":0},"end":{"line":794,"column":1}},"288":{"start":{"line":779,"column":2},"end":{"line":779,"column":93}},"289":{"start":{"line":779,"column":35},"end":{"line":779,"column":93}},"290":{"start":{"line":780,"column":2},"end":{"line":780,"column":91}},"291":{"start":{"line":780,"column":30},"end":{"line":780,"column":91}},"292":{"start":{"line":783,"column":2},"end":{"line":785,"column":3}},"293":{"start":{"line":784,"column":4},"end":{"line":784,"column":78}},"294":{"start":{"line":788,"column":2},"end":{"line":790,"column":3}},"295":{"start":{"line":789,"column":4},"end":{"line":789,"column":65}},"296":{"start":{"line":793,"column":2},"end":{"line":793,"column":68}},"297":{"start":{"line":807,"column":0},"end":{"line":823,"column":1}},"298":{"start":{"line":808,"column":2},"end":{"line":808,"column":93}},"299":{"start":{"line":808,"column":35},"end":{"line":808,"column":93}},"300":{"start":{"line":809,"column":2},"end":{"line":809,"column":91}},"301":{"start":{"line":809,"column":30},"end":{"line":809,"column":91}},"302":{"start":{"line":812,"column":2},"end":{"line":814,"column":3}},"303":{"start":{"line":813,"column":4},"end":{"line":813,"column":78}},"304":{"start":{"line":817,"column":2},"end":{"line":819,"column":3}},"305":{"start":{"line":818,"column":4},"end":{"line":818,"column":65}},"306":{"start":{"line":822,"column":2},"end":{"line":822,"column":68}},"307":{"start":{"line":836,"column":0},"end":{"line":852,"column":1}},"308":{"start":{"line":837,"column":2},"end":{"line":837,"column":93}},"309":{"start":{"line":837,"column":35},"end":{"line":837,"column":93}},"310":{"start":{"line":838,"column":2},"end":{"line":838,"column":91}},"311":{"start":{"line":838,"column":30},"end":{"line":838,"column":91}},"312":{"start":{"line":841,"column":2},"end":{"line":843,"column":3}},"313":{"start":{"line":842,"column":4},"end":{"line":842,"column":78}},"314":{"start":{"line":846,"column":2},"end":{"line":848,"column":3}},"315":{"start":{"line":847,"column":4},"end":{"line":847,"column":65}},"316":{"start":{"line":851,"column":2},"end":{"line":851,"column":68}},"317":{"start":{"line":865,"column":0},"end":{"line":890,"column":1}},"318":{"start":{"line":866,"column":2},"end":{"line":866,"column":93}},"319":{"start":{"line":866,"column":35},"end":{"line":866,"column":93}},"320":{"start":{"line":867,"column":2},"end":{"line":867,"column":91}},"321":{"start":{"line":867,"column":30},"end":{"line":867,"column":91}},"322":{"start":{"line":868,"column":2},"end":{"line":868,"column":18}},"323":{"start":{"line":871,"column":2},"end":{"line":871,"column":31}},"324":{"start":{"line":875,"column":2},"end":{"line":877,"column":3}},"325":{"start":{"line":876,"column":4},"end":{"line":876,"column":79}},"326":{"start":{"line":880,"column":2},"end":{"line":882,"column":3}},"327":{"start":{"line":881,"column":4},"end":{"line":881,"column":65}},"328":{"start":{"line":885,"column":2},"end":{"line":885,"column":44}},"329":{"start":{"line":886,"column":2},"end":{"line":886,"column":32}},"330":{"start":{"line":889,"column":2},"end":{"line":889,"column":51}},"331":{"start":{"line":904,"column":0},"end":{"line":908,"column":1}},"332":{"start":{"line":905,"column":2},"end":{"line":905,"column":38}},"333":{"start":{"line":906,"column":2},"end":{"line":906,"column":65}},"334":{"start":{"line":907,"column":2},"end":{"line":907,"column":84}},"335":{"start":{"line":918,"column":0},"end":{"line":1000,"column":1}},"336":{"start":{"line":919,"column":2},"end":{"line":919,"column":66}},"337":{"start":{"line":920,"column":2},"end":{"line":920,"column":18}},"338":{"start":{"line":921,"column":2},"end":{"line":921,"column":54}},"339":{"start":{"line":922,"column":2},"end":{"line":922,"column":28}},"340":{"start":{"line":923,"column":2},"end":{"line":923,"column":30}},"341":{"start":{"line":926,"column":2},"end":{"line":928,"column":3}},"342":{"start":{"line":927,"column":4},"end":{"line":927,"column":85}},"343":{"start":{"line":931,"column":2},"end":{"line":933,"column":3}},"344":{"start":{"line":932,"column":4},"end":{"line":932,"column":84}},"345":{"start":{"line":937,"column":2},"end":{"line":939,"column":3}},"346":{"start":{"line":938,"column":4},"end":{"line":938,"column":75}},"347":{"start":{"line":942,"column":2},"end":{"line":942,"column":29}},"348":{"start":{"line":944,"column":2},"end":{"line":944,"column":18}},"349":{"start":{"line":947,"column":2},"end":{"line":947,"column":47}},"350":{"start":{"line":949,"column":2},"end":{"line":952,"column":3}},"351":{"start":{"line":950,"column":4},"end":{"line":950,"column":32}},"352":{"start":{"line":951,"column":4},"end":{"line":951,"column":25}},"353":{"start":{"line":955,"column":2},"end":{"line":987,"column":3}},"354":{"start":{"line":957,"column":4},"end":{"line":957,"column":68}},"355":{"start":{"line":959,"column":4},"end":{"line":981,"column":8}},"356":{"start":{"line":960,"column":6},"end":{"line":960,"column":24}},"357":{"start":{"line":962,"column":6},"end":{"line":962,"column":57}},"358":{"start":{"line":962,"column":14},"end":{"line":962,"column":57}},"359":{"start":{"line":964,"column":6},"end":{"line":980,"column":7}},"360":{"start":{"line":966,"column":8},"end":{"line":966,"column":36}},"361":{"start":{"line":969,"column":8},"end":{"line":976,"column":9}},"362":{"start":{"line":971,"column":10},"end":{"line":971,"column":71}},"363":{"start":{"line":973,"column":10},"end":{"line":975,"column":21}},"364":{"start":{"line":979,"column":8},"end":{"line":979,"column":29}},"365":{"start":{"line":984,"column":4},"end":{"line":986,"column":5}},"366":{"start":{"line":985,"column":6},"end":{"line":985,"column":48}},"367":{"start":{"line":990,"column":2},"end":{"line":990,"column":61}},"368":{"start":{"line":992,"column":2},"end":{"line":992,"column":76}},"369":{"start":{"line":995,"column":2},"end":{"line":995,"column":29}},"370":{"start":{"line":997,"column":2},"end":{"line":999,"column":3}},"371":{"start":{"line":998,"column":4},"end":{"line":998,"column":26}},"372":{"start":{"line":1008,"column":0},"end":{"line":1055,"column":1}},"373":{"start":{"line":1009,"column":2},"end":{"line":1009,"column":18}},"374":{"start":{"line":1011,"column":2},"end":{"line":1013,"column":3}},"375":{"start":{"line":1012,"column":4},"end":{"line":1012,"column":73}},"376":{"start":{"line":1016,"column":2},"end":{"line":1016,"column":29}},"377":{"start":{"line":1019,"column":2},"end":{"line":1019,"column":50}},"378":{"start":{"line":1020,"column":2},"end":{"line":1022,"column":3}},"379":{"start":{"line":1021,"column":4},"end":{"line":1021,"column":52}},"380":{"start":{"line":1025,"column":2},"end":{"line":1025,"column":47}},"381":{"start":{"line":1026,"column":2},"end":{"line":1026,"column":29}},"382":{"start":{"line":1027,"column":2},"end":{"line":1027,"column":35}},"383":{"start":{"line":1027,"column":17},"end":{"line":1027,"column":35}},"384":{"start":{"line":1028,"column":2},"end":{"line":1028,"column":18}},"385":{"start":{"line":1030,"column":2},"end":{"line":1035,"column":3}},"386":{"start":{"line":1031,"column":4},"end":{"line":1034,"column":7}},"387":{"start":{"line":1032,"column":6},"end":{"line":1032,"column":58}},"388":{"start":{"line":1032,"column":14},"end":{"line":1032,"column":58}},"389":{"start":{"line":1033,"column":6},"end":{"line":1033,"column":11}},"390":{"start":{"line":1038,"column":2},"end":{"line":1054,"column":3}},"391":{"start":{"line":1039,"column":4},"end":{"line":1053,"column":6}},"392":{"start":{"line":1040,"column":6},"end":{"line":1040,"column":24}},"393":{"start":{"line":1042,"column":6},"end":{"line":1052,"column":7}},"394":{"start":{"line":1044,"column":8},"end":{"line":1044,"column":36}},"395":{"start":{"line":1046,"column":8},"end":{"line":1048,"column":19}},"396":{"start":{"line":1046,"column":26},"end":{"line":1048,"column":19}},"397":{"start":{"line":1051,"column":8},"end":{"line":1051,"column":19}},"398":{"start":{"line":1062,"column":0},"end":{"line":1066,"column":1}},"399":{"start":{"line":1063,"column":2},"end":{"line":1063,"column":31}},"400":{"start":{"line":1064,"column":2},"end":{"line":1064,"column":59}},"401":{"start":{"line":1064,"column":19},"end":{"line":1064,"column":59}},"402":{"start":{"line":1065,"column":2},"end":{"line":1065,"column":16}},"403":{"start":{"line":1073,"column":0},"end":{"line":1076,"column":1}},"404":{"start":{"line":1074,"column":2},"end":{"line":1074,"column":32}},"405":{"start":{"line":1075,"column":2},"end":{"line":1075,"column":43}},"406":{"start":{"line":1075,"column":13},"end":{"line":1075,"column":43}},"407":{"start":{"line":1083,"column":0},"end":{"line":1091,"column":1}},"408":{"start":{"line":1084,"column":2},"end":{"line":1084,"column":23}},"409":{"start":{"line":1086,"column":2},"end":{"line":1088,"column":3}},"410":{"start":{"line":1087,"column":4},"end":{"line":1087,"column":77}},"411":{"start":{"line":1090,"column":2},"end":{"line":1090,"column":21}},"412":{"start":{"line":1202,"column":0},"end":{"line":1202,"column":24}}},"branchMap":{"1":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"2":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":5},"end":{"line":63,"column":16}},{"start":{"line":63,"column":20},"end":{"line":63,"column":55}}]},"3":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":12},"end":{"line":121,"column":19}},{"start":{"line":121,"column":23},"end":{"line":121,"column":25}}]},"4":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":10},"end":{"line":130,"column":22}},{"start":{"line":130,"column":26},"end":{"line":132,"column":67}}]},"5":{"line":134,"type":"binary-expr","locations":[{"start":{"line":134,"column":12},"end":{"line":134,"column":33}},{"start":{"line":134,"column":37},"end":{"line":134,"column":48}}]},"6":{"line":140,"type":"cond-expr","locations":[{"start":{"line":140,"column":37},"end":{"line":140,"column":55}},{"start":{"line":140,"column":58},"end":{"line":140,"column":63}}]},"7":{"line":148,"type":"cond-expr","locations":[{"start":{"line":148,"column":47},"end":{"line":148,"column":60}},{"start":{"line":148,"column":63},"end":{"line":148,"column":68}}]},"8":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":22},"end":{"line":150,"column":46}},{"start":{"line":150,"column":50},"end":{"line":150,"column":52}}]},"9":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]},"10":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":5},"end":{"line":162,"column":27}},{"start":{"line":163,"column":7},"end":{"line":163,"column":40}},{"start":{"line":164,"column":7},"end":{"line":164,"column":55}}]},"11":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":23},"end":{"line":170,"column":44}},{"start":{"line":170,"column":48},"end":{"line":174,"column":3}}]},"12":{"line":206,"type":"cond-expr","locations":[{"start":{"line":206,"column":25},"end":{"line":206,"column":30}},{"start":{"line":206,"column":33},"end":{"line":206,"column":37}}]},"13":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":2},"end":{"line":215,"column":2}},{"start":{"line":215,"column":2},"end":{"line":215,"column":2}}]},"14":{"line":228,"type":"binary-expr","locations":[{"start":{"line":228,"column":26},"end":{"line":228,"column":33}},{"start":{"line":228,"column":37},"end":{"line":228,"column":39}}]},"15":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":4},"end":{"line":249,"column":4}},{"start":{"line":249,"column":4},"end":{"line":249,"column":4}}]},"16":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":4},"end":{"line":262,"column":4}},{"start":{"line":262,"column":4},"end":{"line":262,"column":4}}]},"17":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":4},"end":{"line":269,"column":4}},{"start":{"line":269,"column":4},"end":{"line":269,"column":4}}]},"18":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":8},"end":{"line":276,"column":8}},{"start":{"line":276,"column":8},"end":{"line":276,"column":8}}]},"19":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":12},"end":{"line":279,"column":12}},{"start":{"line":279,"column":12},"end":{"line":279,"column":12}}]},"20":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":10},"end":{"line":305,"column":10}},{"start":{"line":305,"column":10},"end":{"line":305,"column":10}}]},"21":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":12},"end":{"line":308,"column":12}},{"start":{"line":308,"column":12},"end":{"line":308,"column":12}}]},"22":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":4},"end":{"line":332,"column":4}},{"start":{"line":332,"column":4},"end":{"line":332,"column":4}}]},"23":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":6},"end":{"line":334,"column":6}},{"start":{"line":334,"column":6},"end":{"line":334,"column":6}}]},"24":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":13},"end":{"line":341,"column":13}},{"start":{"line":341,"column":13},"end":{"line":341,"column":13}}]},"25":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":8},"end":{"line":343,"column":8}},{"start":{"line":343,"column":8},"end":{"line":343,"column":8}}]},"26":{"line":396,"type":"if","locations":[{"start":{"line":396,"column":4},"end":{"line":396,"column":4}},{"start":{"line":396,"column":4},"end":{"line":396,"column":4}}]},"27":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":4},"end":{"line":403,"column":4}},{"start":{"line":403,"column":4},"end":{"line":403,"column":4}}]},"28":{"line":403,"type":"binary-expr","locations":[{"start":{"line":403,"column":8},"end":{"line":403,"column":78}},{"start":{"line":404,"column":9},"end":{"line":404,"column":29}}]},"29":{"line":410,"type":"if","locations":[{"start":{"line":410,"column":2},"end":{"line":410,"column":2}},{"start":{"line":410,"column":2},"end":{"line":410,"column":2}}]},"30":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":4},"end":{"line":424,"column":4}},{"start":{"line":424,"column":4},"end":{"line":424,"column":4}}]},"31":{"line":430,"type":"if","locations":[{"start":{"line":430,"column":4},"end":{"line":430,"column":4}},{"start":{"line":430,"column":4},"end":{"line":430,"column":4}}]},"32":{"line":440,"type":"if","locations":[{"start":{"line":440,"column":4},"end":{"line":440,"column":4}},{"start":{"line":440,"column":4},"end":{"line":440,"column":4}}]},"33":{"line":457,"type":"if","locations":[{"start":{"line":457,"column":6},"end":{"line":457,"column":6}},{"start":{"line":457,"column":6},"end":{"line":457,"column":6}}]},"34":{"line":457,"type":"binary-expr","locations":[{"start":{"line":457,"column":9},"end":{"line":457,"column":32}},{"start":{"line":457,"column":36},"end":{"line":457,"column":62}}]},"35":{"line":462,"type":"if","locations":[{"start":{"line":462,"column":6},"end":{"line":462,"column":6}},{"start":{"line":462,"column":6},"end":{"line":462,"column":6}}]},"36":{"line":462,"type":"binary-expr","locations":[{"start":{"line":462,"column":9},"end":{"line":462,"column":27}},{"start":{"line":462,"column":31},"end":{"line":462,"column":51}}]},"37":{"line":466,"type":"if","locations":[{"start":{"line":466,"column":10},"end":{"line":466,"column":10}},{"start":{"line":466,"column":10},"end":{"line":466,"column":10}}]},"38":{"line":466,"type":"binary-expr","locations":[{"start":{"line":466,"column":13},"end":{"line":466,"column":36}},{"start":{"line":466,"column":40},"end":{"line":466,"column":66}}]},"39":{"line":487,"type":"if","locations":[{"start":{"line":487,"column":13},"end":{"line":487,"column":13}},{"start":{"line":487,"column":13},"end":{"line":487,"column":13}}]},"40":{"line":487,"type":"binary-expr","locations":[{"start":{"line":487,"column":16},"end":{"line":487,"column":34}},{"start":{"line":487,"column":38},"end":{"line":487,"column":57}}]},"41":{"line":494,"type":"if","locations":[{"start":{"line":494,"column":6},"end":{"line":494,"column":6}},{"start":{"line":494,"column":6},"end":{"line":494,"column":6}}]},"42":{"line":501,"type":"if","locations":[{"start":{"line":501,"column":2},"end":{"line":501,"column":2}},{"start":{"line":501,"column":2},"end":{"line":501,"column":2}}]},"43":{"line":509,"type":"if","locations":[{"start":{"line":509,"column":6},"end":{"line":509,"column":6}},{"start":{"line":509,"column":6},"end":{"line":509,"column":6}}]},"44":{"line":509,"type":"binary-expr","locations":[{"start":{"line":509,"column":9},"end":{"line":509,"column":32}},{"start":{"line":509,"column":36},"end":{"line":509,"column":62}}]},"45":{"line":545,"type":"if","locations":[{"start":{"line":545,"column":2},"end":{"line":545,"column":2}},{"start":{"line":545,"column":2},"end":{"line":545,"column":2}}]},"46":{"line":555,"type":"if","locations":[{"start":{"line":555,"column":4},"end":{"line":555,"column":4}},{"start":{"line":555,"column":4},"end":{"line":555,"column":4}}]},"47":{"line":574,"type":"binary-expr","locations":[{"start":{"line":574,"column":12},"end":{"line":574,"column":19}},{"start":{"line":574,"column":23},"end":{"line":574,"column":25}}]},"48":{"line":578,"type":"if","locations":[{"start":{"line":578,"column":4},"end":{"line":578,"column":4}},{"start":{"line":578,"column":4},"end":{"line":578,"column":4}}]},"49":{"line":578,"type":"binary-expr","locations":[{"start":{"line":578,"column":7},"end":{"line":578,"column":30}},{"start":{"line":578,"column":34},"end":{"line":578,"column":60}}]},"50":{"line":581,"type":"if","locations":[{"start":{"line":581,"column":4},"end":{"line":581,"column":4}},{"start":{"line":581,"column":4},"end":{"line":581,"column":4}}]},"51":{"line":581,"type":"binary-expr","locations":[{"start":{"line":581,"column":7},"end":{"line":581,"column":25}},{"start":{"line":581,"column":29},"end":{"line":581,"column":53}}]},"52":{"line":603,"type":"binary-expr","locations":[{"start":{"line":603,"column":23},"end":{"line":603,"column":55}},{"start":{"line":603,"column":59},"end":{"line":603,"column":63}}]},"53":{"line":605,"type":"if","locations":[{"start":{"line":605,"column":8},"end":{"line":605,"column":8}},{"start":{"line":605,"column":8},"end":{"line":605,"column":8}}]},"54":{"line":605,"type":"binary-expr","locations":[{"start":{"line":605,"column":11},"end":{"line":605,"column":34}},{"start":{"line":605,"column":38},"end":{"line":605,"column":64}}]},"55":{"line":616,"type":"if","locations":[{"start":{"line":616,"column":8},"end":{"line":616,"column":8}},{"start":{"line":616,"column":8},"end":{"line":616,"column":8}}]},"56":{"line":635,"type":"if","locations":[{"start":{"line":635,"column":4},"end":{"line":635,"column":4}},{"start":{"line":635,"column":4},"end":{"line":635,"column":4}}]},"57":{"line":637,"type":"if","locations":[{"start":{"line":637,"column":6},"end":{"line":637,"column":6}},{"start":{"line":637,"column":6},"end":{"line":637,"column":6}}]},"58":{"line":637,"type":"binary-expr","locations":[{"start":{"line":637,"column":9},"end":{"line":637,"column":43}},{"start":{"line":637,"column":47},"end":{"line":637,"column":71}}]},"59":{"line":645,"type":"if","locations":[{"start":{"line":645,"column":8},"end":{"line":645,"column":8}},{"start":{"line":645,"column":8},"end":{"line":645,"column":8}}]},"60":{"line":645,"type":"binary-expr","locations":[{"start":{"line":645,"column":11},"end":{"line":645,"column":34}},{"start":{"line":645,"column":38},"end":{"line":645,"column":64}}]},"61":{"line":648,"type":"if","locations":[{"start":{"line":648,"column":8},"end":{"line":648,"column":8}},{"start":{"line":648,"column":8},"end":{"line":648,"column":8}}]},"62":{"line":648,"type":"binary-expr","locations":[{"start":{"line":648,"column":11},"end":{"line":648,"column":35}},{"start":{"line":648,"column":39},"end":{"line":648,"column":59}}]},"63":{"line":652,"type":"if","locations":[{"start":{"line":652,"column":15},"end":{"line":652,"column":15}},{"start":{"line":652,"column":15},"end":{"line":652,"column":15}}]},"64":{"line":654,"type":"if","locations":[{"start":{"line":654,"column":15},"end":{"line":654,"column":15}},{"start":{"line":654,"column":15},"end":{"line":654,"column":15}}]},"65":{"line":654,"type":"binary-expr","locations":[{"start":{"line":654,"column":18},"end":{"line":654,"column":37}},{"start":{"line":654,"column":41},"end":{"line":654,"column":75}}]},"66":{"line":668,"type":"if","locations":[{"start":{"line":668,"column":8},"end":{"line":668,"column":8}},{"start":{"line":668,"column":8},"end":{"line":668,"column":8}}]},"67":{"line":669,"type":"if","locations":[{"start":{"line":669,"column":10},"end":{"line":669,"column":10}},{"start":{"line":669,"column":10},"end":{"line":669,"column":10}}]},"68":{"line":669,"type":"binary-expr","locations":[{"start":{"line":669,"column":13},"end":{"line":669,"column":36}},{"start":{"line":669,"column":40},"end":{"line":669,"column":66}}]},"69":{"line":673,"type":"if","locations":[{"start":{"line":673,"column":12},"end":{"line":673,"column":12}},{"start":{"line":673,"column":12},"end":{"line":673,"column":12}}]},"70":{"line":673,"type":"binary-expr","locations":[{"start":{"line":673,"column":15},"end":{"line":673,"column":38}},{"start":{"line":673,"column":42},"end":{"line":673,"column":68}}]},"71":{"line":719,"type":"if","locations":[{"start":{"line":719,"column":2},"end":{"line":719,"column":2}},{"start":{"line":719,"column":2},"end":{"line":719,"column":2}}]},"72":{"line":756,"type":"if","locations":[{"start":{"line":756,"column":2},"end":{"line":756,"column":2}},{"start":{"line":756,"column":2},"end":{"line":756,"column":2}}]},"73":{"line":756,"type":"binary-expr","locations":[{"start":{"line":756,"column":79},"end":{"line":756,"column":86}},{"start":{"line":756,"column":90},"end":{"line":756,"column":92}}]},"74":{"line":758,"type":"binary-expr","locations":[{"start":{"line":758,"column":12},"end":{"line":758,"column":19}},{"start":{"line":758,"column":23},"end":{"line":758,"column":25}}]},"75":{"line":762,"type":"if","locations":[{"start":{"line":762,"column":2},"end":{"line":762,"column":2}},{"start":{"line":762,"column":2},"end":{"line":762,"column":2}}]},"76":{"line":779,"type":"if","locations":[{"start":{"line":779,"column":2},"end":{"line":779,"column":2}},{"start":{"line":779,"column":2},"end":{"line":779,"column":2}}]},"77":{"line":779,"type":"binary-expr","locations":[{"start":{"line":779,"column":79},"end":{"line":779,"column":86}},{"start":{"line":779,"column":90},"end":{"line":779,"column":92}}]},"78":{"line":780,"type":"if","locations":[{"start":{"line":780,"column":2},"end":{"line":780,"column":2}},{"start":{"line":780,"column":2},"end":{"line":780,"column":2}}]},"79":{"line":783,"type":"if","locations":[{"start":{"line":783,"column":2},"end":{"line":783,"column":2}},{"start":{"line":783,"column":2},"end":{"line":783,"column":2}}]},"80":{"line":783,"type":"binary-expr","locations":[{"start":{"line":783,"column":5},"end":{"line":783,"column":24}},{"start":{"line":783,"column":28},"end":{"line":783,"column":60}}]},"81":{"line":788,"type":"if","locations":[{"start":{"line":788,"column":2},"end":{"line":788,"column":2}},{"start":{"line":788,"column":2},"end":{"line":788,"column":2}}]},"82":{"line":808,"type":"if","locations":[{"start":{"line":808,"column":2},"end":{"line":808,"column":2}},{"start":{"line":808,"column":2},"end":{"line":808,"column":2}}]},"83":{"line":808,"type":"binary-expr","locations":[{"start":{"line":808,"column":79},"end":{"line":808,"column":86}},{"start":{"line":808,"column":90},"end":{"line":808,"column":92}}]},"84":{"line":809,"type":"if","locations":[{"start":{"line":809,"column":2},"end":{"line":809,"column":2}},{"start":{"line":809,"column":2},"end":{"line":809,"column":2}}]},"85":{"line":812,"type":"if","locations":[{"start":{"line":812,"column":2},"end":{"line":812,"column":2}},{"start":{"line":812,"column":2},"end":{"line":812,"column":2}}]},"86":{"line":812,"type":"binary-expr","locations":[{"start":{"line":812,"column":5},"end":{"line":812,"column":24}},{"start":{"line":812,"column":28},"end":{"line":812,"column":60}}]},"87":{"line":817,"type":"if","locations":[{"start":{"line":817,"column":2},"end":{"line":817,"column":2}},{"start":{"line":817,"column":2},"end":{"line":817,"column":2}}]},"88":{"line":837,"type":"if","locations":[{"start":{"line":837,"column":2},"end":{"line":837,"column":2}},{"start":{"line":837,"column":2},"end":{"line":837,"column":2}}]},"89":{"line":837,"type":"binary-expr","locations":[{"start":{"line":837,"column":79},"end":{"line":837,"column":86}},{"start":{"line":837,"column":90},"end":{"line":837,"column":92}}]},"90":{"line":838,"type":"if","locations":[{"start":{"line":838,"column":2},"end":{"line":838,"column":2}},{"start":{"line":838,"column":2},"end":{"line":838,"column":2}}]},"91":{"line":841,"type":"if","locations":[{"start":{"line":841,"column":2},"end":{"line":841,"column":2}},{"start":{"line":841,"column":2},"end":{"line":841,"column":2}}]},"92":{"line":841,"type":"binary-expr","locations":[{"start":{"line":841,"column":5},"end":{"line":841,"column":24}},{"start":{"line":841,"column":28},"end":{"line":841,"column":60}}]},"93":{"line":846,"type":"if","locations":[{"start":{"line":846,"column":2},"end":{"line":846,"column":2}},{"start":{"line":846,"column":2},"end":{"line":846,"column":2}}]},"94":{"line":866,"type":"if","locations":[{"start":{"line":866,"column":2},"end":{"line":866,"column":2}},{"start":{"line":866,"column":2},"end":{"line":866,"column":2}}]},"95":{"line":866,"type":"binary-expr","locations":[{"start":{"line":866,"column":79},"end":{"line":866,"column":86}},{"start":{"line":866,"column":90},"end":{"line":866,"column":92}}]},"96":{"line":867,"type":"if","locations":[{"start":{"line":867,"column":2},"end":{"line":867,"column":2}},{"start":{"line":867,"column":2},"end":{"line":867,"column":2}}]},"97":{"line":875,"type":"if","locations":[{"start":{"line":875,"column":2},"end":{"line":875,"column":2}},{"start":{"line":875,"column":2},"end":{"line":875,"column":2}}]},"98":{"line":875,"type":"binary-expr","locations":[{"start":{"line":875,"column":6},"end":{"line":875,"column":20}},{"start":{"line":875,"column":24},"end":{"line":875,"column":45}},{"start":{"line":875,"column":50},"end":{"line":875,"column":82}}]},"99":{"line":880,"type":"if","locations":[{"start":{"line":880,"column":2},"end":{"line":880,"column":2}},{"start":{"line":880,"column":2},"end":{"line":880,"column":2}}]},"100":{"line":905,"type":"binary-expr","locations":[{"start":{"line":905,"column":18},"end":{"line":905,"column":31}},{"start":{"line":905,"column":35},"end":{"line":905,"column":37}}]},"101":{"line":906,"type":"binary-expr","locations":[{"start":{"line":906,"column":20},"end":{"line":906,"column":47}},{"start":{"line":906,"column":51},"end":{"line":906,"column":64}}]},"102":{"line":926,"type":"if","locations":[{"start":{"line":926,"column":2},"end":{"line":926,"column":2}},{"start":{"line":926,"column":2},"end":{"line":926,"column":2}}]},"103":{"line":926,"type":"binary-expr","locations":[{"start":{"line":926,"column":5},"end":{"line":926,"column":42}},{"start":{"line":926,"column":46},"end":{"line":926,"column":68}}]},"104":{"line":931,"type":"if","locations":[{"start":{"line":931,"column":2},"end":{"line":931,"column":2}},{"start":{"line":931,"column":2},"end":{"line":931,"column":2}}]},"105":{"line":937,"type":"if","locations":[{"start":{"line":937,"column":2},"end":{"line":937,"column":2}},{"start":{"line":937,"column":2},"end":{"line":937,"column":2}}]},"106":{"line":937,"type":"binary-expr","locations":[{"start":{"line":937,"column":5},"end":{"line":937,"column":24}},{"start":{"line":937,"column":28},"end":{"line":937,"column":60}}]},"107":{"line":949,"type":"if","locations":[{"start":{"line":949,"column":2},"end":{"line":949,"column":2}},{"start":{"line":949,"column":2},"end":{"line":949,"column":2}}]},"108":{"line":962,"type":"if","locations":[{"start":{"line":962,"column":6},"end":{"line":962,"column":6}},{"start":{"line":962,"column":6},"end":{"line":962,"column":6}}]},"109":{"line":964,"type":"if","locations":[{"start":{"line":964,"column":6},"end":{"line":964,"column":6}},{"start":{"line":964,"column":6},"end":{"line":964,"column":6}}]},"110":{"line":969,"type":"if","locations":[{"start":{"line":969,"column":8},"end":{"line":969,"column":8}},{"start":{"line":969,"column":8},"end":{"line":969,"column":8}}]},"111":{"line":984,"type":"if","locations":[{"start":{"line":984,"column":4},"end":{"line":984,"column":4}},{"start":{"line":984,"column":4},"end":{"line":984,"column":4}}]},"112":{"line":1011,"type":"if","locations":[{"start":{"line":1011,"column":2},"end":{"line":1011,"column":2}},{"start":{"line":1011,"column":2},"end":{"line":1011,"column":2}}]},"113":{"line":1027,"type":"if","locations":[{"start":{"line":1027,"column":2},"end":{"line":1027,"column":2}},{"start":{"line":1027,"column":2},"end":{"line":1027,"column":2}}]},"114":{"line":1032,"type":"if","locations":[{"start":{"line":1032,"column":6},"end":{"line":1032,"column":6}},{"start":{"line":1032,"column":6},"end":{"line":1032,"column":6}}]},"115":{"line":1042,"type":"if","locations":[{"start":{"line":1042,"column":6},"end":{"line":1042,"column":6}},{"start":{"line":1042,"column":6},"end":{"line":1042,"column":6}}]},"116":{"line":1046,"type":"if","locations":[{"start":{"line":1046,"column":8},"end":{"line":1046,"column":8}},{"start":{"line":1046,"column":8},"end":{"line":1046,"column":8}}]},"117":{"line":1064,"type":"if","locations":[{"start":{"line":1064,"column":2},"end":{"line":1064,"column":2}},{"start":{"line":1064,"column":2},"end":{"line":1064,"column":2}}]},"118":{"line":1075,"type":"if","locations":[{"start":{"line":1075,"column":2},"end":{"line":1075,"column":2}},{"start":{"line":1075,"column":2},"end":{"line":1075,"column":2}}]}},"code":["\"use strict\"","","var inherits = require('util').inherits,","  f = require('util').format,","  EventEmitter = require('events').EventEmitter,","  BasicCursor = require('../cursor'),","  Logger = require('../connection/logger'),","  retrieveBSON = require('../connection/utils').retrieveBSON,","  MongoError = require('../error'),","  Server = require('./server'),","  assign = require('./shared').assign,","  clone = require('./shared').clone,","  cloneOptions = require('./shared').cloneOptions,","  createClientInfo = require('./shared').createClientInfo;","","var BSON = retrieveBSON();","","/**"," * @fileOverview The **Mongos** class is a class that represents a Mongos Proxy topology and is"," * used to construct connections."," *"," * @example"," * var Mongos = require('mongodb-core').Mongos"," *   , ReadPreference = require('mongodb-core').ReadPreference"," *   , assert = require('assert');"," *"," * var server = new Mongos([{host: 'localhost', port: 30000}]);"," * // Wait for the connection event"," * server.on('connect', function(server) {"," *   server.destroy();"," * });"," *"," * // Start connecting"," * server.connect();"," */","","var MongoCR = require('../auth/mongocr')","  , X509 = require('../auth/x509')","  , Plain = require('../auth/plain')","  , GSSAPI = require('../auth/gssapi')","  , SSPI = require('../auth/sspi')","  , ScramSHA1 = require('../auth/scram');","","//","// States","var DISCONNECTED = 'disconnected';","var CONNECTING = 'connecting';","var CONNECTED = 'connected';","var UNREFERENCED = 'unreferenced';","var DESTROYED = 'destroyed';","","function stateTransition(self, newState) {","  var legalTransitions = {","    'disconnected': [CONNECTING, DESTROYED, DISCONNECTED],","    'connecting': [CONNECTING, DESTROYED, CONNECTED, DISCONNECTED],","    'connected': [CONNECTED, DISCONNECTED, DESTROYED, UNREFERENCED],","    'unreferenced': [UNREFERENCED, DESTROYED],","    'destroyed': [DESTROYED]","  }","","  // Get current state","  var legalStates = legalTransitions[self.state];","  if(legalStates && legalStates.indexOf(newState) != -1) {","    self.state = newState;","  } else {","    self.logger.error(f('Pool with id [%s] failed attempted illegal state transition from [%s] to [%s] only following state allowed [%s]'","      , self.id, self.state, newState, legalStates));","  }","}","","//","// ReplSet instance id","var id = 1;","var handlers = ['connect', 'close', 'error', 'timeout', 'parseError'];","","/**"," * Creates a new Mongos instance"," * @class"," * @param {array} seedlist A list of seeds for the replicaset"," * @param {number} [options.haInterval=5000] The High availability period for replicaset inquiry"," * @param {Cursor} [options.cursorFactory=Cursor] The cursor factory class used for all query cursors"," * @param {number} [options.size=5] Server connection pool size"," * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled"," * @param {number} [options.keepAliveInitialDelay=0] Initial delay before TCP keep alive enabled"," * @param {number} [options.localThresholdMS=15] Cutoff latency point in MS for MongoS proxy selection"," * @param {boolean} [options.noDelay=true] TCP Connection no delay"," * @param {number} [options.connectionTimeout=1000] TCP Connection timeout setting"," * @param {number} [options.socketTimeout=0] TCP Socket timeout setting"," * @param {boolean} [options.singleBufferSerializtion=true] Serialize into single buffer, trade of peak memory for serialization speed"," * @param {boolean} [options.ssl=false] Use SSL for connection"," * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function."," * @param {Buffer} [options.ca] SSL Certificate store binary buffer"," * @param {Buffer} [options.crl] SSL Certificate revocation store binary buffer"," * @param {Buffer} [options.cert] SSL Certificate binary buffer"," * @param {Buffer} [options.key] SSL Key file binary buffer"," * @param {string} [options.passphrase] SSL Certificate pass phrase"," * @param {string} [options.servername=null] String containing the server name requested via TLS SNI."," * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates"," * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits"," * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types."," * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers."," * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit."," * @return {Mongos} A cursor instance"," * @fires Mongos#connect"," * @fires Mongos#reconnect"," * @fires Mongos#joined"," * @fires Mongos#left"," * @fires Mongos#failed"," * @fires Mongos#fullsetup"," * @fires Mongos#all"," * @fires Mongos#serverHeartbeatStarted"," * @fires Mongos#serverHeartbeatSucceeded"," * @fires Mongos#serverHeartbeatFailed"," * @fires Mongos#topologyOpening"," * @fires Mongos#topologyClosed"," * @fires Mongos#topologyDescriptionChanged"," * @property {string} type the topology type."," * @property {string} parserType the parser type used (c++ or js)."," */","var Mongos = function(seedlist, options) {","  options = options || {};","","  // Get replSet Id","  this.id = id++;","","  // Internal state","  this.s = {","    options: assign({}, options),","    // BSON instance","    bson: options.bson || new BSON([BSON.Binary, BSON.Code, BSON.DBRef, BSON.Decimal128,","      BSON.Double, BSON.Int32, BSON.Long, BSON.Map, BSON.MaxKey, BSON.MinKey,","      BSON.ObjectId, BSON.BSONRegExp, BSON.Symbol, BSON.Timestamp]),","    // Factory overrides","    Cursor: options.cursorFactory || BasicCursor,","    // Logger instance","    logger: Logger('Mongos', options),","    // Seedlist","    seedlist: seedlist,","    // Ha interval","    haInterval: options.haInterval ? options.haInterval : 10000,","    // Disconnect handler","    disconnectHandler: options.disconnectHandler,","    // Server selection index","    index: 0,","    // Connect function options passed in","    connectOptions: {},","    // Are we running in debug mode","    debug: typeof options.debug == 'boolean' ? options.debug : false,","    // localThresholdMS","    localThresholdMS: options.localThresholdMS || 15,","    // Client info","    clientInfo: createClientInfo(options),","    // Authentication context","    authenticationContexts: [],","  }","","  // Set the client info","  this.s.options.clientInfo = createClientInfo(options);","","  // Log info warning if the socketTimeout < haInterval as it will cause","  // a lot of recycled connections to happen.","  if(this.s.logger.isWarn()","    && this.s.options.socketTimeout != 0","    && this.s.options.socketTimeout < this.s.haInterval) {","      this.s.logger.warn(f('warning socketTimeout %s is less than haInterval %s. This might cause unnecessary server reconnections due to socket timeouts'","        , this.s.options.socketTimeout, this.s.haInterval));","  }","","  // All the authProviders","  this.authProviders = options.authProviders || {","      'mongocr': new MongoCR(this.s.bson), 'x509': new X509(this.s.bson)","    , 'plain': new Plain(this.s.bson), 'gssapi': new GSSAPI(this.s.bson)","    , 'sspi': new SSPI(this.s.bson), 'scram-sha-1': new ScramSHA1(this.s.bson)","  }","","  // Disconnected state","  this.state = DISCONNECTED;","","  // Current proxies we are connecting to","  this.connectingProxies = [];","  // Currently connected proxies","  this.connectedProxies = [];","  // Disconnected proxies","  this.disconnectedProxies = [];","  // Are we authenticating","  this.authenticating = false;","  // Index of proxy to run operations against","  this.index = 0;","  // High availability timeout id","  this.haTimeoutId = null;","  // Last ismaster","  this.ismaster = null;","","  // Add event listener","  EventEmitter.call(this);","}","","inherits(Mongos, EventEmitter);","","Object.defineProperty(Mongos.prototype, 'type', {","  enumerable:true, get: function() { return 'mongos'; }","});","","Object.defineProperty(Mongos.prototype, 'parserType', {","  enumerable:true, get: function() {","    return BSON.native ? \"c++\" : \"js\";","  }","});","","/**"," * Emit event if it exists"," * @method"," */","function emitSDAMEvent(self, event, description) {","  if(self.listeners(event).length > 0) {","    self.emit(event, description);","  }","}","","/**"," * Initiate server connect"," * @method"," * @param {array} [options.auth=null] Array of auth options to apply on connect"," */","Mongos.prototype.connect = function(options) {","  var self = this;","  // Add any connect level options to the internal state","  this.s.connectOptions = options || {};","  // Set connecting state","  stateTransition(this, CONNECTING);","  // Create server instances","  var servers = this.s.seedlist.map(function(x) {","    return new Server(assign({}, self.s.options, x, {","      authProviders: self.authProviders, reconnect:false, monitoring:false, inTopology: true","    }, {","      clientInfo: clone(self.s.clientInfo)","    }));","  });","","  // Emit the topology opening event","  emitSDAMEvent(this, 'topologyOpening', { topologyId: this.id });","","  // Start all server connections","  connectProxies(self, servers);","}","","function handleEvent(self) {","  return function() {","    if(self.state == DESTROYED) return;","    // Move to list of disconnectedProxies","    moveServerFrom(self.connectedProxies, self.disconnectedProxies, this);","    // Emit the left signal","    self.emit('left', 'mongos', this);","  }","}","","function handleInitialConnectEvent(self, event) {","  return function() {","    var _this = this;","","    // Destroy the instance","    if(self.state == DESTROYED) {","      // Move from connectingProxies","      moveServerFrom(self.connectingProxies, self.disconnectedProxies, this);","      return this.destroy();","    }","","    // Check the type of server","    if(event == 'connect') {","      // Do we have authentication contexts that need to be applied","      applyAuthenticationContexts(self, _this, function() {","        // Get last known ismaster","        self.ismaster = _this.lastIsMaster();","","        // Is this not a proxy, remove t","        if(self.ismaster.msg == 'isdbgrid') {","          // Add to the connectd list","          for(var i = 0; i < self.connectedProxies.length; i++) {","            if(self.connectedProxies[i].name == _this.name) {","              // Move from connectingProxies","              moveServerFrom(self.connectingProxies, self.disconnectedProxies, _this);","              _this.destroy();","              return self.emit('failed', _this);","            }","          }","","          // Remove the handlers","          for(i = 0; i < handlers.length; i++) {","            _this.removeAllListeners(handlers[i]);","          }","","          // Add stable state handlers","          _this.on('error', handleEvent(self, 'error'));","          _this.on('close', handleEvent(self, 'close'));","          _this.on('timeout', handleEvent(self, 'timeout'));","          _this.on('parseError', handleEvent(self, 'parseError'));","","          // Move from connecting proxies connected","          moveServerFrom(self.connectingProxies, self.connectedProxies, _this);","          // Emit the joined event","          self.emit('joined', 'mongos', _this);","        } else {","","          // Print warning if we did not find a mongos proxy","          if(self.s.logger.isWarn()) {","            var message = 'expected mongos proxy, but found replicaset member mongod for server %s';","            // We have a standalone server","            if(!self.ismaster.hosts) {","              message = 'expected mongos proxy, but found standalone mongod for server %s';","            }","","            self.s.logger.warn(f(message, _this.name));","          }","","          // This is not a mongos proxy, remove it completely","          removeProxyFrom(self.connectingProxies, _this);","          // Emit the left event","          self.emit('left', 'server', _this);","          // Emit failed event","          self.emit('failed', _this);","        }","      });","    } else {","      moveServerFrom(self.connectingProxies, self.disconnectedProxies, this);","      // Emit the left event","      self.emit('left', 'mongos', this);","      // Emit failed event","      self.emit('failed', this);","    }","","    // Trigger topologyMonitor","    if(self.connectingProxies.length == 0) {","      // Emit connected if we are connected","      if(self.connectedProxies.length > 0) {","        // Set the state to connected","        stateTransition(self, CONNECTED);","        // Emit the connect event","        self.emit('connect', self);","        self.emit('fullsetup', self);","        self.emit('all', self);","      } else if(self.disconnectedProxies.length == 0) {","        // Print warning if we did not find a mongos proxy","        if(self.s.logger.isWarn()) {","          self.s.logger.warn(f('no mongos proxies found in seed list, did you mean to connect to a replicaset'));","        }","","        // Emit the error that no proxies were found","        return self.emit('error', new MongoError('no mongos proxies found in seed list'));","      }","","      // Topology monitor","      topologyMonitor(self, {firstConnect:true});","    }","  };","}","","function connectProxies(self, servers) {","  // Update connectingProxies","  self.connectingProxies = self.connectingProxies.concat(servers);","","  // Index used to interleaf the server connects, avoiding","  // runtime issues on io constrained vm's","  var timeoutInterval = 0;","","  function connect(server, timeoutInterval) {","    setTimeout(function() {","      // Add event handlers","      server.once('close', handleInitialConnectEvent(self, 'close'));","      server.once('timeout', handleInitialConnectEvent(self, 'timeout'));","      server.once('parseError', handleInitialConnectEvent(self, 'parseError'));","      server.once('error', handleInitialConnectEvent(self, 'error'));","      server.once('connect', handleInitialConnectEvent(self, 'connect'));","      // SDAM Monitoring events","      server.on('serverOpening', function(e) { self.emit('serverOpening', e); });","      server.on('serverDescriptionChanged', function(e) { self.emit('serverDescriptionChanged', e); });","      server.on('serverClosed', function(e) { self.emit('serverClosed', e); });","      // Start connection","      server.connect(self.s.connectOptions);","    }, timeoutInterval);","  }","  // Start all the servers","  while(servers.length > 0) {","    connect(servers.shift(), timeoutInterval++);","  }","}","","function pickProxy(self) {","  // Get the currently connected Proxies","  var connectedProxies = self.connectedProxies.slice(0);","","  // Set lower bound","  var lowerBoundLatency = Number.MAX_VALUE;","","  // Determine the lower bound for the Proxies","  for(var i = 0; i < connectedProxies.length; i++) {","    if(connectedProxies[i].lastIsMasterMS < lowerBoundLatency) {","      lowerBoundLatency = connectedProxies[i].lastIsMasterMS;","    }","  }","","  // Filter out the possible servers","  connectedProxies = connectedProxies.filter(function(server) {","    if((server.lastIsMasterMS <= (lowerBoundLatency + self.s.localThresholdMS))","      && server.isConnected()) {","      return true;","    }","  });","","  // We have no connectedProxies pick first of the connected ones","  if(connectedProxies.length == 0) {","    return self.connectedProxies[0];","  }","","  // Get proxy","  var proxy = connectedProxies[self.index % connectedProxies.length];","  // Update the index","  self.index = (self.index + 1) % connectedProxies.length;","  // Return the proxy","  return proxy;","}","","function moveServerFrom(from, to, proxy) {","  for(var i = 0; i < from.length; i++) {","    if(from[i].name == proxy.name) {","      from.splice(i, 1);","    }","  }","","  for(i = 0; i < to.length; i++) {","    if(to[i].name == proxy.name) {","      to.splice(i, 1);","    }","  }","","  to.push(proxy);","}","","function removeProxyFrom(from, proxy) {","  for(var i = 0; i < from.length; i++) {","    if(from[i].name == proxy.name) {","      from.splice(i, 1);","    }","  }","}","","function reconnectProxies(self, proxies, callback) {","  // Count lefts","  var count = proxies.length;","","  // Handle events","  var _handleEvent = function(self, event) {","    return function() {","      var _self = this;","      count = count - 1;","","      // Destroyed","      if(self.state == DESTROYED || self.state == UNREFERENCED) {","        moveServerFrom(self.connectingProxies, self.disconnectedProxies, _self);","        return this.destroy();","      }","","      if(event == 'connect' && !self.authenticating) {","        // Do we have authentication contexts that need to be applied","        applyAuthenticationContexts(self, _self, function() {","          // Destroyed","          if(self.state == DESTROYED || self.state == UNREFERENCED) {","            moveServerFrom(self.connectingProxies, self.disconnectedProxies, _self);","            return _self.destroy();","          }","","          // Remove the handlers","          for(var i = 0; i < handlers.length; i++) {","            _self.removeAllListeners(handlers[i]);","          }","","          // Add stable state handlers","          _self.on('error', handleEvent(self, 'error'));","          _self.on('close', handleEvent(self, 'close'));","          _self.on('timeout', handleEvent(self, 'timeout'));","          _self.on('parseError', handleEvent(self, 'parseError'));","","          // Move to the connected servers","          moveServerFrom(self.disconnectedProxies, self.connectedProxies, _self);","          // Emit joined event","          self.emit('joined', 'mongos', _self);","        });","      } else if(event == 'connect' && self.authenticating) {","        // Move from connectingProxies","        moveServerFrom(self.connectingProxies, self.disconnectedProxies, _self);","        this.destroy();","      }","","      // Are we done finish up callback","      if(count == 0) {","        callback();","      }","    }","  }","","  // No new servers","  if(count == 0) {","    return callback();","  }","","  // Execute method","  function execute(_server, i) {","    setTimeout(function() {","      // Destroyed","      if(self.state == DESTROYED || self.state == UNREFERENCED) {","        return;","      }","","      // Create a new server instance","      var server = new Server(assign({}, self.s.options, {","        host: _server.name.split(':')[0],","        port: parseInt(_server.name.split(':')[1], 10)","      }, {","        authProviders: self.authProviders, reconnect:false, monitoring: false, inTopology: true","      }, {","        clientInfo: clone(self.s.clientInfo)","      }));","","      // Add temp handlers","      server.once('connect', _handleEvent(self, 'connect'));","      server.once('close', _handleEvent(self, 'close'));","      server.once('timeout', _handleEvent(self, 'timeout'));","      server.once('error', _handleEvent(self, 'error'));","      server.once('parseError', _handleEvent(self, 'parseError'));","","      // SDAM Monitoring events","      server.on('serverOpening', function(e) { self.emit('serverOpening', e); });","      server.on('serverDescriptionChanged', function(e) { self.emit('serverDescriptionChanged', e); });","      server.on('serverClosed', function(e) { self.emit('serverClosed', e); });","      server.connect(self.s.connectOptions);","    }, i);","  }","","  // Create new instances","  for(var i = 0; i < proxies.length; i++) {","    execute(proxies[i], i);","  }","}","","function applyAuthenticationContexts(self, server, callback) {","  if(self.s.authenticationContexts.length == 0) {","    return callback();","  }","","  // Copy contexts to ensure no modificiation in the middle of","  // auth process.","  var authContexts = self.s.authenticationContexts.slice(0);","","  // Apply one of the contexts","  function applyAuth(authContexts, server, callback) {","    if(authContexts.length == 0) return callback();","    // Get the first auth context","    var authContext = authContexts.shift();","    // Copy the params","    var customAuthContext = authContext.slice(0);","    // Push our callback handler","    customAuthContext.push(function(err) {","      applyAuth(authContexts, server, callback);","    });","","    // Attempt authentication","    server.auth.apply(server, customAuthContext)","  }","","  // Apply all auth contexts","  applyAuth(authContexts, server, callback);","}","","function topologyMonitor(self, options) {","  options = options || {};","","  // Set momitoring timeout","  self.haTimeoutId = setTimeout(function() {","    if(self.state == DESTROYED || self.state == UNREFERENCED) return;","    // If we have a primary and a disconnect handler, execute","    // buffered operations","    if(self.isConnected() && self.s.disconnectHandler) {","      self.s.disconnectHandler.execute();","    }","","    // Get the connectingServers","    var proxies = self.connectedProxies.slice(0);","    // Get the count","    var count = proxies.length;","","    // If the count is zero schedule a new fast","    function pingServer(_self, _server, cb) {","      // Measure running time","      var start = new Date().getTime();","","      // Emit the server heartbeat start","      emitSDAMEvent(self, 'serverHeartbeatStarted', { connectionId: _server.name });","","      // Execute ismaster","      _server.command('admin.$cmd', {","        ismaster:true","      }, {","        monitoring: true,","        socketTimeout: self.s.options.connectionTimeout || 2000,","      }, function(err, r) {","        if(self.state == DESTROYED || self.state == UNREFERENCED) {","          // Move from connectingProxies","          moveServerFrom(self.connectedProxies, self.disconnectedProxies, _server);","          _server.destroy();","          return cb(err, r);","        }","","        // Calculate latency","        var latencyMS = new Date().getTime() - start;","","        // We had an error, remove it from the state","        if(err) {","          // Emit the server heartbeat failure","          emitSDAMEvent(self, 'serverHeartbeatFailed', { durationMS: latencyMS, failure: err, connectionId: _server.name });","          // Move from connected proxies to disconnected proxies","          moveServerFrom(self.connectedProxies, self.disconnectedProxies, _server);","        } else {","          // Update the server ismaster","          _server.ismaster = r.result;","          _server.lastIsMasterMS = latencyMS;","","          // Server heart beat event","          emitSDAMEvent(self, 'serverHeartbeatSucceeded', { durationMS: latencyMS, reply: r.result, connectionId: _server.name });","        }","","        cb(err, r);","      });","    }","","    // No proxies initiate monitor again","    if(proxies.length == 0) {","      // Emit close event if any listeners registered","      if(self.listeners(\"close\").length > 0 && self.state == CONNECTING) {","        self.emit('error', new MongoError('no mongos proxy available'));","      } else {","        self.emit('close', self);","      }","","      // Attempt to connect to any unknown servers","      return reconnectProxies(self, self.disconnectedProxies, function() {","        if(self.state == DESTROYED || self.state == UNREFERENCED) return;","","        // Are we connected ? emit connect event","        if(self.state == CONNECTING && options.firstConnect) {","          self.emit('connect', self);","          self.emit('fullsetup', self);","          self.emit('all', self);","        } else if(self.isConnected()) {","          self.emit('reconnect', self);","        } else if(!self.isConnected() && self.listeners(\"close\").length > 0) {","          self.emit('close', self);","        }","","        // Perform topology monitor","        topologyMonitor(self);","      });","    }","","    // Ping all servers","    for(var i = 0; i < proxies.length; i++) {","      pingServer(self, proxies[i], function() {","        count = count - 1;","","        if(count == 0) {","          if(self.state == DESTROYED || self.state == UNREFERENCED) return;","","          // Attempt to connect to any unknown servers","          reconnectProxies(self, self.disconnectedProxies, function() {","            if(self.state == DESTROYED || self.state == UNREFERENCED) return;","            // Perform topology monitor","            topologyMonitor(self);","          });","        }","      });","    }","  }, self.s.haInterval);","}","","/**"," * Returns the last known ismaster document for this server"," * @method"," * @return {object}"," */","Mongos.prototype.lastIsMaster = function() {","  return this.ismaster;","}","","/**"," * Unref all connections belong to this server"," * @method"," */","Mongos.prototype.unref = function() {","  // Transition state","  stateTransition(this, UNREFERENCED);","  // Get all proxies","  var proxies = this.connectedProxies.concat(this.connectingProxies);","  proxies.forEach(function(x) {","    x.unref();","  });","","  clearTimeout(this.haTimeoutId);","}","","/**"," * Destroy the server connection"," * @param {boolean} [options.force=false] Force destroy the pool"," * @method"," */","Mongos.prototype.destroy = function(options) {","  // Transition state","  stateTransition(this, DESTROYED);","  // Get all proxies","  var proxies = this.connectedProxies.concat(this.connectingProxies);","  // Clear out any monitoring process","  if(this.haTimeoutId) clearTimeout(this.haTimeoutId);","  // Clear out authentication contexts","  this.s.authenticationContexts = [];","","  // Destroy all connecting servers","  proxies.forEach(function(x) {","    x.destroy(options);","  });","","  // Emit toplogy closing event","  emitSDAMEvent(this, 'topologyClosed', { topologyId: this.id });","}","","/**"," * Figure out if the server is connected"," * @method"," * @return {boolean}"," */","Mongos.prototype.isConnected = function() {","  return this.connectedProxies.length > 0;","}","","/**"," * Figure out if the server instance was destroyed by calling destroy"," * @method"," * @return {boolean}"," */","Mongos.prototype.isDestroyed = function() {","  return this.state == DESTROYED;","}","","//","// Operations","//","","// Execute write operation","var executeWriteOperation = function(self, op, ns, ops, options, callback) {","  if(typeof options == 'function') callback = options, options = {}, options = options || {};","  // Ensure we have no options","  options = options || {};","  // Pick a server","  var server = pickProxy(self);","  // No server found error out","  if(!server) return callback(new MongoError('no mongos proxy available'));","  // Execute the command","  server[op](ns, ops, options, callback);","}","","/**"," * Insert one or more documents"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {array} ops An array of documents to insert"," * @param {boolean} [options.ordered=true] Execute in order or out of order"," * @param {object} [options.writeConcern={}] Write concern for the operation"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","Mongos.prototype.insert = function(ns, ops, options, callback) {","  if(typeof options == 'function') callback = options, options = {}, options = options || {};","  if(this.state == DESTROYED) return callback(new MongoError(f('topology was destroyed')));","","  // Not connected but we have a disconnecthandler","  if(!this.isConnected() && this.s.disconnectHandler != null) {","    return this.s.disconnectHandler.add('insert', ns, ops, options, callback);","  }","","  // No mongos proxy available","  if(!this.isConnected()) {","    return callback(new MongoError('no mongos proxy available'));","  }","","  // Execute write operation","  executeWriteOperation(this, 'insert', ns, ops, options, callback);","}","","/**"," * Perform one or more update operations"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {array} ops An array of updates"," * @param {boolean} [options.ordered=true] Execute in order or out of order"," * @param {object} [options.writeConcern={}] Write concern for the operation"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","Mongos.prototype.update = function(ns, ops, options, callback) {","  if(typeof options == 'function') callback = options, options = {}, options = options || {};","  if(this.state == DESTROYED) return callback(new MongoError(f('topology was destroyed')));","","  // Not connected but we have a disconnecthandler","  if(!this.isConnected() && this.s.disconnectHandler != null) {","    return this.s.disconnectHandler.add('update', ns, ops, options, callback);","  }","","  // No mongos proxy available","  if(!this.isConnected()) {","    return callback(new MongoError('no mongos proxy available'));","  }","","  // Execute write operation","  executeWriteOperation(this, 'update', ns, ops, options, callback);","}","","/**"," * Perform one or more remove operations"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {array} ops An array of removes"," * @param {boolean} [options.ordered=true] Execute in order or out of order"," * @param {object} [options.writeConcern={}] Write concern for the operation"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","Mongos.prototype.remove = function(ns, ops, options, callback) {","  if(typeof options == 'function') callback = options, options = {}, options = options || {};","  if(this.state == DESTROYED) return callback(new MongoError(f('topology was destroyed')));","","  // Not connected but we have a disconnecthandler","  if(!this.isConnected() && this.s.disconnectHandler != null) {","    return this.s.disconnectHandler.add('remove', ns, ops, options, callback);","  }","","  // No mongos proxy available","  if(!this.isConnected()) {","    return callback(new MongoError('no mongos proxy available'));","  }","","  // Execute write operation","  executeWriteOperation(this, 'remove', ns, ops, options, callback);","}","","/**"," * Execute a command"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {object} cmd The command hash"," * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it"," * @param {Connection} [options.connection] Specify connection object to execute command against"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","Mongos.prototype.command = function(ns, cmd, options, callback) {","  if(typeof options == 'function') callback = options, options = {}, options = options || {};","  if(this.state == DESTROYED) return callback(new MongoError(f('topology was destroyed')));","  var self = this;","","  // Pick a proxy","  var server = pickProxy(self);","","  // Topology is not connected, save the call in the provided store to be","  // Executed at some point when the handler deems it's reconnected","  if((server == null || !server.isConnected()) && this.s.disconnectHandler != null) {","    return this.s.disconnectHandler.add('command', ns, cmd, options, callback);","  }","","  // No server returned we had an error","  if(server == null) {","    return callback(new MongoError('no mongos proxy available'));","  }","","  // Cloned options","  var clonedOptions = cloneOptions(options);","  clonedOptions.topology = self;","","  // Execute the command","  server.command(ns, cmd, clonedOptions, callback);","}","","/**"," * Perform one or more remove operations"," * @method"," * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)"," * @param {{object}|{Long}} cmd Can be either a command returning a cursor or a cursorId"," * @param {object} [options.batchSize=0] Batchsize for the operation"," * @param {array} [options.documents=[]] Initial documents list for cursor"," * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it"," * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {opResultCallback} callback A callback function"," */","Mongos.prototype.cursor = function(ns, cmd, cursorOptions) {","  cursorOptions = cursorOptions || {};","  var FinalCursor = cursorOptions.cursorFactory || this.s.Cursor;","  return new FinalCursor(this.s.bson, ns, cmd, cursorOptions, this, this.s.options);","}","","/**"," * Authenticate using a specified mechanism"," * @method"," * @param {string} mechanism The Auth mechanism we are invoking"," * @param {string} db The db we are invoking the mechanism against"," * @param {...object} param Parameters for the specific mechanism"," * @param {authResultCallback} callback A callback function"," */","Mongos.prototype.auth = function(mechanism, db) {","  var allArgs = Array.prototype.slice.call(arguments, 0).slice(0);","  var self = this;","  var args = Array.prototype.slice.call(arguments, 2);","  var callback = args.pop();","  var currentContextIndex = 0;","","  // If we don't have the mechanism fail","  if(this.authProviders[mechanism] == null && mechanism != 'default') {","    return callback(new MongoError(f(\"auth provider %s does not exist\", mechanism)));","  }","","  // Are we already authenticating, throw","  if(this.authenticating) {","    return callback(new MongoError('authentication or logout allready in process'));","  }","","  // Topology is not connected, save the call in the provided store to be","  // Executed at some point when the handler deems it's reconnected","  if(!self.isConnected() && self.s.disconnectHandler != null) {","    return self.s.disconnectHandler.add('auth', db, allArgs, {}, callback);","  }","","  // Set to authenticating","  this.authenticating = true;","  // All errors","  var errors = [];","","  // Get all the servers","  var servers = this.connectedProxies.slice(0);","  // No servers return","  if(servers.length == 0) {","    this.authenticating = false;","    callback(null, true);","  }","","  // Authenticate","  function auth(server) {","    // Arguments without a callback","    var argsWithoutCallback = [mechanism, db].concat(args.slice(0));","    // Create arguments","    var finalArguments = argsWithoutCallback.concat([function(err) {","      count = count - 1;","      // Save all the errors","      if(err) errors.push({name: server.name, err: err});","      // We are done","      if(count == 0) {","        // Auth is done","        self.authenticating = false;","","        // Return the auth error","        if(errors.length) {","          // Remove the entry from the stored authentication contexts","          self.s.authenticationContexts.splice(currentContextIndex, 0);","          // Return error","          return callback(MongoError.create({","            message: 'authentication fail', errors: errors","          }), false);","        }","","        // Successfully authenticated session","        callback(null, self);","      }","    }]);","","    // Execute the auth only against non arbiter servers","    if(!server.lastIsMaster().arbiterOnly) {","      server.auth.apply(server, finalArguments);","    }","  }","","  // Save current context index","  currentContextIndex = this.s.authenticationContexts.length;","  // Store the auth context and return the last index","  this.s.authenticationContexts.push([mechanism, db].concat(args.slice(0)));","","  // Get total count","  var count = servers.length;","  // Authenticate against all servers","  while(servers.length > 0) {","    auth(servers.shift());","  }","}","","/**"," * Logout from a database"," * @method"," * @param {string} db The db we are logging out from"," * @param {authResultCallback} callback A callback function"," */","Mongos.prototype.logout = function(dbName, callback) {","  var self = this;","  // Are we authenticating or logging out, throw","  if(this.authenticating) {","    throw new MongoError('authentication or logout allready in process');","  }","","  // Ensure no new members are processed while logging out","  this.authenticating = true;","","  // Remove from all auth providers (avoid any reaplication of the auth details)","  var providers = Object.keys(this.authProviders);","  for(var i = 0; i < providers.length; i++) {","    this.authProviders[providers[i]].logout(dbName);","  }","","  // Now logout all the servers","  var servers = this.connectedProxies.slice(0);","  var count = servers.length;","  if(count == 0) return callback();","  var errors = [];","","  function logoutServer(_server, cb) {","    _server.logout(dbName, function(err) {","      if(err) errors.push({name: _server.name, err: err});","      cb();","    });","  }","","  // Execute logout on all server instances","  for(i = 0; i < servers.length; i++) {","    logoutServer(servers[i], function() {","      count = count - 1;","","      if(count == 0) {","        // Do not block new operations","        self.authenticating = false;","        // If we have one or more errors","        if(errors.length) return callback(MongoError.create({","          message: f('logout failed against db %s', dbName), errors: errors","        }), false);","","        // No errors","        callback();","      }","    })","  }","}","","/**"," * Get server"," * @method"," * @return {Server}"," */","Mongos.prototype.getServer = function() {","  var server = pickProxy(this);","  if(this.s.debug) this.emit('pickedServer', null, server);","  return server;","}","","/**"," * Get a direct connection"," * @method"," * @return {Connection}"," */","Mongos.prototype.getConnection = function() {","  var server = this.getServer();","  if(server) return server.getConnection();","}","","/**"," * All raw connections"," * @method"," * @return {Connection[]}"," */","Mongos.prototype.connections = function() {","  var connections = [];","","  for(var i = 0; i < this.connectedProxies.length; i++) {","    connections = connections.concat(this.connectedProxies[i].connections());","  }","","  return connections;","}","","/**"," * A mongos connect event, used to verify that the connection is up and running"," *"," * @event Mongos#connect"," * @type {Mongos}"," */","","/**"," * A mongos reconnect event, used to verify that the mongos topology has reconnected"," *"," * @event Mongos#reconnect"," * @type {Mongos}"," */","","/**"," * A mongos fullsetup event, used to signal that all topology members have been contacted."," *"," * @event Mongos#fullsetup"," * @type {Mongos}"," */","","/**"," * A mongos all event, used to signal that all topology members have been contacted."," *"," * @event Mongos#all"," * @type {Mongos}"," */","","/**"," * A server member left the mongos list"," *"," * @event Mongos#left"," * @type {Mongos}"," * @param {string} type The type of member that left (mongos)"," * @param {Server} server The server object that left"," */","","/**"," * A server member joined the mongos list"," *"," * @event Mongos#joined"," * @type {Mongos}"," * @param {string} type The type of member that left (mongos)"," * @param {Server} server The server object that joined"," */","","/**"," * A server opening SDAM monitoring event"," *"," * @event Mongos#serverOpening"," * @type {object}"," */","","/**"," * A server closed SDAM monitoring event"," *"," * @event Mongos#serverClosed"," * @type {object}"," */","","/**"," * A server description SDAM change monitoring event"," *"," * @event Mongos#serverDescriptionChanged"," * @type {object}"," */","","/**"," * A topology open SDAM event"," *"," * @event Mongos#topologyOpening"," * @type {object}"," */","","/**"," * A topology closed SDAM event"," *"," * @event Mongos#topologyClosed"," * @type {object}"," */","","/**"," * A topology structure SDAM change event"," *"," * @event Mongos#topologyDescriptionChanged"," * @type {object}"," */","","/**"," * A topology serverHeartbeatStarted SDAM event"," *"," * @event Mongos#serverHeartbeatStarted"," * @type {object}"," */","","/**"," * A topology serverHeartbeatFailed SDAM event"," *"," * @event Mongos#serverHeartbeatFailed"," * @type {object}"," */","","/**"," * A topology serverHeartbeatSucceeded SDAM change event"," *"," * @event Mongos#serverHeartbeatSucceeded"," * @type {object}"," */","","module.exports = Mongos;",""],"l":{"3":1,"16":1,"37":1,"46":1,"47":1,"48":1,"49":1,"50":1,"52":1,"53":0,"62":0,"63":0,"64":0,"66":0,"73":1,"74":1,"120":1,"121":0,"124":0,"127":0,"158":0,"162":0,"165":0,"170":0,"177":0,"180":0,"182":0,"184":0,"186":0,"188":0,"190":0,"192":0,"195":0,"198":1,"200":1,"201":12,"204":1,"206":12,"214":1,"215":0,"216":0,"225":1,"226":0,"228":0,"230":0,"232":0,"233":0,"241":0,"244":0,"247":1,"248":0,"249":0,"251":0,"253":0,"257":1,"258":0,"259":0,"262":0,"264":0,"265":0,"269":0,"271":0,"273":0,"276":0,"278":0,"279":0,"281":0,"282":0,"283":0,"288":0,"289":0,"293":0,"294":0,"295":0,"296":0,"299":0,"301":0,"305":0,"306":0,"308":0,"309":0,"312":0,"316":0,"318":0,"320":0,"324":0,"326":0,"328":0,"332":0,"334":0,"336":0,"338":0,"339":0,"340":0,"341":0,"343":0,"344":0,"348":0,"352":0,"357":1,"359":0,"363":0,"365":1,"366":0,"368":0,"369":0,"370":0,"371":0,"372":0,"374":0,"375":0,"376":0,"378":0,"382":0,"383":0,"387":1,"389":0,"392":0,"395":0,"396":0,"397":0,"402":0,"403":0,"405":0,"410":0,"411":0,"415":0,"417":0,"419":0,"422":1,"423":0,"424":0,"425":0,"429":0,"430":0,"431":0,"435":0,"438":1,"439":0,"440":0,"441":0,"446":1,"448":0,"451":0,"452":0,"453":0,"454":0,"457":0,"458":0,"459":0,"462":0,"464":0,"466":0,"467":0,"468":0,"472":0,"473":0,"477":0,"478":0,"479":0,"480":0,"483":0,"485":0,"487":0,"489":0,"490":0,"494":0,"495":0,"501":0,"502":0,"506":1,"507":0,"509":0,"510":0,"514":0,"524":0,"525":0,"526":0,"527":0,"528":0,"531":0,"532":0,"533":0,"534":0,"539":0,"540":0,"544":1,"545":0,"546":0,"551":0,"554":1,"555":0,"557":0,"559":0,"561":0,"562":0,"566":0,"570":0,"573":1,"574":0,"577":0,"578":0,"581":0,"582":0,"586":0,"588":0,"591":1,"593":0,"596":0,"599":0,"605":0,"607":0,"608":0,"609":0,"613":0,"616":0,"618":0,"620":0,"623":0,"624":0,"627":0,"630":0,"635":0,"637":0,"638":0,"640":0,"644":0,"645":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"659":0,"664":0,"665":0,"666":0,"668":0,"669":0,"672":0,"673":0,"675":0,"688":1,"689":0,"696":1,"698":0,"700":0,"701":0,"702":0,"705":0,"713":1,"715":0,"717":0,"719":0,"721":0,"724":0,"725":0,"729":0,"737":1,"738":0,"746":1,"747":0,"755":1,"756":0,"758":0,"760":0,"762":0,"764":0,"778":1,"779":0,"780":0,"783":0,"784":0,"788":0,"789":0,"793":0,"807":1,"808":0,"809":0,"812":0,"813":0,"817":0,"818":0,"822":0,"836":1,"837":0,"838":0,"841":0,"842":0,"846":0,"847":0,"851":0,"865":1,"866":0,"867":0,"868":0,"871":0,"875":0,"876":0,"880":0,"881":0,"885":0,"886":0,"889":0,"904":1,"905":0,"906":0,"907":0,"918":1,"919":0,"920":0,"921":0,"922":0,"923":0,"926":0,"927":0,"931":0,"932":0,"937":0,"938":0,"942":0,"944":0,"947":0,"949":0,"950":0,"951":0,"955":1,"957":0,"959":0,"960":0,"962":0,"964":0,"966":0,"969":0,"971":0,"973":0,"979":0,"984":0,"985":0,"990":0,"992":0,"995":0,"997":0,"998":0,"1008":1,"1009":0,"1011":0,"1012":0,"1016":0,"1019":0,"1020":0,"1021":0,"1025":0,"1026":0,"1027":0,"1028":0,"1030":1,"1031":0,"1032":0,"1033":0,"1038":0,"1039":0,"1040":0,"1042":0,"1044":0,"1046":0,"1051":0,"1062":1,"1063":0,"1064":0,"1065":0,"1073":1,"1074":0,"1075":0,"1083":1,"1084":0,"1086":0,"1087":0,"1090":0,"1202":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/test1.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/test1.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":27,"loc":{"start":{"line":27,"column":21},"end":{"line":27,"column":39}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":14},"end":{"line":29,"column":25}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":41},"end":{"line":30,"column":58}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"2":{"start":{"line":4,"column":0},"end":{"line":6,"column":3}},"3":{"start":{"line":27,"column":0},"end":{"line":70,"column":3}},"4":{"start":{"line":29,"column":2},"end":{"line":33,"column":10}},"5":{"start":{"line":30,"column":4},"end":{"line":32,"column":7}},"6":{"start":{"line":31,"column":6},"end":{"line":31,"column":27}},"7":{"start":{"line":72,"column":0},"end":{"line":72,"column":17}}},"branchMap":{},"code":["var Server = require('./lib/topologies/server');","","// Attempt to connect","var server = new Server({","  host: 'localhost', port: 27017, socketTimeout: 500","});","","// function executeCursors(_server, cb) {","//   var count = 100;","//","//   for(var i = 0; i < 100; i++) {","//     // Execute the write","//     var cursor = _server.cursor('test.test', {","//         find: 'test.test'","//       , query: {a:1}","//     }, {readPreference: new ReadPreference('secondary')});","//","//     // Get the first document","//     cursor.next(function(err, doc) {","//       count = count - 1;","//       if(err) console.dir(err)","//       if(count == 0) return cb();","//     });","//   }","// }","","server.on('connect', function(_server) {","","  setInterval(function() {","    _server.insert('test.test', [{a:1}], function(err, r) {","      console.log(\"insert\")","    });","  }, 1000)","  // console.log(\"---------------------------------- 0\")","  // // Attempt authentication","  // _server.auth('scram-sha-1', 'admin', 'root', 'root', function(err, r) {","  //   console.log(\"---------------------------------- 1\")","  //   // console.dir(err)","  //   // console.dir(r)","  //","  //   _server.insert('test.test', [{a:1}], function(err, r) {","  //     console.log(\"---------------------------------- 2\")","  //     console.dir(err)","  //     if(r)console.dir(r.result)","  //     var name = null;","  //","  //     _server.on('joined', function(_t, _server) {","  //       if(name == _server.name) {","  //         console.log(\"=========== joined :: \" + _t + \" :: \" + _server.name)","  //         executeCursors(_server, function() {","  //         });","  //       }","  //     })","  //","  //     // var s = _server.s.replicaSetState.secondaries[0];","  //     // s.destroy({emitClose:true});","  //     executeCursors(_server, function() {","  //       console.log(\"============== 0\")","  //       // Attempt to force a server reconnect","  //       var s = _server.s.replicaSetState.secondaries[0];","  //       name = s.name;","  //       s.destroy({emitClose:true});","  //       // console.log(\"============== 1\")","  //","  //       // _server.destroy();","  //       // test.done();","  //     });","  //   });","  // });","});","","server.connect();",""],"l":{"1":1,"4":1,"27":1,"29":0,"30":0,"31":0,"72":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/test34.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/test34.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":21},"end":{"line":13,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":27}},"2":{"start":{"line":5,"column":0},"end":{"line":10,"column":3}},"3":{"start":{"line":13,"column":0},"end":{"line":33,"column":3}},"4":{"start":{"line":14,"column":2},"end":{"line":14,"column":21}},"5":{"start":{"line":16,"column":2},"end":{"line":28,"column":4}},"6":{"start":{"line":30,"column":2},"end":{"line":32,"column":5}},"7":{"start":{"line":31,"column":4},"end":{"line":31,"column":31}},"8":{"start":{"line":35,"column":0},"end":{"line":35,"column":17}}},"branchMap":{},"code":["var Server = require('./').Server","  , bson = require('bson');","","// Attempt to connect","var server = new Server({","    host: 'localhost'","  , port: 27017","  , size: 10","  , bson: new bson()","});","","// Add event listeners","server.on('connect', function(server) {","  var db = 'develop';","","  const cmd = {","    \"find\": \"develop.user\",","    \"filter\": {","      \"$or\": [","        { \"provider\": \"google\", \"providerData.id\": \"placeholder\" },","        { \"additionalProvidersData.google.id\": \"placeholder\" },","        { \"email\": \"placeholder\" }","      ]","    },","    \"limit\": 1,","    \"projection\": {},","    \"sort\": {}","  };","  ","  server.command(\"develop.$cmd\", cmd, {}, (err, response) => {","    console.log(err, response);","  });","});","","server.connect();",""],"l":{"1":1,"5":1,"13":1,"14":0,"16":0,"30":0,"31":0,"35":1}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/t.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/t.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":25},"end":{"line":13,"column":42}}}},"statementMap":{"1":{"start":{"line":1,"column":4},"end":{"line":2,"column":31}},"2":{"start":{"line":5,"column":4},"end":{"line":10,"column":7}},"3":{"start":{"line":13,"column":4},"end":{"line":33,"column":7}},"4":{"start":{"line":14,"column":6},"end":{"line":14,"column":25}},"5":{"start":{"line":16,"column":6},"end":{"line":28,"column":8}},"6":{"start":{"line":30,"column":6},"end":{"line":32,"column":9}},"7":{"start":{"line":31,"column":8},"end":{"line":31,"column":35}}},"branchMap":{},"code":["    var Server = require('../../../lib/topologies/server')","      , bson = require('bson');","","    // Attempt to connect","    var server = new Server({","        host: configuration.host","      , port: configuration.port","      , size: 10","      , bson: new bson()","    });","","    // Add event listeners","    server.on('connect', function(server) {","      var db = 'develop';","  ","      const cmd = {","        \"find\": \"user\",","        \"filter\": {","          \"$or\": [","            { \"provider\": \"google\", \"providerData.id\": \"placeholder\" },","            { \"additionalProvidersData.google.id\": \"placeholder\" },","            { \"email\": \"placeholder\" }","          ]","        },","        \"limit\": 1,","        \"projection\": {},","        \"sort\": {}","      };","      ","      server.command(db + \".$cmd\", cmd, {}, (err, response) => {","        console.log(err, response);","      });","    });","",""],"l":{"1":2,"5":0,"13":0,"14":0,"16":0,"30":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/tools/smoke_plugin.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb-core/node_modules/mongodb-core/lib/tools/smoke_plugin.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":25},"end":{"line":6,"column":54}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":16},"end":{"line":11,"column":41}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":15},"end":{"line":16,"column":40}}},"4":{"name":"(anonymous_4)","line":28,"loc":{"start":{"line":28,"column":16},"end":{"line":28,"column":40}}},"5":{"name":"(anonymous_5)","line":29,"loc":{"start":{"line":29,"column":60},"end":{"line":29,"column":71}}},"6":{"name":"(anonymous_6)","line":36,"loc":{"start":{"line":36,"column":34},"end":{"line":36,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":23}},"2":{"start":{"line":6,"column":0},"end":{"line":59,"column":2}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":37}},"4":{"start":{"line":8,"column":2},"end":{"line":8,"column":24}},"5":{"start":{"line":10,"column":2},"end":{"line":33,"column":4}},"6":{"start":{"line":12,"column":6},"end":{"line":12,"column":34}},"7":{"start":{"line":13,"column":6},"end":{"line":13,"column":37}},"8":{"start":{"line":14,"column":6},"end":{"line":14,"column":17}},"9":{"start":{"line":17,"column":6},"end":{"line":24,"column":9}},"10":{"start":{"line":25,"column":6},"end":{"line":25,"column":37}},"11":{"start":{"line":26,"column":6},"end":{"line":26,"column":17}},"12":{"start":{"line":29,"column":6},"end":{"line":31,"column":9}},"13":{"start":{"line":30,"column":8},"end":{"line":30,"column":19}},"14":{"start":{"line":36,"column":2},"end":{"line":55,"column":5}},"15":{"start":{"line":38,"column":4},"end":{"line":47,"column":5}},"16":{"start":{"line":39,"column":6},"end":{"line":46,"column":9}},"17":{"start":{"line":50,"column":4},"end":{"line":50,"column":62}},"18":{"start":{"line":53,"column":4},"end":{"line":53,"column":29}},"19":{"start":{"line":54,"column":4},"end":{"line":54,"column":20}},"20":{"start":{"line":57,"column":2},"end":{"line":57,"column":31}},"21":{"start":{"line":58,"column":2},"end":{"line":58,"column":23}}},"branchMap":{},"code":["var fs = require('fs');","","/* Note: because this plugin uses process.on('uncaughtException'), only one"," * of these can exist at any given time. This plugin and anything else that"," * uses process.on('uncaughtException') will conflict. */","exports.attachToRunner = function(runner, outputFile) {","  var smokeOutput = { results : [] };","  var runningTests = {};","","  var integraPlugin = {","    beforeTest: function(test, callback) {","      test.startTime = Date.now();","      runningTests[test.name] = test;","      callback();","    },","    afterTest: function(test, callback) {","      smokeOutput.results.push({","        status: test.status,","        start: test.startTime,","        end: Date.now(),","        test_file: test.name,","        exit_code: 0,","        url: \"\"","      });","      delete runningTests[test.name];","      callback();","    },","    beforeExit: function(obj, callback) {","      fs.writeFile(outputFile, JSON.stringify(smokeOutput), function() {","        callback();","      });","    }","  };","","  // In case of exception, make sure we write file","  process.on('uncaughtException', function(err) {","    // Mark all currently running tests as failed","    for (var testName in runningTests) {","      smokeOutput.results.push({","        status: \"fail\",","        start: runningTests[testName].startTime,","        end: Date.now(),","        test_file: testName,","        exit_code: 0,","        url: \"\"","      });","    }","","    // write file","    fs.writeFileSync(outputFile, JSON.stringify(smokeOutput));","","    // Standard NodeJS uncaught exception handler","    console.error(err.stack);","    process.exit(1);","  });","","  runner.plugin(integraPlugin);","  return integraPlugin;","};",""],"l":{"1":1,"6":1,"7":0,"8":0,"10":0,"12":0,"13":0,"14":0,"17":0,"25":0,"26":0,"29":0,"30":0,"36":0,"38":0,"39":0,"50":0,"53":0,"54":0,"57":0,"58":0}}}